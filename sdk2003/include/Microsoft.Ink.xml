<?xml version="1.0"?>
<!-- ******************************************************************************
**   Microsoft Windows                                                       **
**   Copyright (C) Microsoft Corporation, 2002                               **
**                                                                           **
**   File: microsoft.ink.xml                                                 **
**       Microsoft TabletPC API Documentation                                **
**                                                                           **
******************************************************************************** -->
<doc>
	<assembly>
		<name>Microsoft.Ink</name>
	</assembly>
	<members><member name="T:Microsoft.Ink.InkOverlayEditingMode">
			<summary>Defines values that specify the behavior mode of the InkOverlay object.</summary>
		</member>
		<member name="F:Microsoft.Ink.InkOverlayEditingMode.Ink">
			<summary>The control is in ink collection mode.</summary>
		</member>
		<member name="F:Microsoft.Ink.InkOverlayEditingMode.Delete">
			<summary>The control is in stroke deletion mode.</summary>
		</member>
		<member name="T:Microsoft.Ink.InkOverlayEraserMode">
			<summary>Defines values that specify the way ink is erased from the InkOverlay object.</summary>
		</member>
		<member name="F:Microsoft.Ink.InkOverlayEraserMode.StrokeErase">
			<summary>Specifies that ink be erased by stroke.</summary>
		</member>
		<member name="F:Microsoft.Ink.InkOverlayEraserMode.PointErase">
			<summary>Specifies that ink be erased by point.</summary>
		</member>
		<member name="T:Microsoft.Ink.InkOverlayAttachMode">
			<summary>Defines values that specify where to attach the new InkOverlay object - behind or in front of the active layer.</summary>
		</member>
		<member name="F:Microsoft.Ink.InkOverlayAttachMode.Behind">
			<summary>Attach the new InkOverlay object behind the active window.</summary>
		</member>
		<member name="F:Microsoft.Ink.InkOverlayAttachMode.InFront">
			<summary>Attach the new InkOverlay object in front of the active window.</summary>
		</member>
		<member name="T:Microsoft.Ink.SelectionHitResult">
			<summary>Defines values that specify which part of a selection, if any, was hit during a hit test.</summary>
		</member>
		<member name="F:Microsoft.Ink.SelectionHitResult.None">
			<summary>No part of the selection was hit.</summary>
		</member>
		<member name="F:Microsoft.Ink.SelectionHitResult.Northwest">
			<summary>Northwest corner sizing handle was hit.</summary>
		</member>
		<member name="F:Microsoft.Ink.SelectionHitResult.Southeast">
			<summary>Southeast corner sizing handle was hit.</summary>
		</member>
		<member name="F:Microsoft.Ink.SelectionHitResult.Northeast">
			<summary>Northeast corner sizing handle was hit.</summary>
		</member>
		<member name="F:Microsoft.Ink.SelectionHitResult.Southwest">
			<summary>Southwest corner sizing handle was hit.</summary>
		</member>
		<member name="F:Microsoft.Ink.SelectionHitResult.East">
			<summary>East side sizing handle was hit.</summary>
		</member>
		<member name="F:Microsoft.Ink.SelectionHitResult.West">
			<summary>West side sizing handle was hit.</summary>
		</member>
		<member name="F:Microsoft.Ink.SelectionHitResult.North">
			<summary>North side sizing handle was hit.</summary>
		</member>
		<member name="F:Microsoft.Ink.SelectionHitResult.South">
			<summary>South side sizing handle was hit.</summary>
		</member>
		<member name="F:Microsoft.Ink.SelectionHitResult.Selection">
			<summary>Selection itself was hit (no selection handle was hit).</summary>
		</member>
		<member name="T:Microsoft.Ink.InkOverlay">
			<summary>Specifies the creation of a new InkOverlay object.</summary>
			<returns>This method constructs a new InkOverlay object.</returns>
		</member>
		<member name="P:Microsoft.Ink.InkOverlay.Handle">
			<summary>Returns or sets the handle value of the window on which ink is drawn.</summary><returns>This property returns the pointer that specifies the handle value of the window on which ink is drawn.</returns></member>
		<member name="P:Microsoft.Ink.InkOverlay.AutoRedraw">
			<summary>Returns or sets a value that specifies whether the InkCollector will repaint when the window is invalidated.</summary><returns>This property returns the Boolean value that specifies whether the InkCollector will repaint when the window is invalidated.</returns></member>
		<member name="P:Microsoft.Ink.InkOverlay.DynamicRendering">
			<summary>Returns or sets the value that specifies whether ink is rendered as it is drawn.</summary><returns>This property returns the Boolean value that specifies whether ink is rendered as it is drawn.</returns></member>
		<member name="P:Microsoft.Ink.InkOverlay.CollectingInk">
			<summary>Returns the value that specifies whether ink is currently being drawn.</summary><returns>This property returns the Boolean value that specifies whether ink is being drawn.</returns></member>
		<member name="P:Microsoft.Ink.InkOverlay.DefaultDrawingAttributes">
			<summary>Returns or sets the default drawing attributes to use when drawing and displaying ink.</summary><returns>This property returns the default DrawingAttributes object, which specifies the drawing attributes used when drawing and displaying ink.</returns></member>
		<member name="P:Microsoft.Ink.InkOverlay.Renderer">
			<summary>Returns or sets the Renderer object that is used to draw ink.</summary><returns>This property returns the Renderer object that is used to draw the ink.</returns></member>
		<member name="P:Microsoft.Ink.InkOverlay.Ink">
			<summary>Returns or sets the Ink object that is associated with an InkCollector object, an InkOverlay object, or a InkPicture control.</summary><returns>This property returns the Ink object that is associated with an InkCollector object, an InkOverlay object, or an InkPicture control.</returns></member>
		<member name="P:Microsoft.Ink.InkOverlay.Enabled">
			<summary>Returns or sets a value that specifies whether the InkCollector or InkOverlay objects will collect pen input (in-air packets, cursor in range events, and so on).</summary><returns>This property returns the Boolean value that specifies whether the InkCollector will collect pen input.</returns></member>
		<member name="P:Microsoft.Ink.InkOverlay.DesiredPacketDescription">
			<summary>Returns or sets the desired packet description of the InkCollector.</summary><returns>This property returns an array of PacketPropertyGuids objects, which specify the properties of the packets collected by the InkCollector.

The default value is {X, Y, NormalPressure}</returns></member>
		<member name="P:Microsoft.Ink.InkOverlay.Tablet">
			<summary>Returns the tablet device to which a cursor belongs, or that an InkCollector object is currently using to collect cursor input.</summary><returns>This property returns the Tablet object to which the cursor belongs, or that an InkCollector object is currently using to collect cursor input.</returns></member>
		<member name="P:Microsoft.Ink.InkOverlay.SupportHighContrastInk">
			<summary>Returns or sets a value that specifies whether ink will be rendered as just one color, Color = COLOR_WINDOWTEXT, when the system is in High Contrast mode.</summary><returns>This property returns the Boolean value that specifies whether ink will be rendered as just one color, Color = COLOR_WINDOWTEXT, when the system is in High Contrast mode.</returns></member>
		<member name="P:Microsoft.Ink.InkOverlay.SupportHighContrastSelectionUI">
			<summary>Returns or sets a value that specifies whether all selection UI (selection bounding box, selection handles) will be drawn in high contrast when the system is in High Contrast mode.</summary>
			<returns>This property returns the Boolean value that specifies whether all selection UI will render in high contrast when the system is in High Contrast mode.</returns>
		</member>
		<member name="P:Microsoft.Ink.InkOverlay.MarginX">
			<summary>Returns or sets the x-axis margin around the window rectangle, in screen coordinates.</summary><returns>This property returns a signed 32-bit number that indicates the x-axis margin around the window rectangle.</returns></member>
		<member name="P:Microsoft.Ink.InkOverlay.MarginY">
			<summary>Returns or sets the y-axis margin around the window rectangle, in screen coordinates.</summary><returns>This property returns a signed 32-bit number that indicates the y-axis margin around the window rectangle.</returns></member>
		<member name="P:Microsoft.Ink.InkOverlay.AttachMode">
			<summary>Returns or sets the value that specifies whether the object is attached behind or in front of the given window.</summary>
			<returns>This property returns the value of the InkOverlayAttachMode enumeration type, which specifies whether the InkOverlay object is attached behind or in front of the given window.</returns>
		</member>
		<member name="P:Microsoft.Ink.InkOverlay.EditingMode">
			<summary>Returns or sets a value that specifies whether the object/control is in ink mode, deletion mode, or selecting/editing mode.</summary>
			<returns>This property returns one of the values from the InkOverlayEditingMode Enumeration enumeration type, which specifies whether the control is in ink mode, deletion mode, or selection/editing mode.</returns>
		</member>
		<member name="P:Microsoft.Ink.InkOverlay.EraserMode">
			<summary>Returns or sets the value that specifies whether ink is erased by stroke or by point.</summary>
			<returns>This property returns a value from the InkOverlayEraserMode enumeration type, which specifies how ink is erased from the control.</returns>
		</member>
		<member name="P:Microsoft.Ink.InkOverlay.EraserWidth">
			<summary>Returns or sets the value that specifies width of the eraser pen tip.</summary>
			<returns>This property returns a signed 32-bit integer that specifies the width of the eraser pen tip.</returns>
		</member>
		<member name="P:Microsoft.Ink.InkOverlay.Selection">
			<summary>Returns the collection of strokes that are currently selected inside the control.</summary>
			<returns>This property returns the collection of strokes that are currently selected inside the control.</returns>
		</member>
		<member name="E:Microsoft.Ink.InkOverlay.CursorDown">
			<summary>Occurs when the cursor tip contacts the digitizing tablet surface.</summary><param name="sender">[in] Specifies the source InkCollector of this event.</param><param name="e">[in] Specifies the InkCollectorCursorDownEventArgs object that contains the event data.</param><param name="Cursor">[in] Automation only. Specifies the IInkCursor object that is touching the tablet surface.</param><param name="Stroke">[in] Automation only. Specifies the IInkStrokeDisp that is being collected.</param></member>
		<member name="E:Microsoft.Ink.InkOverlay.MouseDown">
			<summary>Occurs when the mouse pointer is over the InkCollector or InkOverlay object and a mouse button is pressed.</summary><param name="sender">[in] Specifies the source InkCollector or InkOverlay object of this event.</param><param name="e">[in] Specifies the CancelMouseEventArgs object that contains the event data.</param><param name="Button">[in] Automation only. Specifies which mouse button was pressed.</param><param name="Shift">[in] Automation only. Specifies the state of the SHIFT key.</param><param name="pX">[in] Automation only. Specifies the x-coordinate, in pixels, of a mouse click.</param><param name="pY">[in] Automation only. Specifies the y-coordinate, in pixels, of a mouse click.</param><param name="Cancel">[in, out] Automation only. Specifies whether the event should be canceled. The default value is False, which specifies that the event should not be canceled.</param></member>
		<member name="E:Microsoft.Ink.InkOverlay.MouseMove">
			<summary>Occurs when the mouse pointer is moved over the InkCollector or InkOverlay object.</summary><param name="sender">[in] Specifies the source InkCollector or InkOverlay object of this event.</param><param name="e">[in] Specifies the CancelMouseEventArgs object that contains the event data.</param><param name="Button">[in] Automation only. Specifies which mouse button was pressed.</param><param name="Shift">[in] Automation only. Specifies the state of the SHIFT key.</param><param name="pX">[in] Automation only. Specifies the x-coordinate, in pixels, of a mouse click.</param><param name="pY">[in] Automation only. Specifies the y-coordinate, in pixels, of a mouse click.</param><param name="Cancel">[in, out] Automation only. Specifies whether the event should be canceled. The default value is False, which specifies that the event should not be canceled.</param></member>
		<member name="E:Microsoft.Ink.InkOverlay.MouseUp">
			<summary>Occurs when the mouse pointer is over the InkCollector or InkOverlay object and a mouse button is released.</summary><param name="sender">[in] Specifies the source InkCollector or InkOverlay object of this event.</param><param name="e">[in] Specifies the CancelMouseEventArgs object that contains the event data.</param><param name="Button">[in] Automation only. Specifies which mouse button was pressed.</param><param name="Shift">[in] Automation only. Specifies the state of the SHIFT key.</param><param name="pX">[in] Automation only. Specifies the x-coordinate, in pixels, of a mouse click.</param><param name="pY">[in] Automation only. Specifies the y-coordinate, in pixels, of a mouse click.</param><param name="Cancel">[in, out] Automation only. Specifies whether the event should be canceled. The default value is False, which specifies that the event should not be canceled.</param></member>
		<member name="E:Microsoft.Ink.InkOverlay.MouseWheel">
			<summary>Occurs when the mouse wheel moves while the InkCollector or InkOverlay object has focus.</summary><param name="sender">[in] Specifies the source InkCollector or InkOverlay object of this event.</param><param name="e">[in] Specifies the CancelMouseEventArgs object that contains the event data.</param><param name="Button">[in] Automation only. Specifies which mouse button was pressed.</param><param name="Shift">[in] Automation only. Specifies the state of the SHIFT key.</param><param name="Delta">[in] Automation only. Specifies a signed count of the number of detents the mouse wheel has rotated. A detent is one notch of the mouse wheel.</param><param name="x">[in] Automation only. Specifies the x-coordinate, in pixels, of a mouse click.</param><param name="y">[in] Automation only. Specifies the y-coordinate, in pixels, of a mouse click.</param><param name="Cancel">[in, out] Automation only. Specifies whether the event should be canceled. The default value is False, which specifies that the event should not be canceled.</param></member>
		<member name="E:Microsoft.Ink.InkOverlay.DoubleClick">
			<summary>Occurs when the InkCollector or InkOverlay object is double-clicked.</summary><param name="sender">[in] Specifies the source InkCollector or InkOverlay object of this event.</param><param name="e">[in] Specifies the System.ComponentModel.CancelEventArgs object that contains the event data.</param><param name="Cancel">[in, out] Automation only. Specifies whether the event should be canceled.</param></member>
		<member name="E:Microsoft.Ink.InkOverlay.Stroke">
			<summary>Occurs when the user draws a new stroke on any tablet.</summary><param name="sender">[in] Specifies the source InkCollector of this event.</param><param name="e">[in] Specifies the InkCollectorStrokeEventArgs object that contains the event data.</param><param name="Cursor">[in] Automation only. Specifies the IInkCursor object.</param><param name="Stroke">[in] Automation only. Specifies the collected IInkStrokeDisp object.</param><param name="Cancel">[in, out] Automation only. Specifies whether the event should be canceled. If True, the collection of the stroke is canceled.</param></member>
		<member name="E:Microsoft.Ink.InkOverlay.NewPackets">
			<summary>Occurs when the InkCollector receives packets.</summary><param name="sender">[in] Specifies the source InkCollector of this event.</param><param name="e">[in] Specifies the InkCollectorNewPacketsEventArgs object that contains the event data.</param><param name="Cursor">[in] Automation only. Specifies the IInkCursor object.</param><param name="Stroke">[in] Automation only. Specifies the IInkStrokeDisp object.</param><param name="PacketCount">[in] Automation only. Specifies the number of packets.</param><param name="PacketData">[in, out] Automation only. Specifies an array of integers containing the data of interest for each packet, set using the DesiredPacketDescription property of the InkCollector. Note that although you can modify the packet data, these modifications are not taken into account in this version of the Tablet PC SDK.</param></member>
		<member name="E:Microsoft.Ink.InkOverlay.NewInAirPackets">
			<summary>This event occurs when an in-air packet is seen.</summary><param name="sender">[in] Specifies the source InkCollector of this event.</param><param name="e">[in] Specifies the InkCollectorNewInAirPacketsEventArgs object that contains the event data.</param><param name="Cursor">[in] Automation only. Specifies the IInkCursor object.</param><param name="PacketCount">[in] Automation only. Specifies the number of in-air packets received.</param><param name="PacketData">[in, out] Automation only. Specifies an array of integers containing the data of interest for each packet, set using the DesiredPacketDescription property of the InkCollector. Note that although you can modify the packet data, these modifications are not taken into account in this version of the Tablet PC SDK.</param></member>
		<member name="E:Microsoft.Ink.InkOverlay.CursorInRange">
			<summary>Occurs when a cursor enters the physical detection range (proximity) of the tablet context.</summary><param name="sender">[in] Specifies the source InkCollector of this event.</param><param name="e">[in] Specifies the InkCollectorCursorInRangeEventArgs object that contains the event data.</param><param name="Cursor">[in] Automation only. Specifies the IInkCursor object that is within range of the tablet context.</param><param name="NewCursor">[in] Automation only. Specifies whether this is a new cursor.</param><param name="ButtonsState">[in] Automation only. Specifies an array of IInkCursorButtonState objects.</param></member>
		<member name="E:Microsoft.Ink.InkOverlay.CursorOutOfRange">
			<summary>Occurs when the cursor leaves the physical detection range (proximity) of the tablet context.</summary><param name="sender">[in] Specifies the source InkCollector of this event.</param><param name="e">[in] Specifies the InkCollectorCursorOutOfRangeEventArgs object that contains the event data.</param><param name="Cursor">[in] Automation only. Specifies the IInkCursor object that is out of range of the tablet context.</param></member>
		<member name="E:Microsoft.Ink.InkOverlay.CursorButtonUp">
			<summary>Occurs when the InkCollector detects a cursor button that is up.</summary><param name="sender">[in] Specifies the source InkCollector of this event.</param><param name="e">[in] Specifies the InkCollectorCursorButtonUpEventArgs object that contains the event data.</param><param name="Cursor">[in] Automation only. Specifies the IInkCursor object that contains the button that is up.</param><param name="Button">[in] Automation only. Specifies the IInkCursorButton object that is up.</param></member>
		<member name="E:Microsoft.Ink.InkOverlay.TabletAdded">
			<summary>Occurs when a tablet is added to the system.</summary><param name="sender">[in] Specifies the source InkCollector of this event.</param><param name="e">[in] Specifies the InkCollectorTabletAddedEventArgs object that contains the event data.</param><param name="Tablet">[in] Specifies the IInkTablet object that has been added to the system.</param></member>
		<member name="E:Microsoft.Ink.InkOverlay.TabletRemoved">
			<summary>Occurs when a tablet is removed from the system.</summary><param name="sender">[in] Specifies the source InkCollector of this event.</param><param name="e">[in] Specifies the InkCollectorTabletRemovedEventArgs object that contains the event data.</param><param name="TabletId">[in] Specifies the value used as the Id for the tablet that was removed from the system.</param></member>
		<member name="E:Microsoft.Ink.InkOverlay.Painting">
			<summary>Occurs before the InkOverlay object or InkPicture control redraws itself.</summary>
			<param name="sender">[in] Specifies the source InkOverlay object or InkPicture control of this event.</param>
			<param name="e">[in] Specifies the InkOverlayPaintingEventArgs object that contains the event data.</param>
			<param name="hDC">[in] Automation only. Specifies the device context on which painting will occur.</param>
			<param name="Rect">[in] Automation only. Specifies the IInkRectangle that is to be repainted.</param>
			<param name="Allow">[in, out] Automation only. Specifies whether the repaint will occur.</param>
		</member>
		<member name="E:Microsoft.Ink.InkOverlay.Painted">
			<summary>Occurs when the InkOverlay object or InkPicture control has completed redrawing itself.</summary>
			<param name="sender">[in] Specifies the source InkOverlay object or InkPicture control of this event.</param>
			<param name="e">[in] Specifies the System.Windows.Forms.PaintEventArgs object that contains the event data.</param>
			<param name="hDC">[in] Automation only. Specifies the device context on which the event occurred.</param>
			<param name="Rect">[in] Automation only. Specifies the IInkRectangle that was repainted.</param>
		</member>
		<member name="E:Microsoft.Ink.InkOverlay.SelectionChanging">
			<summary>Occurs when the selection of text within the control is about to change via alterations to the UI, cut-and-paste procedures, and changes to the Selection property, among other things.</summary>
			<param name="sender">[in] Specifies the source InkOverlay object or InkPicture control of this event.</param>
			<param name="e">[in] Specifies the InkOverlaySelectionChangingEventArgs object that contains the event data.</param>
			<param name="NewSelection">[in] Automation only. Specifies the new selection of strokes.</param>
		</member>
		<member name="E:Microsoft.Ink.InkOverlay.SelectionChanged">
			<summary>Occurs when the selection of text within the control has changed via alterations to the UI, cut-and-paste procedures, and changes to the Selection property, among other things.</summary>
			<param name="sender">[in] Specifies the source InkOverlay object or InkPicture control of this event.</param>
			<param name="e">[in] Specifies the System.EventArgs class.</param>
		</member>
		<member name="E:Microsoft.Ink.InkOverlay.SelectionMoving">
			<summary>Occurs when the position of the current selection is about to change via alterations to the UI, cut-and-paste procedures, and changes to the Selection property, among other things.</summary>
			<param name="sender">[in] Specifies the source InkOverlay object or InkPicture control of this event.</param>
			<param name="e">[in] Specifies the InkOverlaySelectionMovingEventArgs object that contains the event data.</param>
			<param name="CurSelectionRect">[in] Automation only. Specifies the new position to which the selection is going to move.

Note that this rectangle is specified in client window coordinates, which allows for scenarios such as maintaining the aspect ratio when resizing, among other things.</param>
		</member>
		<member name="E:Microsoft.Ink.InkOverlay.SelectionResizing">
			<summary>Occurs when the size of the current selection is about to change via alterations to the UI, cut-and-paste procedures, and changes to the Selection property, among other things.</summary>
			<param name="sender">[in] Specifies the source InkOverlay object or InkPicture control of this event.</param>
			<param name="e">[in] Specifies the InkOverlaySelectionResizingEventArgs object that contains the event data.</param>
			<param name="CurSelectionRect">[in] Automation only. Specifies the new size to which the selection is going to change.

Note that this rectangle is specified in client window coordinates, which allows for scenarios such as maintaining the aspect ratio when resizing, among other things.</param>
		</member>
		<member name="E:Microsoft.Ink.InkOverlay.SelectionMoved">
			<summary>Occurs when the position of the current selection has changed via alterations to the UI, cut-and-paste procedures, and changes to the Selection property, among other things.</summary>
			<param name="sender">[in] Specifies the source InkOverlay object or InkPicture control of this event.</param>
			<param name="e">[in] Specifies the InkOverlaySelectionMovedEventArgs object that contains the event data.</param>
			<param name="OldSelectionRect">[in] Automation only. Specifies the old bounding rectangle, or previous position, of the collection of strokes that were moved.

Note that this rectangle is specified in ink space coordinates, which allows for undo scenarios.</param>
		</member>
		<member name="E:Microsoft.Ink.InkOverlay.SelectionResized">
			<summary>Occurs when the size of the current selection has changed via alterations to the UI, cut-and-paste procedures, and changes to the Selection property, among other things.</summary>
			<param name="sender">[in] Specifies the source InkOverlay object or InkPicture control of this event.</param>
			<param name="e">[in] Specifies the InkOverlaySelectionResizedEventArgs object that contains the event data.</param>
			<param name="OldSelectionRect">[in] Automation only. Specifies the previous size of the selection.

Note that this rectangle is specified in ink space coordinates, which allows for undo scenarios.</param>
		</member>
		<member name="E:Microsoft.Ink.InkOverlay.StrokesDeleting">
			<summary>Occurs before strokes are deleted from the Ink property.</summary>
			<param name="sender">[in] Specifies the source InkOverlay object or InkPicture control of this event.</param>
			<param name="e">[in] Specifies the InkOverlayStrokesDeletingEventArgs object that contains the event data.</param>
			<param name="Strokes">[in] Automation only. Specifies the strokes to be deleted.</param>
		</member>
		<member name="E:Microsoft.Ink.InkOverlay.StrokesDeleted">
			<summary>Occurs after strokes have been deleted from the Ink property.</summary>
			<param name="sender">[in] Specifies the source InkOverlay object or InkPicture control of this event.</param>
			<param name="e">[in] Specifies the System.EventArgs class.</param>
		</member>
		<member name="E:Microsoft.Ink.InkOverlay.Gesture">
			<summary>Occurs when an application-specific gesture is recognized.</summary><param name="sender">[in] Specifies the source InkCollector of this event.</param><param name="e">[in] Specifies the InkCollectorGestureEventArgs object that contains the event data.</param><param name="Cursor">[in] Automation only. Specifies the IInkCursor object used to create this gesture.</param><param name="Strokes">[in] Automation only. Specifies the IInkStrokes collection consisting of the strokes that make up this gesture.</param><param name="Gestures">[in] Automation only. Specifies an array of gestures, in order of confidence.</param><param name="Cancel">[in, out] Automation only. Specifies whether the collection of this gesture should be canceled; e.g. to not erase the ink and fire the Stroke event.</param></member>
		<member name="F:Microsoft.Ink.InkOverlay.DefaultMargin">
			<summary>Returns the default margin used by the MarginX and MarginY properties.</summary><returns>This property returns a signed 32-bit number that specifies the default margin used by the MarginX and MarginY properties.</returns></member>
		<member name="F:Microsoft.Ink.InkOverlay.ClipInkToMargin">
			<summary>Returns a value that specifies whether to clip strokes when they are outside the DefaultMargin.</summary><returns>This property returns the Boolean value that specifies whether to clip strokes when they are outside the DefaultMargin.</returns></member>
		<member name="F:Microsoft.Ink.InkOverlay.onCursorDown">
			<summary>Called when the CursorDown event is raised.</summary>
			<param name="e">[in] Specifies the InkCollectorCursorDownEventArgs object that contains the event data.</param>
		</member>
		<member name="F:Microsoft.Ink.InkOverlay.onStroke">
			<summary>Called when the Stroke event is raised.</summary>
			<param name="e">[in] Specifies the InkCollectorStrokeEventArgs object that contains the event data.</param>
		</member>
		<member name="F:Microsoft.Ink.InkOverlay.onNewPackets">
			<summary>Called when the NewPackets event is raised.</summary>
			<param name="e">[in] Specifies the InkCollectorNewPacketsEventArgs object that contains the event data.</param>
		</member>
		<member name="F:Microsoft.Ink.InkOverlay.onNewInAirPackets">
			<summary>Called when the NewInAirPackets event is raised.</summary>
			<param name="e">[in] Specifies the InkCollectorNewInAirPacketsEventArgs object that contains the event data.</param>
		</member>
		<member name="F:Microsoft.Ink.InkOverlay.onCursorInRange">
			<summary>Called when the CursorInRange event is raised.</summary>
			<param name="e">[in] Specifies the InkCollectorCursorInRangeEventArgs object that contains the event data.</param>
		</member>
		<member name="F:Microsoft.Ink.InkOverlay.onCursorOutOfRange">
			<summary>Called when the CursorOutOfRange event is raised.</summary>
			<param name="e">[in] Specifies the InkCollectorCursorOutOfRangeEventArgs object that contains the event data.</param>
		</member>
		<member name="F:Microsoft.Ink.InkOverlay.onCursorButtonDown">
			<summary>Called when the CursorButtonDown event is raised.</summary>
			<param name="e">[in] Specifies the InkCollectorCursorButtonDownEventArgs object that contains the event data.</param>
		</member>
		<member name="F:Microsoft.Ink.InkOverlay.onCursorButtonUp">
			<summary>Called when the CursorButtonUp event is raised.</summary>
			<param name="e">[in] Specifies the InkCollectorCursorButtonUpEventArgs object that contains the event data.</param>
		</member>
		<member name="F:Microsoft.Ink.InkOverlay.onTabletAdded">
			<summary>Called when the TabletAdded event is raised.</summary>
			<param name="e">[in] Specifies the InkCollectorTabletAddedEventArgs object that contains the event data.</param>
		</member>
		<member name="F:Microsoft.Ink.InkOverlay.onTabletRemoved">
			<summary>Called when the TabletRemoved event is raised.</summary>
			<param name="e">[in] Specifies the InkCollectorTabletRemovedEventArgs object that contains the event data.</param>
		</member>
		<member name="F:Microsoft.Ink.InkOverlay.onSystemGesture">
			<summary>Called when the SystemGesture event is raised.</summary>
			<param name="e">[in] Specifies the InkCollectorSystemGestureEventArgs object that contains the event data.</param>
		</member>
		<member name="F:Microsoft.Ink.InkOverlay.Painting">
			<summary>Occurs before the InkOverlay object or InkPicture control redraws itself.</summary>
			<param name="sender">[in] Specifies the source InkOverlay object or InkPicture control of this event.</param>
			<param name="e">[in] Specifies the InkOverlayPaintingEventArgs object that contains the event data.</param>
			<param name="hDC">[in] Automation only. Specifies the device context on which painting will occur.</param>
			<param name="Rect">[in] Automation only. Specifies the IInkRectangle that is to be repainted.</param>
			<param name="Allow">[in, out] Automation only. Specifies whether the repaint will occur.</param>
		</member>
		<member name="F:Microsoft.Ink.InkOverlay.Painted">
			<summary>Occurs when the InkOverlay object or InkPicture control has completed redrawing itself.</summary>
			<param name="sender">[in] Specifies the source InkOverlay object or InkPicture control of this event.</param>
			<param name="e">[in] Specifies the System.Windows.Forms.PaintEventArgs object that contains the event data.</param>
			<param name="hDC">[in] Automation only. Specifies the device context on which the event occurred.</param>
			<param name="Rect">[in] Automation only. Specifies the IInkRectangle that was repainted.</param>
		</member>
		<member name="F:Microsoft.Ink.InkOverlay.SelectionChanging">
			<summary>Occurs when the selection of text within the control is about to change via alterations to the UI, cut-and-paste procedures, and changes to the Selection property, among other things.</summary>
			<param name="sender">[in] Specifies the source InkOverlay object or InkPicture control of this event.</param>
			<param name="e">[in] Specifies the InkOverlaySelectionChangingEventArgs object that contains the event data.</param>
			<param name="NewSelection">[in] Automation only. Specifies the new selection of strokes.</param>
		</member>
		<member name="F:Microsoft.Ink.InkOverlay.SelectionChanged">
			<summary>Occurs when the selection of text within the control has changed via alterations to the UI, cut-and-paste procedures, and changes to the Selection property, among other things.</summary>
			<param name="sender">[in] Specifies the source InkOverlay object or InkPicture control of this event.</param>
			<param name="e">[in] Specifies the System.EventArgs class.</param>
		</member>
		<member name="F:Microsoft.Ink.InkOverlay.SelectionMoving">
			<summary>Occurs when the position of the current selection is about to change via alterations to the UI, cut-and-paste procedures, and changes to the Selection property, among other things.</summary>
			<param name="sender">[in] Specifies the source InkOverlay object or InkPicture control of this event.</param>
			<param name="e">[in] Specifies the InkOverlaySelectionMovingEventArgs object that contains the event data.</param>
			<param name="CurSelectionRect">[in] Automation only. Specifies the new position to which the selection is going to move.

Note that this rectangle is specified in client window coordinates, which allows for scenarios such as maintaining the aspect ratio when resizing, among other things.</param>
		</member>
		<member name="F:Microsoft.Ink.InkOverlay.SelectionResizing">
			<summary>Occurs when the size of the current selection is about to change via alterations to the UI, cut-and-paste procedures, and changes to the Selection property, among other things.</summary>
			<param name="sender">[in] Specifies the source InkOverlay object or InkPicture control of this event.</param>
			<param name="e">[in] Specifies the InkOverlaySelectionResizingEventArgs object that contains the event data.</param>
			<param name="CurSelectionRect">[in] Automation only. Specifies the new size to which the selection is going to change.

Note that this rectangle is specified in client window coordinates, which allows for scenarios such as maintaining the aspect ratio when resizing, among other things.</param>
		</member>
		<member name="F:Microsoft.Ink.InkOverlay.SelectionMoved">
			<summary>Occurs when the position of the current selection has changed via alterations to the UI, cut-and-paste procedures, and changes to the Selection property, among other things.</summary>
			<param name="sender">[in] Specifies the source InkOverlay object or InkPicture control of this event.</param>
			<param name="e">[in] Specifies the InkOverlaySelectionMovedEventArgs object that contains the event data.</param>
			<param name="OldSelectionRect">[in] Automation only. Specifies the old bounding rectangle, or previous position, of the collection of strokes that were moved.

Note that this rectangle is specified in ink space coordinates, which allows for undo scenarios.</param>
		</member>
		<member name="F:Microsoft.Ink.InkOverlay.SelectionResized">
			<summary>Occurs when the size of the current selection has changed via alterations to the UI, cut-and-paste procedures, and changes to the Selection property, among other things.</summary>
			<param name="sender">[in] Specifies the source InkOverlay object or InkPicture control of this event.</param>
			<param name="e">[in] Specifies the InkOverlaySelectionResizedEventArgs object that contains the event data.</param>
			<param name="OldSelectionRect">[in] Automation only. Specifies the previous size of the selection.

Note that this rectangle is specified in ink space coordinates, which allows for undo scenarios.</param>
		</member>
		<member name="F:Microsoft.Ink.InkOverlay.StrokesDeleting">
			<summary>Occurs before strokes are deleted from the Ink property.</summary>
			<param name="sender">[in] Specifies the source InkOverlay object or InkPicture control of this event.</param>
			<param name="e">[in] Specifies the InkOverlayStrokesDeletingEventArgs object that contains the event data.</param>
			<param name="Strokes">[in] Automation only. Specifies the strokes to be deleted.</param>
		</member>
		<member name="F:Microsoft.Ink.InkOverlay.StrokesDeleted">
			<summary>Occurs after strokes have been deleted from the Ink property.</summary>
			<param name="sender">[in] Specifies the source InkOverlay object or InkPicture control of this event.</param>
			<param name="e">[in] Specifies the System.EventArgs class.</param>
		</member>
		<member name="F:Microsoft.Ink.InkOverlay.onGesture">
			<summary>Called when the Gesture event is raised.</summary>
			<param name="e">[in] Specifies the InkCollectorGestureEventArgs object that contains the event data.</param>
		</member>
		<member name="M:Microsoft.Ink.InkOverlay.#ctor">
			<summary>Specifies the creation of a new InkOverlay object.</summary>
			<returns>This method constructs a new InkOverlay object.</returns>
		</member>
		<member name="M:Microsoft.Ink.InkOverlay.#ctor(System.IntPtr)">
			<summary>Specifies the creation of a new InkOverlay object.</summary>
			<returns>This method constructs a new InkOverlay object.</returns>
		</member>
		<member name="M:Microsoft.Ink.InkOverlay.#ctor(System.IntPtr,System.Boolean)">
			<summary>Specifies the creation of a new InkOverlay object.</summary>
			<returns>This method constructs a new InkOverlay object.</returns>
		</member>
		<member name="M:Microsoft.Ink.InkOverlay.#ctor(System.IntPtr,Microsoft.Ink.Tablet)">
			<summary>Specifies the creation of a new InkOverlay object.</summary>
			<returns>This method constructs a new InkOverlay object.</returns>
		</member>
		<member name="M:Microsoft.Ink.InkOverlay.OnTabletRemoved(Microsoft.Ink.InkCollectorTabletRemovedEventArgs)">
			<summary>Called when the TabletRemoved event is raised.</summary>
			<param name="e">[in] Specifies the InkCollectorTabletRemovedEventArgs object that contains the event data.</param>
		</member>
		<member name="M:Microsoft.Ink.InkOverlay.OnTabletAdded(Microsoft.Ink.InkCollectorTabletAddedEventArgs)">
			<summary>Called when the TabletAdded event is raised.</summary>
			<param name="e">[in] Specifies the InkCollectorTabletAddedEventArgs object that contains the event data.</param>
		</member>
		<member name="M:Microsoft.Ink.InkOverlay.OnGesture(Microsoft.Ink.InkCollectorGestureEventArgs)">
			<summary>Called when the Gesture event is raised.</summary>
			<param name="e">[in] Specifies the InkCollectorGestureEventArgs object that contains the event data.</param>
		</member>
		<member name="M:Microsoft.Ink.InkOverlay.OnSystemGesture(Microsoft.Ink.InkCollectorSystemGestureEventArgs)">
			<summary>Called when the SystemGesture event is raised.</summary>
			<param name="e">[in] Specifies the InkCollectorSystemGestureEventArgs object that contains the event data.</param>
		</member>
		<member name="M:Microsoft.Ink.InkOverlay.OnCursorOutOfRange(Microsoft.Ink.InkCollectorCursorOutOfRangeEventArgs)">
			<summary>Called when the CursorOutOfRange event is raised.</summary>
			<param name="e">[in] Specifies the InkCollectorCursorOutOfRangeEventArgs object that contains the event data.</param>
		</member>
		<member name="M:Microsoft.Ink.InkOverlay.OnCursorInRange(Microsoft.Ink.InkCollectorCursorInRangeEventArgs)">
			<summary>Called when the CursorInRange event is raised.</summary>
			<param name="e">[in] Specifies the InkCollectorCursorInRangeEventArgs object that contains the event data.</param>
		</member>
		<member name="M:Microsoft.Ink.InkOverlay.OnCursorButtonUp(Microsoft.Ink.InkCollectorCursorButtonUpEventArgs)">
			<summary>Called when the CursorButtonUp event is raised.</summary>
			<param name="e">[in] Specifies the InkCollectorCursorButtonUpEventArgs object that contains the event data.</param>
		</member>
		<member name="M:Microsoft.Ink.InkOverlay.OnCursorButtonDown(Microsoft.Ink.InkCollectorCursorButtonDownEventArgs)">
			<summary>Called when the CursorButtonDown event is raised.</summary>
			<param name="e">[in] Specifies the InkCollectorCursorButtonDownEventArgs object that contains the event data.</param>
		</member>
		<member name="M:Microsoft.Ink.InkOverlay.OnNewInAirPackets(Microsoft.Ink.InkCollectorNewInAirPacketsEventArgs)">
			<summary>Called when the NewInAirPackets event is raised.</summary>
			<param name="e">[in] Specifies the InkCollectorNewInAirPacketsEventArgs object that contains the event data.</param>
		</member>
		<member name="M:Microsoft.Ink.InkOverlay.OnNewPackets(Microsoft.Ink.InkCollectorNewPacketsEventArgs)">
			<summary>Called when the NewPackets event is raised.</summary>
			<param name="e">[in] Specifies the InkCollectorNewPacketsEventArgs object that contains the event data.</param>
		</member>
		<member name="M:Microsoft.Ink.InkOverlay.OnCursorDown(Microsoft.Ink.InkCollectorCursorDownEventArgs)">
			<summary>Called when the CursorDown event is raised.</summary>
			<param name="e">[in] Specifies the InkCollectorCursorDownEventArgs object that contains the event data.</param>
		</member>
		<member name="M:Microsoft.Ink.InkOverlay.OnStroke(Microsoft.Ink.InkCollectorStrokeEventArgs)">
			<summary>Called when the Stroke event is raised.</summary>
			<param name="e">[in] Specifies the InkCollectorStrokeEventArgs object that contains the event data.</param>
		</member>
		<member name="M:Microsoft.Ink.InkOverlay.OnStrokesDeleted(System.EventArgs)">
			<summary>Called when the StrokesDeleted event is raised.</summary>
			<param name="e">[in] Specifies the System.EventArgs object that contains the event data.</param>
		</member>
		<member name="M:Microsoft.Ink.InkOverlay.OnStrokesDeleting(Microsoft.Ink.InkOverlayStrokesDeletingEventArgs)">
			<summary>Called when the StrokesDeleting event is raised.</summary>
			<param name="e">[in] Specifies the InkOverlayStrokesDeletingEventArgs object that contains the event data.</param>
		</member>
		<member name="M:Microsoft.Ink.InkOverlay.OnSelectionResized(Microsoft.Ink.InkOverlaySelectionResizedEventArgs)">
			<summary>Called when the SelectionResized event is raised.</summary>
			<param name="e">[in] Specifies the InkOverlaySelectionResizedEventArgs object that contains the event data.</param>
		</member>
		<member name="M:Microsoft.Ink.InkOverlay.OnSelectionMoved(Microsoft.Ink.InkOverlaySelectionMovedEventArgs)">
			<summary>Called when the SelectionMoved event is raised.</summary>
			<param name="e">[in] Specifies the InkOverlaySelectionMovedEventArgs object that contains the event data.</param>
		</member>
		<member name="M:Microsoft.Ink.InkOverlay.OnSelectionResizing(Microsoft.Ink.InkOverlaySelectionResizingEventArgs)">
			<summary>Called when the SelectionResizing event is raised.</summary>
			<param name="e">[in] Specifies the InkOverlaySelectionResizingEventArgs object that contains the event data.</param>
		</member>
		<member name="M:Microsoft.Ink.InkOverlay.OnSelectionMoving(Microsoft.Ink.InkOverlaySelectionMovingEventArgs)">
			<summary>Called when the SelectionMoving event is raised.</summary>
			<param name="e">[in] Specifies the InkOverlaySelectionMovingEventArgs object that contains the event data.</param>
		</member>
		<member name="M:Microsoft.Ink.InkOverlay.OnSelectionChanged(System.EventArgs)">
			<summary>Called when the SelectionChanged event is raised.</summary>
			<param name="e">[in] Specifies the System.EventArgs object that contains the event data.</param>
		</member>
		<member name="M:Microsoft.Ink.InkOverlay.OnSelectionChanging(Microsoft.Ink.InkOverlaySelectionChangingEventArgs)">
			<summary>Called when the SelectionChanging event is raised.</summary>
			<param name="e">[in] Specifies the InkOverlaySelectionChangingEventArgs object that contains the event data.</param>
		</member>
		<member name="M:Microsoft.Ink.InkOverlay.OnPainted(System.Windows.Forms.PaintEventArgs)">
			<summary>Called when the Painted event is raised.</summary>
			<param name="e">[in] Specifies the System.Windows.Forms.PaintEventArgs object that contains the event data.</param>
		</member>
		<member name="M:Microsoft.Ink.InkOverlay.OnPainting(Microsoft.Ink.InkOverlayPaintingEventArgs)">
			<summary>Called when the Painting event is raised.</summary>
			<param name="e">[in] Specifies the InkOverlayPaintingEventArgs object that contains the event data.</param>
		</member>
		<member name="M:Microsoft.Ink.InkOverlay.SetGestureStatus(Microsoft.Ink.ApplicationGesture,System.Boolean)">
			<summary>Specifies (sets) the interest of the object/control in a given gesture.</summary><param name="gesture">[in] Specifies the gesture that you want the status of.</param><param name="gestureStatus">[in] Specifies the value of the gesture status. Set the value to True if the gesture is being used, False if it is being ignored.</param></member>
		<member name="M:Microsoft.Ink.InkOverlay.GetGestureStatus(Microsoft.Ink.ApplicationGesture)">
			<summary>Specifies (gets) the interest of the object/control in a given gesture.</summary><param name="gesture">[in] Specifies the gesture that you want the status of.</param><returns>This method returns the Boolean value that indicates the interest status of a given application gesture.</returns></member>
		<member name="M:Microsoft.Ink.InkOverlay.HitTestSelection(System.Int32,System.Int32)">
			<summary>Specifies the set of strokes at a given coordinate that were hit during a hit test.</summary>
			<param name="x">[in] Specifies the x-position of the coordinate.</param>
			<param name="y">[in] Specifies the y-position of the coordinate.</param>
			<returns>This method returns a value from the SelectionHitResult enumeration, which specifies which part of a selection, if any, was hit during a hit test.</returns>
		</member>
		<member name="M:Microsoft.Ink.InkOverlay.SetWindowInputRectangle(System.Drawing.Rectangle)">
			<summary>Specifies the window rectangle, in pixels, to use to map drawn ink to the window.</summary><param name="windowRectangle">[in] Specifies the rectangle, of type System.Drawing.Rectangle, on which ink is drawn.

In Automation, the rectangle is an InkRectangle object.</param></member>
		<member name="M:Microsoft.Ink.InkOverlay.GetWindowInputRectangle(System.Drawing.Rectangle@)">
			<summary>Specifies the window rectangle, in pixels, within which ink is drawn.</summary><param name="windowRectangle">[in, out] Specifies the rectangle, of type System.Drawing.Rectangle, on which ink is drawn.

In Automation, the rectangle is an InkRectangle object.</param></member>
		<member name="M:Microsoft.Ink.InkOverlay.SetAllTabletsMode">
			<summary>Specifies setting the InkCollector into AllTablets mode.</summary><param name="useMouse">[in, optional] Specifies the Boolean value that indicates whether to use the mouse as an input device. If True, the mouse is used for input. The default value (or in C#, the value used in the parameterless overloaded version) is True.</param></member>
		<member name="M:Microsoft.Ink.InkOverlay.SetAllTabletsMode(System.Boolean)">
			<summary>Specifies setting the InkCollector into AllTablets mode.</summary><param name="useMouse">[in, optional] Specifies the Boolean value that indicates whether to use the mouse as an input device. If True, the mouse is used for input. The default value (or in C#, the value used in the parameterless overloaded version) is True.</param></member>
		<member name="M:Microsoft.Ink.InkOverlay.SetSingleTabletIntegratedMode(Microsoft.Ink.Tablet)">
			<summary>Specifies setting the InkCollector into SingleTabletIntegrated mode.</summary><param name="tablet">[in] Specifies the tablet on which ink is collected, or drawn.</param></member>
		<member name="M:Microsoft.Ink.InkOverlay.Draw(System.Drawing.Rectangle)">
			<summary>Specifies the ink and selection UI to draw for a specified rectangle in the provided Graphics object (screen, printer, and so on).</summary>
			<param name="g">[in] Specifies the Graphics object on which to draw.</param>
			<param name="rDrawRect">[in] Specifies the rectangle on which to draw.</param>
			<param name="Rect">[in] Automation only. Specifies the InkRectangle Object on which to draw.</param>
		</member>
		<member name="T:Microsoft.Ink.InkPicture">
			<summary>Specifies the creation of a new InkPicture control.</summary>
			<returns>This method constructs a new InkPicture control.</returns>
		</member>
		<member name="P:Microsoft.Ink.InkPicture.AutoRedraw">
			<summary>Returns or sets a value that specifies whether the InkCollector will repaint when the window is invalidated.</summary><returns>This property returns the Boolean value that specifies whether the InkCollector will repaint when the window is invalidated.</returns></member>
		<member name="P:Microsoft.Ink.InkPicture.DynamicRendering">
			<summary>Returns or sets the value that specifies whether ink is rendered as it is drawn.</summary><returns>This property returns the Boolean value that specifies whether ink is rendered as it is drawn.</returns></member>
		<member name="P:Microsoft.Ink.InkPicture.CollectingInk">
			<summary>Returns the value that specifies whether ink is currently being drawn.</summary><returns>This property returns the Boolean value that specifies whether ink is being drawn.</returns></member>
		<member name="P:Microsoft.Ink.InkPicture.DefaultDrawingAttributes">
			<summary>Returns or sets the default drawing attributes to use when drawing and displaying ink.</summary><returns>This property returns the default DrawingAttributes object, which specifies the drawing attributes used when drawing and displaying ink.</returns></member>
		<member name="P:Microsoft.Ink.InkPicture.Renderer">
			<summary>Returns or sets the Renderer object that is used to draw ink.</summary><returns>This property returns the Renderer object that is used to draw the ink.</returns></member>
		<member name="P:Microsoft.Ink.InkPicture.Cursors">
			<summary>Returns the number of cursors available for use in the inking region.</summary><returns>This property returns collection of cursors that have been encountered by this InkCollector.</returns></member>
		<member name="P:Microsoft.Ink.InkPicture.Ink">
			<summary>Returns or sets the Ink object that is associated with an InkCollector object, an InkOverlay object, or a InkPicture control.</summary><returns>This property returns the Ink object that is associated with an InkCollector object, an InkOverlay object, or an InkPicture control.</returns></member>
		<member name="P:Microsoft.Ink.InkPicture.InkEnabled">
			<summary>Returns or sets a value that specifies whether the InkPicture control will collect pen input, such as in-air packets or cursor in range events.</summary>
			<returns>This property returns the Boolean value that specifies whether the InkPicture will collect pen input.</returns>
		</member>
		<member name="P:Microsoft.Ink.InkPicture.DesiredPacketDescription">
			<summary>Returns or sets the desired packet description of the InkCollector.</summary><returns>This property returns an array of PacketPropertyGuids objects, which specify the properties of the packets collected by the InkCollector.

The default value is {X, Y, NormalPressure}</returns></member>
		<member name="P:Microsoft.Ink.InkPicture.Tablet">
			<summary>Returns the tablet device to which a cursor belongs, or that an InkCollector object is currently using to collect cursor input.</summary><returns>This property returns the Tablet object to which the cursor belongs, or that an InkCollector object is currently using to collect cursor input.</returns></member>
		<member name="P:Microsoft.Ink.InkPicture.TabStop">
			<summary>Returns or sets a value indicating whether the user can use the TAB key to give focus to the control.</summary>
			<returns>This property returns a Boolean value indicating whether the user can use the TAB key to give focus to the control.</returns>
		</member>
		<member name="P:Microsoft.Ink.InkPicture.SupportHighContrastInk">
			<summary>Returns or sets a value that specifies whether ink will be rendered as just one color, Color = COLOR_WINDOWTEXT, when the system is in High Contrast mode.</summary><returns>This property returns the Boolean value that specifies whether ink will be rendered as just one color, Color = COLOR_WINDOWTEXT, when the system is in High Contrast mode.</returns></member>
		<member name="P:Microsoft.Ink.InkPicture.SupportHighContrastSelectionUI">
			<summary>Returns or sets a value that specifies whether all selection UI (selection bounding box, selection handles) will be drawn in high contrast when the system is in High Contrast mode.</summary><returns>This property returns the Boolean value that specifies whether all selection UI will render in high contrast when the system is in High Contrast mode.</returns></member>
		<member name="P:Microsoft.Ink.InkPicture.MarginX">
			<summary>Returns or sets the x-axis margin around the window rectangle, in screen coordinates.</summary><returns>This property returns a signed 32-bit number that indicates the x-axis margin around the window rectangle.</returns></member>
		<member name="P:Microsoft.Ink.InkPicture.MarginY">
			<summary>Returns or sets the y-axis margin around the window rectangle, in screen coordinates.</summary><returns>This property returns a signed 32-bit number that indicates the y-axis margin around the window rectangle.</returns></member>
		<member name="P:Microsoft.Ink.InkPicture.EditingMode">
			<summary>Returns or sets a value that specifies whether the object/control is in ink mode, deletion mode, or selecting/editing mode.</summary><returns>This property returns one of the values from the InkOverlayEditingMode Enumeration enumeration type, which specifies whether the control is in ink mode, deletion mode, or selection/editing mode.</returns></member>
		<member name="P:Microsoft.Ink.InkPicture.EraserMode">
			<summary>Returns or sets the value that specifies whether ink is erased by stroke or by point.</summary><returns>This property returns a value from the InkOverlayEraserMode enumeration type, which specifies how ink is erased from the control.</returns></member>
		<member name="P:Microsoft.Ink.InkPicture.EraserWidth">
			<summary>Returns or sets the value that specifies width of the eraser pen tip.</summary><returns>This property returns a signed 32-bit integer that specifies the width of the eraser pen tip.</returns></member>
		<member name="P:Microsoft.Ink.InkPicture.Selection">
			<summary>Returns the collection of strokes that are currently selected inside the control.</summary><returns>This property returns the collection of strokes that are currently selected inside the control.</returns></member>
		<member name="P:Microsoft.Ink.InkPicture.CausesValidation">
			<summary>Returns or sets a value indicating whether the control causes validation to be performed on any controls that require validation when it receives focus.</summary>
			<returns>This property returns a value indicating whether the control causes validation to be performed on any controls that require validation when it receives focus.

The default value is False.</returns>
		</member>
		<member name="P:Microsoft.Ink.InkPicture.SizeMode">
			<summary>Returns or sets how the control handles image placement and sizing.</summary>
			<returns>This property returns a value from the InkPictureSizeMode enumeration type, which specifies how the picture behaves inside the control.</returns>
		</member>
		<member name="P:Microsoft.Ink.InkPicture.TabIndex">
			<summary>Returns or sets the tab order of the control within its parent container.</summary>
			<returns>This property returns the tab order of the control within its parent form.</returns>
		</member>
		<member name="P:Microsoft.Ink.InkPicture.Enabled">
			<summary>Returns or sets a value that determines whether the InkPicture or InkEdit control can respond to user-generated events.</summary><returns>This property returns the Boolean value that specifies whether the InkPicture or InkEdit control can respond to user-generated events.</returns></member>
		<member name="P:Microsoft.Ink.InkPicture.Handle">
			<summary>Returns or sets the handle value of the window on which ink is drawn.</summary><returns>This property returns the pointer that specifies the handle value of the window on which ink is drawn.</returns></member>
		<member name="P:Microsoft.Ink.InkPicture.Height">
			<summary>Returns or sets the height of the control.</summary>
			<returns>This property returns a floating-point number that represents the height of the control, in pixels.</returns>
		</member>
		<member name="P:Microsoft.Ink.InkPicture.Left">
			<summary>Returns or sets the distance between the left edge of the control and its container object.</summary>
			<returns>This property returns a value that specifies the distance between the internal left edge of the control and the left edge of its container.</returns>
		</member>
		<member name="P:Microsoft.Ink.InkPicture.Name">
			<summary>Returns the name used in code to identify an object.</summary>
		</member>
		<member name="P:Microsoft.Ink.InkPicture.Parent">
			<summary>Returns the object on which the control is located.</summary>
			<returns>This property returns the object on which the control is located.</returns>
		</member>
		<member name="P:Microsoft.Ink.InkPicture.Tag">
			<summary>Returns or sets an object that contains extended properties, or custom data, about the control.</summary>
			<returns>This property returns an object that contains extended properties, or custom data, about the control.</returns>
		</member>
		<member name="P:Microsoft.Ink.InkPicture.Top">
			<summary>Returns or sets the distance between the internal top edge of the control and the top edge of its container.</summary>
			<returns>This property returns a number that specifies the distance between the internal top edge of the control and the top edge of its container.</returns>
		</member>
		<member name="P:Microsoft.Ink.InkPicture.Visible">
			<summary>Returns or sets a value that indicates whether the control is visible or hidden.</summary>
			<returns>This property returns the Boolean value that indicates whether the control is visible or hidden.</returns>
		</member>
		<member name="P:Microsoft.Ink.InkPicture.Width">
			<summary>Returns or sets the width of the control.</summary>
			<returns>This property returns a number that specifies the width of the control, in pixels.</returns>
		</member>
		<member name="E:Microsoft.Ink.InkPicture.CursorDown">
			<summary>Occurs when the cursor tip contacts the digitizing tablet surface.</summary><param name="sender">[in] Specifies the source InkCollector of this event.</param><param name="e">[in] Specifies the InkCollectorCursorDownEventArgs object that contains the event data.</param><param name="Cursor">[in] Automation only. Specifies the IInkCursor object that is touching the tablet surface.</param><param name="Stroke">[in] Automation only. Specifies the IInkStrokeDisp that is being collected.</param></member>
		<member name="E:Microsoft.Ink.InkPicture.Stroke">
			<summary>Occurs when the user draws a new stroke on any tablet.</summary><param name="sender">[in] Specifies the source InkCollector of this event.</param><param name="e">[in] Specifies the InkCollectorStrokeEventArgs object that contains the event data.</param><param name="Cursor">[in] Automation only. Specifies the IInkCursor object.</param><param name="Stroke">[in] Automation only. Specifies the collected IInkStrokeDisp object.</param><param name="Cancel">[in, out] Automation only. Specifies whether the event should be canceled. If True, the collection of the stroke is canceled.</param></member>
		<member name="E:Microsoft.Ink.InkPicture.NewPackets">
			<summary>Occurs when the InkCollector receives packets.</summary><param name="sender">[in] Specifies the source InkCollector of this event.</param><param name="e">[in] Specifies the InkCollectorNewPacketsEventArgs object that contains the event data.</param><param name="Cursor">[in] Automation only. Specifies the IInkCursor object.</param><param name="Stroke">[in] Automation only. Specifies the IInkStrokeDisp object.</param><param name="PacketCount">[in] Automation only. Specifies the number of packets.</param><param name="PacketData">[in, out] Automation only. Specifies an array of integers containing the data of interest for each packet, set using the DesiredPacketDescription property of the InkCollector. Note that although you can modify the packet data, these modifications are not taken into account in this version of the Tablet PC SDK.</param></member>
		<member name="E:Microsoft.Ink.InkPicture.NewInAirPackets">
			<summary>This event occurs when an in-air packet is seen.</summary><param name="sender">[in] Specifies the source InkCollector of this event.</param><param name="e">[in] Specifies the InkCollectorNewInAirPacketsEventArgs object that contains the event data.</param><param name="Cursor">[in] Automation only. Specifies the IInkCursor object.</param><param name="PacketCount">[in] Automation only. Specifies the number of in-air packets received.</param><param name="PacketData">[in, out] Automation only. Specifies an array of integers containing the data of interest for each packet, set using the DesiredPacketDescription property of the InkCollector. Note that although you can modify the packet data, these modifications are not taken into account in this version of the Tablet PC SDK.</param></member>
		<member name="E:Microsoft.Ink.InkPicture.CursorInRange">
			<summary>Occurs when a cursor enters the physical detection range (proximity) of the tablet context.</summary><param name="sender">[in] Specifies the source InkCollector of this event.</param><param name="e">[in] Specifies the InkCollectorCursorInRangeEventArgs object that contains the event data.</param><param name="Cursor">[in] Automation only. Specifies the IInkCursor object that is within range of the tablet context.</param><param name="NewCursor">[in] Automation only. Specifies whether this is a new cursor.</param><param name="ButtonsState">[in] Automation only. Specifies an array of IInkCursorButtonState objects.</param></member>
		<member name="E:Microsoft.Ink.InkPicture.CursorOutOfRange">
			<summary>Occurs when the cursor leaves the physical detection range (proximity) of the tablet context.</summary><param name="sender">[in] Specifies the source InkCollector of this event.</param><param name="e">[in] Specifies the InkCollectorCursorOutOfRangeEventArgs object that contains the event data.</param><param name="Cursor">[in] Automation only. Specifies the IInkCursor object that is out of range of the tablet context.</param></member>
		<member name="E:Microsoft.Ink.InkPicture.CursorButtonUp">
			<summary>Occurs when the InkCollector detects a cursor button that is up.</summary><param name="sender">[in] Specifies the source InkCollector of this event.</param><param name="e">[in] Specifies the InkCollectorCursorButtonUpEventArgs object that contains the event data.</param><param name="Cursor">[in] Automation only. Specifies the IInkCursor object that contains the button that is up.</param><param name="Button">[in] Automation only. Specifies the IInkCursorButton object that is up.</param></member>
		<member name="E:Microsoft.Ink.InkPicture.TabletAdded">
			<summary>Occurs when a tablet is added to the system.</summary><param name="sender">[in] Specifies the source InkCollector of this event.</param><param name="e">[in] Specifies the InkCollectorTabletAddedEventArgs object that contains the event data.</param><param name="Tablet">[in] Specifies the IInkTablet object that has been added to the system.</param></member>
		<member name="E:Microsoft.Ink.InkPicture.TabletRemoved">
			<summary>Occurs when a tablet is removed from the system.</summary><param name="sender">[in] Specifies the source InkCollector of this event.</param><param name="e">[in] Specifies the InkCollectorTabletRemovedEventArgs object that contains the event data.</param><param name="TabletId">[in] Specifies the value used as the Id for the tablet that was removed from the system.</param></member>
		<member name="E:Microsoft.Ink.InkPicture.Painting">
			<summary>Occurs before the InkOverlay object or InkPicture control redraws itself.</summary><param name="sender">[in] Specifies the source InkOverlay object or InkPicture control of this event.</param><param name="e">[in] Specifies the InkOverlayPaintingEventArgs object that contains the event data.</param><param name="hDC">[in] Automation only. Specifies the device context on which painting will occur.</param><param name="Rect">[in] Automation only. Specifies the IInkRectangle that is to be repainted.</param><param name="Allow">[in, out] Automation only. Specifies whether the repaint will occur.</param></member>
		<member name="E:Microsoft.Ink.InkPicture.Painted">
			<summary>Occurs when the InkOverlay object or InkPicture control has completed redrawing itself.</summary><param name="sender">[in] Specifies the source InkOverlay object or InkPicture control of this event.</param><param name="e">[in] Specifies the System.Windows.Forms.PaintEventArgs object that contains the event data.</param><param name="hDC">[in] Automation only. Specifies the device context on which the event occurred.</param><param name="Rect">[in] Automation only. Specifies the IInkRectangle that was repainted.</param></member>
		<member name="E:Microsoft.Ink.InkPicture.SelectionChanging">
			<summary>Occurs when the selection of text within the control is about to change via alterations to the UI, cut-and-paste procedures, and changes to the Selection property, among other things.</summary><param name="sender">[in] Specifies the source InkOverlay object or InkPicture control of this event.</param><param name="e">[in] Specifies the InkOverlaySelectionChangingEventArgs object that contains the event data.</param><param name="NewSelection">[in] Automation only. Specifies the new selection of strokes.</param></member>
		<member name="E:Microsoft.Ink.InkPicture.SelectionChanged">
			<summary>Occurs when the selection of text within the control has changed via alterations to the UI, cut-and-paste procedures, and changes to the Selection property, among other things.</summary><param name="sender">[in] Specifies the source InkOverlay object or InkPicture control of this event.</param><param name="e">[in] Specifies the System.EventArgs class.</param></member>
		<member name="E:Microsoft.Ink.InkPicture.SelectionMoving">
			<summary>Occurs when the position of the current selection is about to change via alterations to the UI, cut-and-paste procedures, and changes to the Selection property, among other things.</summary><param name="sender">[in] Specifies the source InkOverlay object or InkPicture control of this event.</param><param name="e">[in] Specifies the InkOverlaySelectionMovingEventArgs object that contains the event data.</param><param name="CurSelectionRect">[in] Automation only. Specifies the new position to which the selection is going to move.

Note that this rectangle is specified in client window coordinates, which allows for scenarios such as maintaining the aspect ratio when resizing, among other things.</param></member>
		<member name="E:Microsoft.Ink.InkPicture.SelectionResizing">
			<summary>Occurs when the size of the current selection is about to change via alterations to the UI, cut-and-paste procedures, and changes to the Selection property, among other things.</summary><param name="sender">[in] Specifies the source InkOverlay object or InkPicture control of this event.</param><param name="e">[in] Specifies the InkOverlaySelectionResizingEventArgs object that contains the event data.</param><param name="CurSelectionRect">[in] Automation only. Specifies the new size to which the selection is going to change.

Note that this rectangle is specified in client window coordinates, which allows for scenarios such as maintaining the aspect ratio when resizing, among other things.</param></member>
		<member name="E:Microsoft.Ink.InkPicture.SelectionMoved">
			<summary>Occurs when the position of the current selection has changed via alterations to the UI, cut-and-paste procedures, and changes to the Selection property, among other things.</summary><param name="sender">[in] Specifies the source InkOverlay object or InkPicture control of this event.</param><param name="e">[in] Specifies the InkOverlaySelectionMovedEventArgs object that contains the event data.</param><param name="OldSelectionRect">[in] Automation only. Specifies the old bounding rectangle, or previous position, of the collection of strokes that were moved.

Note that this rectangle is specified in ink space coordinates, which allows for undo scenarios.</param></member>
		<member name="E:Microsoft.Ink.InkPicture.SelectionResized">
			<summary>Occurs when the size of the current selection has changed via alterations to the UI, cut-and-paste procedures, and changes to the Selection property, among other things.</summary><param name="sender">[in] Specifies the source InkOverlay object or InkPicture control of this event.</param><param name="e">[in] Specifies the InkOverlaySelectionResizedEventArgs object that contains the event data.</param><param name="OldSelectionRect">[in] Automation only. Specifies the previous size of the selection.

Note that this rectangle is specified in ink space coordinates, which allows for undo scenarios.</param></member>
		<member name="E:Microsoft.Ink.InkPicture.StrokesDeleting">
			<summary>Occurs before strokes are deleted from the Ink property.</summary><param name="sender">[in] Specifies the source InkOverlay object or InkPicture control of this event.</param><param name="e">[in] Specifies the InkOverlayStrokesDeletingEventArgs object that contains the event data.</param><param name="Strokes">[in] Automation only. Specifies the strokes to be deleted.</param></member>
		<member name="E:Microsoft.Ink.InkPicture.StrokesDeleted">
			<summary>Occurs after strokes have been deleted from the Ink property.</summary><param name="sender">[in] Specifies the source InkOverlay object or InkPicture control of this event.</param><param name="e">[in] Specifies the System.EventArgs class.</param></member>
		<member name="E:Microsoft.Ink.InkPicture.Gesture">
			<summary>Occurs when an application-specific gesture is recognized.</summary><param name="sender">[in] Specifies the source InkCollector of this event.</param><param name="e">[in] Specifies the InkCollectorGestureEventArgs object that contains the event data.</param><param name="Cursor">[in] Automation only. Specifies the IInkCursor object used to create this gesture.</param><param name="Strokes">[in] Automation only. Specifies the IInkStrokes collection consisting of the strokes that make up this gesture.</param><param name="Gestures">[in] Automation only. Specifies an array of gestures, in order of confidence.</param><param name="Cancel">[in, out] Automation only. Specifies whether the collection of this gesture should be canceled; e.g. to not erase the ink and fire the Stroke event.</param></member>
		<member name="E:Microsoft.Ink.InkPicture.SizeModeChanged">
			<summary>Occurs after the SizeMode property of the control has been changed.</summary>
			<param name="NewMode">[in] Specifies the new state of the control, based on the new value of the SizeMode property.</param>
			<param name="OldMode">[in] Specifies old state of the control, based on the old value of the SizeMode property.</param>
		</member>
		<member name="E:Microsoft.Ink.InkPicture.KeyUp">
			<summary>Occurs when a key is released while the control has focus.</summary>
			<param name="KeyCode">[in, out] Specifies the ASCII value of the key that is being pressed.</param>
			<param name="Shift">[in, out] Specifies the state of the SHIFT key.</param>
		</member>
		<member name="E:Microsoft.Ink.InkPicture.KeyDown">
			<summary>Occurs when a key is pressed and in the down position while the control has focus.</summary>
			<param name="KeyCode">[in, out] Specifies the ASCII value of the key that is being pressed.</param>
			<param name="Shift">[in, out] Specifies the state of the SHIFT key.</param>
		</member>
		<member name="E:Microsoft.Ink.InkPicture.KeyPress">
			<summary>Occurs when a key is pressed while the control has focus.</summary>
			<param name="KeyAscii">[in] Specifies the ASCII value of the key that is being pressed.</param>
		</member>
		<member name="E:Microsoft.Ink.InkPicture.SizeChanged">
			<summary>Occurs after the control has been resized (after the Width and/or Height property values change).</summary>
			<param name="Left">[in] Specifies the coordinate of the left side of the control.</param>
			<param name="Top">[in] Specifies the coordinate of the top of the control.</param>
			<param name="Right">[in] Specifies the coordinate of the right side of the control.</param>
			<param name="Bottom">[in] Specifies the coordinate of the bottom of the control.</param>
		</member>
		<member name="E:Microsoft.Ink.InkPicture.Click">
			<summary>Occurs when the control is clicked.</summary>
		</member>
		<member name="E:Microsoft.Ink.InkPicture.DragDrop">
			<summary>Occurs when a drag-and-drop operation is completed.</summary>
			<param name="Source">[in] Specifies the source IInkPicture control of this event.</param>
			<param name="x">[in] Specifies the x-coordinate of the end position of the operation.</param>
			<param name="y">[in] Specifies the y-coordinate of the end position of the operation.</param>
		</member>
		<member name="E:Microsoft.Ink.InkPicture.DragOver">
			<summary>Occurs when an object is dragged over the control's bounds.</summary>
			<param name="Source">[in] Specifies the source InkPicture control.</param>
			<param name="x">[in] Specifies the x-coordinate of the current position of the operation.</param>
			<param name="y">[in] Specifies the y-coordinate of the current position of the operation.</param>
			<param name="State">[in] Specifies the state of the operation.</param>
		</member>
		<member name="E:Microsoft.Ink.InkPicture.GotFocus">
			<summary>Occurs when the control receives focus, either by user action, such as tabbing to or clicking the object, or by changing the focus in code.</summary>
		</member>
		<member name="E:Microsoft.Ink.InkPicture.LostFocus">
			<summary>Occurs when the control loses focus, either by user action, such as tabbing to or clicking the object, or by changing the focus in code.</summary>
		</member>
		<member name="E:Microsoft.Ink.InkPicture.MouseDown">
			<summary>Occurs when the mouse pointer is over the control and a mouse button is pressed.</summary>
			<param name="Button">[in] Specifies the button that was pressed.</param>
			<param name="Shift">[in] Specifies the state of the SHIFT key.</param>
			<param name="pX">[in] Specifies the x-coordinate of the cursor.</param>
			<param name="pY">[in] Specifies the y-coordinate of the cursor.</param>
			<param name="Cancel">[in, out] Specifies whether to cancel this event.</param>
		</member>
		<member name="E:Microsoft.Ink.InkPicture.MouseEnter">
			<summary>Occurs when the mouse pointer enters the control.</summary>
		</member>
		<member name="E:Microsoft.Ink.InkPicture.MouseLeave">
			<summary>Occurs when the mouse pointer leaves the control.</summary>
		</member>
		<member name="E:Microsoft.Ink.InkPicture.MouseHover">
			<summary>Occurs when the mouse pointer hovers over the control.</summary>
		</member>
		<member name="E:Microsoft.Ink.InkPicture.MouseMove">
			<summary>Occurs when the mouse pointer is moved over the control.</summary>
			<param name="Button">[in] Specifies the button that was pressed.</param>
			<param name="Shift">[in] Specifies the state of the SHIFT key.</param>
			<param name="pX">[in] Specifies the x-coordinate of the cursor.</param>
			<param name="pY">[in] Specifies the y-coordinate of the cursor.</param>
			<param name="Cancel">[in, out] Specifies whether to cancel this event.</param>
		</member>
		<member name="E:Microsoft.Ink.InkPicture.MouseUp">
			<summary>Occurs when the mouse pointer is over the control and a mouse button is released.</summary>
			<param name="Button">[in] Specifies the button that was pressed.</param>
			<param name="Shift">[in] Specifies the state of the SHIFT key.</param>
			<param name="pX">[in] Specifies the x-coordinate of the cursor.</param>
			<param name="pY">[in] Specifies the y-coordinate of the cursor.</param>
			<param name="Cancel">[in, out] Specifies whether to cancel this event.</param>
		</member>
		<member name="E:Microsoft.Ink.InkPicture.MouseWheel">
			<summary>Occurs when the mouse wheel moves while the control has focus.</summary>
			<param name="Button">[in] Specifies the button that was pressed.</param>
			<param name="Shift">[in] Specifies the state of the SHIFT key.</param>
			<param name="Delta">[in] Specifies the distance the mouse wheel has turned.</param>
			<param name="x">[in] Specifies the x-coordinate of the cursor.</param>
			<param name="y">[in] Specifies the y-coordinate of the cursor.</param>
			<param name="Cancel">[in, out] Specifies whether to cancel this event.</param>
		</member>
		<member name="E:Microsoft.Ink.InkPicture.Move">
			<summary>Specifies the movement and/or resizing of the control.</summary>
			<param name="Left">[in] Specifies a single-precision value indicating the horizontal coordinate (x-axis) for the left edge of the control.</param>
			<param name="Top">[in, optional] Specifies a single-precision value indicating the vertical coordinate (y-axis) for the top edge of the control.</param>
			<param name="Right">[in, optional] Specifies a single-precision value indicating the new right side of the control.</param>
			<param name="Height">[in, optional] If resizing, specifies a single-precision value indicating the height of the control.</param>
		</member>
		<member name="E:Microsoft.Ink.InkPicture.ChangeUICues">
			<summary>Occurs when the focus or keyboard user interface (UI) cues change.</summary>
			<param name="UICues">[in] Specifies the state of the user interface.</param>
		</member>
		<member name="E:Microsoft.Ink.InkPicture.StyleChanged">
			<summary>Occurs after the style of the control changes.</summary>
		</member>
		<member name="E:Microsoft.Ink.InkPicture.SystemColorsChanged">
			<summary>Occurs after the system colors change.</summary>
		</member>
		<member name="F:Microsoft.Ink.InkPicture.DefaultMargin">
			<summary>Returns the default margin used by the MarginX and MarginY properties.</summary><returns>This property returns a signed 32-bit number that specifies the default margin used by the MarginX and MarginY properties.</returns></member>
		<member name="F:Microsoft.Ink.InkPicture.ClipInkToMargin">
			<summary>Returns a value that specifies whether to clip strokes when they are outside the DefaultMargin.</summary><returns>This property returns the Boolean value that specifies whether to clip strokes when they are outside the DefaultMargin.</returns></member>
		<member name="F:Microsoft.Ink.InkPicture.inkEnabled">
			<summary>Returns or sets a value that specifies whether the InkPicture control will collect pen input, such as in-air packets or cursor in range events.</summary>
			<returns>This property returns the Boolean value that specifies whether the InkPicture will collect pen input.</returns>
		</member>
		<member name="F:Microsoft.Ink.InkPicture.onCursorDown">
			<summary>Called when the CursorDown event is raised.</summary><param name="e">[in] Specifies the InkCollectorCursorDownEventArgs object that contains the event data.</param></member>
		<member name="F:Microsoft.Ink.InkPicture.onStroke">
			<summary>Called when the Stroke event is raised.</summary><param name="e">[in] Specifies the InkCollectorStrokeEventArgs object that contains the event data.</param></member>
		<member name="F:Microsoft.Ink.InkPicture.onNewPackets">
			<summary>Called when the NewPackets event is raised.</summary><param name="e">[in] Specifies the InkCollectorNewPacketsEventArgs object that contains the event data.</param></member>
		<member name="F:Microsoft.Ink.InkPicture.onNewInAirPackets">
			<summary>Called when the NewInAirPackets event is raised.</summary><param name="e">[in] Specifies the InkCollectorNewInAirPacketsEventArgs object that contains the event data.</param></member>
		<member name="F:Microsoft.Ink.InkPicture.onCursorInRange">
			<summary>Called when the CursorInRange event is raised.</summary><param name="e">[in] Specifies the InkCollectorCursorInRangeEventArgs object that contains the event data.</param></member>
		<member name="F:Microsoft.Ink.InkPicture.onCursorOutOfRange">
			<summary>Called when the CursorOutOfRange event is raised.</summary><param name="e">[in] Specifies the InkCollectorCursorOutOfRangeEventArgs object that contains the event data.</param></member>
		<member name="F:Microsoft.Ink.InkPicture.onCursorButtonDown">
			<summary>Called when the CursorButtonDown event is raised.</summary><param name="e">[in] Specifies the InkCollectorCursorButtonDownEventArgs object that contains the event data.</param></member>
		<member name="F:Microsoft.Ink.InkPicture.onCursorButtonUp">
			<summary>Called when the CursorButtonUp event is raised.</summary><param name="e">[in] Specifies the InkCollectorCursorButtonUpEventArgs object that contains the event data.</param></member>
		<member name="F:Microsoft.Ink.InkPicture.onTabletAdded">
			<summary>Called when the TabletAdded event is raised.</summary><param name="e">[in] Specifies the InkCollectorTabletAddedEventArgs object that contains the event data.</param></member>
		<member name="F:Microsoft.Ink.InkPicture.onTabletRemoved">
			<summary>Called when the TabletRemoved event is raised.</summary><param name="e">[in] Specifies the InkCollectorTabletRemovedEventArgs object that contains the event data.</param></member>
		<member name="F:Microsoft.Ink.InkPicture.onSystemGesture">
			<summary>Called when the SystemGesture event is raised.</summary><param name="e">[in] Specifies the InkCollectorSystemGestureEventArgs object that contains the event data.</param></member>
		<member name="F:Microsoft.Ink.InkPicture.Painting">
			<summary>Occurs before the InkOverlay object or InkPicture control redraws itself.</summary><param name="sender">[in] Specifies the source InkOverlay object or InkPicture control of this event.</param><param name="e">[in] Specifies the InkOverlayPaintingEventArgs object that contains the event data.</param><param name="hDC">[in] Automation only. Specifies the device context on which painting will occur.</param><param name="Rect">[in] Automation only. Specifies the IInkRectangle that is to be repainted.</param><param name="Allow">[in, out] Automation only. Specifies whether the repaint will occur.</param></member>
		<member name="F:Microsoft.Ink.InkPicture.Painted">
			<summary>Occurs when the InkOverlay object or InkPicture control has completed redrawing itself.</summary><param name="sender">[in] Specifies the source InkOverlay object or InkPicture control of this event.</param><param name="e">[in] Specifies the System.Windows.Forms.PaintEventArgs object that contains the event data.</param><param name="hDC">[in] Automation only. Specifies the device context on which the event occurred.</param><param name="Rect">[in] Automation only. Specifies the IInkRectangle that was repainted.</param></member>
		<member name="F:Microsoft.Ink.InkPicture.SelectionChanging">
			<summary>Occurs when the selection of text within the control is about to change via alterations to the UI, cut-and-paste procedures, and changes to the Selection property, among other things.</summary><param name="sender">[in] Specifies the source InkOverlay object or InkPicture control of this event.</param><param name="e">[in] Specifies the InkOverlaySelectionChangingEventArgs object that contains the event data.</param><param name="NewSelection">[in] Automation only. Specifies the new selection of strokes.</param></member>
		<member name="F:Microsoft.Ink.InkPicture.SelectionChanged">
			<summary>Occurs when the selection of text within the control has changed via alterations to the UI, cut-and-paste procedures, and changes to the Selection property, among other things.</summary><param name="sender">[in] Specifies the source InkOverlay object or InkPicture control of this event.</param><param name="e">[in] Specifies the System.EventArgs class.</param></member>
		<member name="F:Microsoft.Ink.InkPicture.SelectionMoving">
			<summary>Occurs when the position of the current selection is about to change via alterations to the UI, cut-and-paste procedures, and changes to the Selection property, among other things.</summary><param name="sender">[in] Specifies the source InkOverlay object or InkPicture control of this event.</param><param name="e">[in] Specifies the InkOverlaySelectionMovingEventArgs object that contains the event data.</param><param name="CurSelectionRect">[in] Automation only. Specifies the new position to which the selection is going to move.

Note that this rectangle is specified in client window coordinates, which allows for scenarios such as maintaining the aspect ratio when resizing, among other things.</param></member>
		<member name="F:Microsoft.Ink.InkPicture.SelectionResizing">
			<summary>Occurs when the size of the current selection is about to change via alterations to the UI, cut-and-paste procedures, and changes to the Selection property, among other things.</summary><param name="sender">[in] Specifies the source InkOverlay object or InkPicture control of this event.</param><param name="e">[in] Specifies the InkOverlaySelectionResizingEventArgs object that contains the event data.</param><param name="CurSelectionRect">[in] Automation only. Specifies the new size to which the selection is going to change.

Note that this rectangle is specified in client window coordinates, which allows for scenarios such as maintaining the aspect ratio when resizing, among other things.</param></member>
		<member name="F:Microsoft.Ink.InkPicture.SelectionMoved">
			<summary>Occurs when the position of the current selection has changed via alterations to the UI, cut-and-paste procedures, and changes to the Selection property, among other things.</summary><param name="sender">[in] Specifies the source InkOverlay object or InkPicture control of this event.</param><param name="e">[in] Specifies the InkOverlaySelectionMovedEventArgs object that contains the event data.</param><param name="OldSelectionRect">[in] Automation only. Specifies the old bounding rectangle, or previous position, of the collection of strokes that were moved.

Note that this rectangle is specified in ink space coordinates, which allows for undo scenarios.</param></member>
		<member name="F:Microsoft.Ink.InkPicture.SelectionResized">
			<summary>Occurs when the size of the current selection has changed via alterations to the UI, cut-and-paste procedures, and changes to the Selection property, among other things.</summary><param name="sender">[in] Specifies the source InkOverlay object or InkPicture control of this event.</param><param name="e">[in] Specifies the InkOverlaySelectionResizedEventArgs object that contains the event data.</param><param name="OldSelectionRect">[in] Automation only. Specifies the previous size of the selection.

Note that this rectangle is specified in ink space coordinates, which allows for undo scenarios.</param></member>
		<member name="F:Microsoft.Ink.InkPicture.StrokesDeleting">
			<summary>Occurs before strokes are deleted from the Ink property.</summary><param name="sender">[in] Specifies the source InkOverlay object or InkPicture control of this event.</param><param name="e">[in] Specifies the InkOverlayStrokesDeletingEventArgs object that contains the event data.</param><param name="Strokes">[in] Automation only. Specifies the strokes to be deleted.</param></member>
		<member name="F:Microsoft.Ink.InkPicture.StrokesDeleted">
			<summary>Occurs after strokes have been deleted from the Ink property.</summary><param name="sender">[in] Specifies the source InkOverlay object or InkPicture control of this event.</param><param name="e">[in] Specifies the System.EventArgs class.</param></member>
		<member name="F:Microsoft.Ink.InkPicture.onGesture">
			<summary>Called when the Gesture event is raised.</summary><param name="e">[in] Specifies the InkCollectorGestureEventArgs object that contains the event data.</param></member>
		<member name="M:Microsoft.Ink.InkPicture.#ctor">
			<summary>Specifies the creation of a new InkPicture control.</summary>
			<returns>This method constructs a new InkPicture control.</returns>
		</member>
		<member name="M:Microsoft.Ink.InkPicture.OnTabletRemoved(Microsoft.Ink.InkCollectorTabletRemovedEventArgs)">
			<summary>Called when the TabletRemoved event is raised.</summary><param name="e">[in] Specifies the InkCollectorTabletRemovedEventArgs object that contains the event data.</param></member>
		<member name="M:Microsoft.Ink.InkPicture.OnTabletAdded(Microsoft.Ink.InkCollectorTabletAddedEventArgs)">
			<summary>Called when the TabletAdded event is raised.</summary><param name="e">[in] Specifies the InkCollectorTabletAddedEventArgs object that contains the event data.</param></member>
		<member name="M:Microsoft.Ink.InkPicture.OnGesture(Microsoft.Ink.InkCollectorGestureEventArgs)">
			<summary>Called when the Gesture event is raised.</summary><param name="e">[in] Specifies the InkCollectorGestureEventArgs object that contains the event data.</param></member>
		<member name="M:Microsoft.Ink.InkPicture.OnSystemGesture(Microsoft.Ink.InkCollectorSystemGestureEventArgs)">
			<summary>Called when the SystemGesture event is raised.</summary><param name="e">[in] Specifies the InkCollectorSystemGestureEventArgs object that contains the event data.</param></member>
		<member name="M:Microsoft.Ink.InkPicture.OnCursorOutOfRange(Microsoft.Ink.InkCollectorCursorOutOfRangeEventArgs)">
			<summary>Called when the CursorOutOfRange event is raised.</summary><param name="e">[in] Specifies the InkCollectorCursorOutOfRangeEventArgs object that contains the event data.</param></member>
		<member name="M:Microsoft.Ink.InkPicture.OnCursorInRange(Microsoft.Ink.InkCollectorCursorInRangeEventArgs)">
			<summary>Called when the CursorInRange event is raised.</summary><param name="e">[in] Specifies the InkCollectorCursorInRangeEventArgs object that contains the event data.</param></member>
		<member name="M:Microsoft.Ink.InkPicture.OnCursorButtonUp(Microsoft.Ink.InkCollectorCursorButtonUpEventArgs)">
			<summary>Called when the CursorButtonUp event is raised.</summary><param name="e">[in] Specifies the InkCollectorCursorButtonUpEventArgs object that contains the event data.</param></member>
		<member name="M:Microsoft.Ink.InkPicture.OnCursorButtonDown(Microsoft.Ink.InkCollectorCursorButtonDownEventArgs)">
			<summary>Called when the CursorButtonDown event is raised.</summary><param name="e">[in] Specifies the InkCollectorCursorButtonDownEventArgs object that contains the event data.</param></member>
		<member name="M:Microsoft.Ink.InkPicture.OnNewInAirPackets(Microsoft.Ink.InkCollectorNewInAirPacketsEventArgs)">
			<summary>Called when the NewInAirPackets event is raised.</summary><param name="e">[in] Specifies the InkCollectorNewInAirPacketsEventArgs object that contains the event data.</param></member>
		<member name="M:Microsoft.Ink.InkPicture.OnNewPackets(Microsoft.Ink.InkCollectorNewPacketsEventArgs)">
			<summary>Called when the NewPackets event is raised.</summary><param name="e">[in] Specifies the InkCollectorNewPacketsEventArgs object that contains the event data.</param></member>
		<member name="M:Microsoft.Ink.InkPicture.OnCursorDown(Microsoft.Ink.InkCollectorCursorDownEventArgs)">
			<summary>Called when the CursorDown event is raised.</summary><param name="e">[in] Specifies the InkCollectorCursorDownEventArgs object that contains the event data.</param></member>
		<member name="M:Microsoft.Ink.InkPicture.OnStroke(Microsoft.Ink.InkCollectorStrokeEventArgs)">
			<summary>Called when the Stroke event is raised.</summary><param name="e">[in] Specifies the InkCollectorStrokeEventArgs object that contains the event data.</param></member>
		<member name="M:Microsoft.Ink.InkPicture.OnStrokesDeleted(System.EventArgs)">
			<summary>Called when the StrokesDeleted event is raised.</summary><param name="e">[in] Specifies the System.EventArgs object that contains the event data.</param></member>
		<member name="M:Microsoft.Ink.InkPicture.OnStrokesDeleting(Microsoft.Ink.InkOverlayStrokesDeletingEventArgs)">
			<summary>Called when the StrokesDeleting event is raised.</summary><param name="e">[in] Specifies the InkOverlayStrokesDeletingEventArgs object that contains the event data.</param></member>
		<member name="M:Microsoft.Ink.InkPicture.OnSelectionResized(Microsoft.Ink.InkOverlaySelectionResizedEventArgs)">
			<summary>Called when the SelectionResized event is raised.</summary><param name="e">[in] Specifies the InkOverlaySelectionResizedEventArgs object that contains the event data.</param></member>
		<member name="M:Microsoft.Ink.InkPicture.OnSelectionMoved(Microsoft.Ink.InkOverlaySelectionMovedEventArgs)">
			<summary>Called when the SelectionMoved event is raised.</summary><param name="e">[in] Specifies the InkOverlaySelectionMovedEventArgs object that contains the event data.</param></member>
		<member name="M:Microsoft.Ink.InkPicture.OnSelectionResizing(Microsoft.Ink.InkOverlaySelectionResizingEventArgs)">
			<summary>Called when the SelectionResizing event is raised.</summary><param name="e">[in] Specifies the InkOverlaySelectionResizingEventArgs object that contains the event data.</param></member>
		<member name="M:Microsoft.Ink.InkPicture.OnSelectionMoving(Microsoft.Ink.InkOverlaySelectionMovingEventArgs)">
			<summary>Called when the SelectionMoving event is raised.</summary><param name="e">[in] Specifies the InkOverlaySelectionMovingEventArgs object that contains the event data.</param></member>
		<member name="M:Microsoft.Ink.InkPicture.OnSelectionChanged(System.EventArgs)">
			<summary>Called when the SelectionChanged event is raised.</summary><param name="e">[in] Specifies the System.EventArgs object that contains the event data.</param></member>
		<member name="M:Microsoft.Ink.InkPicture.OnSelectionChanging(Microsoft.Ink.InkOverlaySelectionChangingEventArgs)">
			<summary>Called when the SelectionChanging event is raised.</summary><param name="e">[in] Specifies the InkOverlaySelectionChangingEventArgs object that contains the event data.</param></member>
		<member name="M:Microsoft.Ink.InkPicture.OnPainted(System.Windows.Forms.PaintEventArgs)">
			<summary>Called when the Painted event is raised.</summary><param name="e">[in] Specifies the System.Windows.Forms.PaintEventArgs object that contains the event data.</param></member>
		<member name="M:Microsoft.Ink.InkPicture.OnPainting(Microsoft.Ink.InkOverlayPaintingEventArgs)">
			<summary>Called when the Painting event is raised.</summary><param name="e">[in] Specifies the InkOverlayPaintingEventArgs object that contains the event data.</param></member>
		<member name="M:Microsoft.Ink.InkPicture.SetGestureStatus(Microsoft.Ink.ApplicationGesture,System.Boolean)">
			<summary>Specifies (sets) the interest of the object/control in a given gesture.</summary><param name="gesture">[in] Specifies the gesture that you want the status of.</param><param name="gestureStatus">[in] Specifies the value of the gesture status. Set the value to True if the gesture is being used, False if it is being ignored.</param></member>
		<member name="M:Microsoft.Ink.InkPicture.GetGestureStatus(Microsoft.Ink.ApplicationGesture)">
			<summary>Specifies (gets) the interest of the object/control in a given gesture.</summary><param name="gesture">[in] Specifies the gesture that you want the status of.</param><returns>This method returns the Boolean value that indicates the interest status of a given application gesture.</returns></member>
		<member name="M:Microsoft.Ink.InkPicture.HitTestSelection(System.Int32,System.Int32)">
			<summary>Specifies the set of strokes at a given coordinate that were hit during a hit test.</summary><param name="x">[in] Specifies the x-position of the coordinate.</param><param name="y">[in] Specifies the y-position of the coordinate.</param><returns>This method returns a value from the SelectionHitResult enumeration, which specifies which part of a selection, if any, was hit during a hit test.</returns></member>
		<member name="M:Microsoft.Ink.InkPicture.SetWindowInputRectangle(System.Drawing.Rectangle)">
			<summary>Specifies the window rectangle, in pixels, to use to map drawn ink to the window.</summary><param name="windowRectangle">[in] Specifies the rectangle, of type System.Drawing.Rectangle, on which ink is drawn.

In Automation, the rectangle is an InkRectangle object.</param></member>
		<member name="M:Microsoft.Ink.InkPicture.GetWindowInputRectangle(System.Drawing.Rectangle@)">
			<summary>Specifies the window rectangle, in pixels, within which ink is drawn.</summary><param name="windowRectangle">[in, out] Specifies the rectangle, of type System.Drawing.Rectangle, on which ink is drawn.

In Automation, the rectangle is an InkRectangle object.</param></member>
		<member name="M:Microsoft.Ink.InkPicture.SetAllTabletsMode">
			<summary>Specifies setting the InkCollector into AllTablets mode.</summary><param name="useMouse">[in, optional] Specifies the Boolean value that indicates whether to use the mouse as an input device. If True, the mouse is used for input. The default value (or in C#, the value used in the parameterless overloaded version) is True.</param></member>
		<member name="M:Microsoft.Ink.InkPicture.SetAllTabletsMode(System.Boolean)">
			<summary>Specifies setting the InkCollector into AllTablets mode.</summary><param name="useMouse">[in, optional] Specifies the Boolean value that indicates whether to use the mouse as an input device. If True, the mouse is used for input. The default value (or in C#, the value used in the parameterless overloaded version) is True.</param></member>
		<member name="M:Microsoft.Ink.InkPicture.SetSingleTabletIntegratedMode(Microsoft.Ink.Tablet)">
			<summary>Specifies setting the InkCollector into SingleTabletIntegrated mode.</summary><param name="tablet">[in] Specifies the tablet on which ink is collected, or drawn.</param></member>
		<member name="T:Microsoft.Ink.CollectionMode">
			<summary>Defines values that determine whether ink, gestures, or both are recognized as the user writes.</summary>
		</member>
		<member name="F:Microsoft.Ink.CollectionMode.InkOnly">
			<summary>Only ink is collected, creating a stroke.</summary>
		</member>
		<member name="F:Microsoft.Ink.CollectionMode.GestureOnly">
			<summary>Only gestures are collected; no strokes are created when in this mode.</summary>
		</member>
		<member name="F:Microsoft.Ink.CollectionMode.InkAndGesture">
			<summary>Only single stroke gestures are accepted.</summary>
		</member>
		<member name="T:Microsoft.Ink.SystemGesture">
			<summary>Defines values that set the interest in a set of operating system-specific gestures.</summary>
		</member>
		<member name="F:Microsoft.Ink.SystemGesture.Tap">
			<summary>Maps to a left-click on a mouse.</summary>
		</member>
		<member name="F:Microsoft.Ink.SystemGesture.DoubleTap">
			<summary>Maps to a double-click on a mouse.</summary>
		</member>
		<member name="F:Microsoft.Ink.SystemGesture.RightTap">
			<summary>Maps to a right-click on a mouse.</summary>
		</member>
		<member name="F:Microsoft.Ink.SystemGesture.Drag">
			<summary>Maps to a left drag on a mouse.</summary>
		</member>
		<member name="F:Microsoft.Ink.SystemGesture.RightDrag">
			<summary>Press and hold followed by a stroke.</summary>
		</member>
		<member name="F:Microsoft.Ink.SystemGesture.HoldEnter">
			<summary>No mouse equivalent.</summary>
		</member>
		<member name="F:Microsoft.Ink.SystemGesture.HoverEnter">
			<summary>Maps to a mouse hover.</summary>
		</member>
		<member name="F:Microsoft.Ink.SystemGesture.HoverLeave">
			<summary>Maps to a mouse leaving a hover.</summary>
		</member>
		<member name="T:Microsoft.Ink.InkCollector">
			<summary>Specifies the default constructor to use when creating a new InkCollector object with default drawing attributes.</summary>
		</member>
		<member name="P:Microsoft.Ink.InkCollector.Handle">
			<summary>Returns or sets the handle value of the window on which ink is drawn.</summary>
			<returns>This property returns the pointer that specifies the handle value of the window on which ink is drawn.</returns>
		</member>
		<member name="P:Microsoft.Ink.InkCollector.AutoRedraw">
			<summary>Returns or sets a value that specifies whether the InkCollector will repaint when the window is invalidated.</summary>
			<returns>This property returns the Boolean value that specifies whether the InkCollector will repaint when the window is invalidated.</returns>
		</member>
		<member name="P:Microsoft.Ink.InkCollector.DynamicRendering">
			<summary>Returns or sets the value that specifies whether ink is rendered as it is drawn.</summary>
			<returns>This property returns the Boolean value that specifies whether ink is rendered as it is drawn.</returns>
		</member>
		<member name="P:Microsoft.Ink.InkCollector.CollectingInk">
			<summary>Returns the value that specifies whether ink is currently being drawn.</summary>
			<returns>This property returns the Boolean value that specifies whether ink is being drawn.</returns>
		</member>
		<member name="P:Microsoft.Ink.InkCollector.DefaultDrawingAttributes">
			<summary>Returns or sets the default drawing attributes to use when drawing and displaying ink.</summary>
			<returns>This property returns the default DrawingAttributes object, which specifies the drawing attributes used when drawing and displaying ink.</returns>
		</member>
		<member name="P:Microsoft.Ink.InkCollector.Renderer">
			<summary>Returns or sets the Renderer object that is used to draw ink.</summary>
			<returns>This property returns the Renderer object that is used to draw the ink.</returns>
		</member>
		<member name="P:Microsoft.Ink.InkCollector.Cursors">
			<summary>Returns the number of cursors available for use in the inking region.</summary>
			<returns>This property returns collection of cursors that have been encountered by this InkCollector.</returns>
		</member>
		<member name="P:Microsoft.Ink.InkCollector.Ink">
			<summary>Returns or sets the Ink object that is associated with an InkCollector object, an InkOverlay object, or a InkPicture control.</summary>
			<returns>This property returns the Ink object that is associated with an InkCollector object, an InkOverlay object, or an InkPicture control.</returns>
		</member>
		<member name="P:Microsoft.Ink.InkCollector.Enabled">
			<summary>Returns or sets a value that specifies whether the InkCollector or InkOverlay objects will collect pen input (in-air packets, cursor in range events, and so on).</summary>
			<returns>This property returns the Boolean value that specifies whether the InkCollector will collect pen input.</returns>
		</member>
		<member name="P:Microsoft.Ink.InkCollector.CollectionMode">
			<summary>Defines values that determine whether ink, gestures, or both are recognized as the user writes.</summary>
		</member>
		<member name="P:Microsoft.Ink.InkCollector.DesiredPacketDescription">
			<summary>Returns or sets the desired packet description of the InkCollector.</summary>
			<returns>This property returns an array of PacketPropertyGuids objects, which specify the properties of the packets collected by the InkCollector.

The default value is {X, Y, NormalPressure}</returns>
		</member>
		<member name="P:Microsoft.Ink.InkCollector.Tablet">
			<summary>Returns the tablet device to which a cursor belongs, or that an InkCollector object is currently using to collect cursor input.</summary><returns>This property returns the Tablet object to which the cursor belongs, or that an InkCollector object is currently using to collect cursor input.</returns></member>
		<member name="P:Microsoft.Ink.InkCollector.SupportHighContrastInk">
			<summary>Returns or sets a value that specifies whether ink will be rendered as just one color, Color = COLOR_WINDOWTEXT, when the system is in High Contrast mode.</summary>
			<returns>This property returns the Boolean value that specifies whether ink will be rendered as just one color, Color = COLOR_WINDOWTEXT, when the system is in High Contrast mode.</returns>
		</member>
		<member name="P:Microsoft.Ink.InkCollector.MarginX">
			<summary>Returns or sets the x-axis margin around the window rectangle, in screen coordinates.</summary>
			<returns>This property returns a signed 32-bit number that indicates the x-axis margin around the window rectangle.</returns>
		</member>
		<member name="P:Microsoft.Ink.InkCollector.MarginY">
			<summary>Returns or sets the y-axis margin around the window rectangle, in screen coordinates.</summary>
			<returns>This property returns a signed 32-bit number that indicates the y-axis margin around the window rectangle.</returns>
		</member>
		<member name="E:Microsoft.Ink.InkCollector.CursorDown">
			<summary>Occurs when the cursor tip contacts the digitizing tablet surface.</summary>
			<param name="sender">[in] Specifies the source InkCollector of this event.</param>
			<param name="e">[in] Specifies the InkCollectorCursorDownEventArgs object that contains the event data.</param>
			<param name="Cursor">[in] Automation only. Specifies the IInkCursor object that is touching the tablet surface.</param>
			<param name="Stroke">[in] Automation only. Specifies the IInkStrokeDisp that is being collected.</param>
		</member>
		<member name="E:Microsoft.Ink.InkCollector.MouseDown">
			<summary>Occurs when the mouse pointer is over the InkCollector or InkOverlay object and a mouse button is pressed.</summary>
			<param name="sender">[in] Specifies the source InkCollector or InkOverlay object of this event.</param>
			<param name="e">[in] Specifies the CancelMouseEventArgs object that contains the event data.</param>
			<param name="Button">[in] Automation only. Specifies which mouse button was pressed.</param>
			<param name="Shift">[in] Automation only. Specifies the state of the SHIFT key.</param>
			<param name="pX">[in] Automation only. Specifies the x-coordinate, in pixels, of a mouse click.</param>
			<param name="pY">[in] Automation only. Specifies the y-coordinate, in pixels, of a mouse click.</param>
			<param name="Cancel">[in, out] Automation only. Specifies whether the event should be canceled. The default value is False, which specifies that the event should not be canceled.</param>
		</member>
		<member name="E:Microsoft.Ink.InkCollector.MouseMove">
			<summary>Occurs when the mouse pointer is moved over the InkCollector or InkOverlay object.</summary>
			<param name="sender">[in] Specifies the source InkCollector or InkOverlay object of this event.</param>
			<param name="e">[in] Specifies the CancelMouseEventArgs object that contains the event data.</param>
			<param name="Button">[in] Automation only. Specifies which mouse button was pressed.</param>
			<param name="Shift">[in] Automation only. Specifies the state of the SHIFT key.</param>
			<param name="pX">[in] Automation only. Specifies the x-coordinate, in pixels, of a mouse click.</param>
			<param name="pY">[in] Automation only. Specifies the y-coordinate, in pixels, of a mouse click.</param>
			<param name="Cancel">[in, out] Automation only. Specifies whether the event should be canceled. The default value is False, which specifies that the event should not be canceled.</param>
		</member>
		<member name="E:Microsoft.Ink.InkCollector.MouseUp">
			<summary>Occurs when the mouse pointer is over the InkCollector or InkOverlay object and a mouse button is released.</summary>
			<param name="sender">[in] Specifies the source InkCollector or InkOverlay object of this event.</param>
			<param name="e">[in] Specifies the CancelMouseEventArgs object that contains the event data.</param>
			<param name="Button">[in] Automation only. Specifies which mouse button was pressed.</param>
			<param name="Shift">[in] Automation only. Specifies the state of the SHIFT key.</param>
			<param name="pX">[in] Automation only. Specifies the x-coordinate, in pixels, of a mouse click.</param>
			<param name="pY">[in] Automation only. Specifies the y-coordinate, in pixels, of a mouse click.</param>
			<param name="Cancel">[in, out] Automation only. Specifies whether the event should be canceled. The default value is False, which specifies that the event should not be canceled.</param>
		</member>
		<member name="E:Microsoft.Ink.InkCollector.MouseWheel">
			<summary>Occurs when the mouse wheel moves while the InkCollector or InkOverlay object has focus.</summary>
			<param name="sender">[in] Specifies the source InkCollector or InkOverlay object of this event.</param>
			<param name="e">[in] Specifies the CancelMouseEventArgs object that contains the event data.</param>
			<param name="Button">[in] Automation only. Specifies which mouse button was pressed.</param>
			<param name="Shift">[in] Automation only. Specifies the state of the SHIFT key.</param>
			<param name="Delta">[in] Automation only. Specifies a signed count of the number of detents the mouse wheel has rotated. A detent is one notch of the mouse wheel.</param>
			<param name="x">[in] Automation only. Specifies the x-coordinate, in pixels, of a mouse click.</param>
			<param name="y">[in] Automation only. Specifies the y-coordinate, in pixels, of a mouse click.</param>
			<param name="Cancel">[in, out] Automation only. Specifies whether the event should be canceled. The default value is False, which specifies that the event should not be canceled.</param>
		</member>
		<member name="E:Microsoft.Ink.InkCollector.DoubleClick">
			<summary>Occurs when the InkCollector or InkOverlay object is double-clicked.</summary>
			<param name="sender">[in] Specifies the source InkCollector or InkOverlay object of this event.</param>
			<param name="e">[in] Specifies the System.ComponentModel.CancelEventArgs object that contains the event data.</param>
			<param name="Cancel">[in, out] Automation only. Specifies whether the event should be canceled.</param>
		</member>
		<member name="E:Microsoft.Ink.InkCollector.Stroke">
			<summary>Occurs when the user draws a new stroke on any tablet.</summary>
			<param name="sender">[in] Specifies the source InkCollector of this event.</param>
			<param name="e">[in] Specifies the InkCollectorStrokeEventArgs object that contains the event data.</param>
			<param name="Cursor">[in] Automation only. Specifies the IInkCursor object.</param>
			<param name="Stroke">[in] Automation only. Specifies the collected IInkStrokeDisp object.</param>
			<param name="Cancel">[in, out] Automation only. Specifies whether the event should be canceled. If True, the collection of the stroke is canceled.</param>
		</member>
		<member name="E:Microsoft.Ink.InkCollector.NewPackets">
			<summary>Occurs when the InkCollector receives packets.</summary>
			<param name="sender">[in] Specifies the source InkCollector of this event.</param>
			<param name="e">[in] Specifies the InkCollectorNewPacketsEventArgs object that contains the event data.</param>
			<param name="Cursor">[in] Automation only. Specifies the IInkCursor object.</param>
			<param name="Stroke">[in] Automation only. Specifies the IInkStrokeDisp object.</param>
			<param name="PacketCount">[in] Automation only. Specifies the number of packets.</param>
			<param name="PacketData">[in, out] Automation only. Specifies an array of integers containing the data of interest for each packet, set using the DesiredPacketDescription property of the InkCollector. Note that although you can modify the packet data, these modifications are not taken into account in this version of the Tablet PC SDK.</param>
		</member>
		<member name="E:Microsoft.Ink.InkCollector.NewInAirPackets">
			<summary>This event occurs when an in-air packet is seen.</summary>
			<param name="sender">[in] Specifies the source InkCollector of this event.</param>
			<param name="e">[in] Specifies the InkCollectorNewInAirPacketsEventArgs object that contains the event data.</param>
			<param name="Cursor">[in] Automation only. Specifies the IInkCursor object.</param>
			<param name="PacketCount">[in] Automation only. Specifies the number of in-air packets received.</param>
			<param name="PacketData">[in, out] Automation only. Specifies an array of integers containing the data of interest for each packet, set using the DesiredPacketDescription property of the InkCollector. Note that although you can modify the packet data, these modifications are not taken into account in this version of the Tablet PC SDK.</param>
		</member>
		<member name="E:Microsoft.Ink.InkCollector.CursorInRange">
			<summary>Occurs when a cursor enters the physical detection range (proximity) of the tablet context.</summary>
			<param name="sender">[in] Specifies the source InkCollector of this event.</param>
			<param name="e">[in] Specifies the InkCollectorCursorInRangeEventArgs object that contains the event data.</param>
			<param name="Cursor">[in] Automation only. Specifies the IInkCursor object that is within range of the tablet context.</param>
			<param name="NewCursor">[in] Automation only. Specifies whether this is a new cursor.</param>
			<param name="ButtonsState">[in] Automation only. Specifies an array of IInkCursorButtonState objects.</param>
		</member>
		<member name="E:Microsoft.Ink.InkCollector.CursorOutOfRange">
			<summary>Occurs when the cursor leaves the physical detection range (proximity) of the tablet context.</summary>
			<param name="sender">[in] Specifies the source InkCollector of this event.</param>
			<param name="e">[in] Specifies the InkCollectorCursorOutOfRangeEventArgs object that contains the event data.</param>
			<param name="Cursor">[in] Automation only. Specifies the IInkCursor object that is out of range of the tablet context.</param>
		</member>
		<member name="E:Microsoft.Ink.InkCollector.CursorButtonUp">
			<summary>Occurs when the InkCollector detects a cursor button that is up.</summary>
			<param name="sender">[in] Specifies the source InkCollector of this event.</param>
			<param name="e">[in] Specifies the InkCollectorCursorButtonUpEventArgs object that contains the event data.</param>
			<param name="Cursor">[in] Automation only. Specifies the IInkCursor object that contains the button that is up.</param>
			<param name="Button">[in] Automation only. Specifies the IInkCursorButton object that is up.</param>
		</member>
		<member name="E:Microsoft.Ink.InkCollector.TabletAdded">
			<summary>Occurs when a tablet is added to the system.</summary>
			<param name="sender">[in] Specifies the source InkCollector of this event.</param>
			<param name="e">[in] Specifies the InkCollectorTabletAddedEventArgs object that contains the event data.</param>
			<param name="Tablet">[in] Specifies the IInkTablet object that has been added to the system.</param>
		</member>
		<member name="E:Microsoft.Ink.InkCollector.TabletRemoved">
			<summary>Occurs when a tablet is removed from the system.</summary>
			<param name="sender">[in] Specifies the source InkCollector of this event.</param>
			<param name="e">[in] Specifies the InkCollectorTabletRemovedEventArgs object that contains the event data.</param>
			<param name="TabletId">[in] Specifies the value used as the Id for the tablet that was removed from the system.</param>
		</member>
		<member name="E:Microsoft.Ink.InkCollector.SystemGesture">
			<summary>Defines values that set the interest in a set of operating system-specific gestures.</summary>
		</member>
		<member name="E:Microsoft.Ink.InkCollector.Gesture">
			<summary>Occurs when an application-specific gesture is recognized.</summary>
			<param name="sender">[in] Specifies the source InkCollector of this event.</param>
			<param name="e">[in] Specifies the InkCollectorGestureEventArgs object that contains the event data.</param>
			<param name="Cursor">[in] Automation only. Specifies the IInkCursor object used to create this gesture.</param>
			<param name="Strokes">[in] Automation only. Specifies the IInkStrokes collection consisting of the strokes that make up this gesture.</param>
			<param name="Gestures">[in] Automation only. Specifies an array of gestures, in order of confidence.</param>
			<param name="Cancel">[in, out] Automation only. Specifies whether the collection of this gesture should be canceled; e.g. to not erase the ink and fire the Stroke event.</param>
		</member>
		<member name="F:Microsoft.Ink.InkCollector.DefaultMargin">
			<summary>Returns the default margin used by the MarginX and MarginY properties.</summary>
			<returns>This property returns a signed 32-bit number that specifies the default margin used by the MarginX and MarginY properties.</returns>
		</member>
		<member name="F:Microsoft.Ink.InkCollector.ClipInkToMargin">
			<summary>Returns a value that specifies whether to clip strokes when they are outside the DefaultMargin.</summary>
			<returns>This property returns the Boolean value that specifies whether to clip strokes when they are outside the DefaultMargin.</returns>
		</member>
		<member name="M:Microsoft.Ink.InkCollector.#ctor">
			<summary>Specifies the default constructor to use when creating a new InkCollector object with default drawing attributes.</summary>
		</member>
		<member name="M:Microsoft.Ink.InkCollector.#ctor(System.IntPtr)">
			<summary>Specifies the default constructor to use when creating a new InkCollector object with default drawing attributes.</summary>
		</member>
		<member name="M:Microsoft.Ink.InkCollector.#ctor(System.IntPtr,System.Boolean)">
			<summary>Specifies the default constructor to use when creating a new InkCollector object with default drawing attributes.</summary>
		</member>
		<member name="M:Microsoft.Ink.InkCollector.#ctor(System.IntPtr,Microsoft.Ink.Tablet)">
			<summary>Specifies the default constructor to use when creating a new InkCollector object with default drawing attributes.</summary>
		</member>
		<member name="M:Microsoft.Ink.InkCollector.SetGestureStatus(Microsoft.Ink.ApplicationGesture,System.Boolean)">
			<summary>Specifies (sets) the interest of the object/control in a given gesture.</summary>
			<param name="gesture">[in] Specifies the gesture that you want the status of.</param>
			<param name="gestureStatus">[in] Specifies the value of the gesture status. Set the value to True if the gesture is being used, False if it is being ignored.</param>
		</member>
		<member name="M:Microsoft.Ink.InkCollector.GetGestureStatus(Microsoft.Ink.ApplicationGesture)">
			<summary>Specifies (gets) the interest of the object/control in a given gesture.</summary>
			<param name="gesture">[in] Specifies the gesture that you want the status of.</param>
			<returns>This method returns the Boolean value that indicates the interest status of a given application gesture.</returns>
		</member>
		<member name="M:Microsoft.Ink.InkCollector.SetWindowInputRectangle(System.Drawing.Rectangle)">
			<summary>Specifies the window rectangle, in pixels, to use to map drawn ink to the window.</summary>
			<param name="windowRectangle">[in] Specifies the rectangle, of type System.Drawing.Rectangle, on which ink is drawn.

In Automation, the rectangle is an InkRectangle object.</param>
		</member>
		<member name="M:Microsoft.Ink.InkCollector.GetWindowInputRectangle(System.Drawing.Rectangle@)">
			<summary>Specifies the window rectangle, in pixels, within which ink is drawn.</summary>
			<param name="windowRectangle">[in, out] Specifies the rectangle, of type System.Drawing.Rectangle, on which ink is drawn.

In Automation, the rectangle is an InkRectangle object.</param>
		</member>
		<member name="M:Microsoft.Ink.InkCollector.SetAllTabletsMode">
			<summary>Specifies setting the InkCollector into AllTablets mode.</summary>
			<param name="useMouse">[in, optional] Specifies the Boolean value that indicates whether to use the mouse as an input device. If True, the mouse is used for input. The default value (or in C#, the value used in the parameterless overloaded version) is True.</param>
		</member>
		<member name="M:Microsoft.Ink.InkCollector.SetAllTabletsMode(System.Boolean)">
			<summary>Specifies setting the InkCollector into AllTablets mode.</summary>
			<param name="useMouse">[in, optional] Specifies the Boolean value that indicates whether to use the mouse as an input device. If True, the mouse is used for input. The default value (or in C#, the value used in the parameterless overloaded version) is True.</param>
		</member>
		<member name="M:Microsoft.Ink.InkCollector.SetSingleTabletIntegratedMode(Microsoft.Ink.Tablet)">
			<summary>Specifies setting the InkCollector into SingleTabletIntegrated mode.</summary>
			<param name="tablet">[in] Specifies the tablet on which ink is collected, or drawn.</param>
		</member>
		<member name="T:Microsoft.Ink.InkInsertMode">
			<summary>Defines values that specify how ink is inserted onto the control.</summary>
		</member>
		<member name="F:Microsoft.Ink.InkInsertMode.InsertAsText">
			<summary>Specifies that drawn ink should be inserted as text.</summary>
		</member>
		<member name="F:Microsoft.Ink.InkInsertMode.InsertAsInk">
			<summary>Specifies that drawn ink should be inserted as ink.</summary>
		</member>
		<member name="T:Microsoft.Ink.InkMode">
			<summary>Defines values that specify the collection mode settings for drawn ink - whether ink collection is disabled, whether ink is collected, or whether ink and gestures are being collected.</summary>
		</member>
		<member name="F:Microsoft.Ink.InkMode.Disabled">
			<summary>Ink collection is disabled.</summary>
		</member>
		<member name="F:Microsoft.Ink.InkMode.Ink">
			<summary>Only ink is collected, creating a stroke.</summary>
		</member>
		<member name="F:Microsoft.Ink.InkMode.InkAndGesture">
			<summary>Ink is collected and single stroke gestures are accepted.</summary>
		</member>
		<member name="T:Microsoft.Ink.InkDisplayMode">
			<summary>Defines values that specify how a selection is displayed on the control.</summary>
		</member>
		<member name="F:Microsoft.Ink.InkDisplayMode.Text">
			<summary>Specifies that the selection be displayed as text.</summary>
		</member>
		<member name="F:Microsoft.Ink.InkDisplayMode.Ink">
			<summary>Specifies that the selection be displayed as ink.</summary>
		</member>
		<member name="T:Microsoft.Ink.InkEditStatus">
			<summary>Defines values that specify whether the control is idle, collecting ink, or recognizing ink.</summary>
		</member>
		<member name="F:Microsoft.Ink.InkEditStatus.Idle">
			<summary>The control is idle (not collecting or recognizing ink).</summary>
		</member>
		<member name="F:Microsoft.Ink.InkEditStatus.Collecting">
			<summary>The control is collecting ink.</summary>
		</member>
		<member name="F:Microsoft.Ink.InkEditStatus.Recognizing">
			<summary>The control is recognizing ink.</summary>
		</member>
		<member name="T:Microsoft.Ink.InkEdit">
			<summary>Specifies the creation of a new InkEdit control.</summary>
			<returns>This method constructs a new InkEdit control.</returns>
		</member>
		<member name="P:Microsoft.Ink.InkEdit.InkMode">
			<summary>Defines values that specify the collection mode settings for drawn ink - whether ink collection is disabled, whether ink is collected, or whether ink and gestures are being collected.</summary>
		</member>
		<member name="P:Microsoft.Ink.InkEdit.RecoTimeout">
			<summary>Returns or sets the length of time, in milliseconds, between the last ink stroke collected and the beginning of text recognition.</summary>
			<returns>This property returns a signed 32-bit number that specifies the length of time, in milliseconds, between the last ink stroke collected and the beginning of text recognition.</returns>
		</member>
		<member name="P:Microsoft.Ink.InkEdit.InkInsertMode">
			<summary>Defines values that specify how ink is inserted onto the control.</summary>
		</member>
		<member name="P:Microsoft.Ink.InkEdit.DrawingAttributes">
			<summary>Returns or sets the drawing attributes to apply to ink as it is drawn.</summary><returns>This property returns the DrawingAttributes object that determines the attributes to apply to ink as it is drawn.</returns></member>
		<member name="P:Microsoft.Ink.InkEdit.Recognizer">
			<summary>Returns or sets the recognizer to use for recognition.</summary>
			<returns>This property returns the Recognizer object that is used for recognition.</returns>
		</member>
		<member name="P:Microsoft.Ink.InkEdit.Factoid">
			<summary>Returns or sets the factoid that a recognizer uses to constrain its search for the recognition result.</summary>
			<returns>This property sets or returns the factoid type of the recognizer context.</returns>
		</member>
		<member name="P:Microsoft.Ink.InkEdit.SelInks">
			<summary>Returns or sets the array of embedded Ink objects (if displayed as ink) contained in the current selection.</summary>
			<returns>This property returns or sets the array of embedded Ink objects (if displayed as ink) contained in the current selection.

In Automation, this property returns a SafeArray of InkDisp objects.</returns>
		</member>
		<member name="P:Microsoft.Ink.InkEdit.SelInksDisplayMode">
			<summary>Returns or sets a value that allows for toggling the display of the selection between ink and text.</summary>
			<returns>This property returns a value from the InkDisplayMode enumeration, which specifies whether the selection is displayed as ink or text.</returns>
		</member>
		<member name="P:Microsoft.Ink.InkEdit.UseMouseForInput">
			<summary>Returns or sets a value that indicates whether the mouse is used as an input device.</summary>
			<returns>This property returns the Boolean value that indicates whether the mouse should be used as an input device.</returns>
		</member>
		<member name="P:Microsoft.Ink.InkEdit.Status">
			<summary>Returns a value that specifies whether the control is idle, collecting ink, or recognizing ink.</summary>
			<returns>This property returns a value from the InkEditStatus enumeration, which specifies whether the control is idle, collecting ink, or recognizing ink.</returns>
		</member>
		<member name="P:Microsoft.Ink.InkEdit.ScrollBars">
			<summary>Returns or sets the type of scroll bars, if any, to display in the control.</summary>
			<returns>This property returns a value from the ScrollBarsConstants enumeration type, which specifies whether the control has no scroll bars, a horizontal scroll bar, a vertical scroll bar, or both horizontal and vertical scroll bars.</returns>
		</member>
		<member name="P:Microsoft.Ink.InkEdit.BorderStyle">
			<summary>Returns or sets a value that determines whether the control has a border.</summary>
			<returns>This property returns a value from the BorderStyleConstants enumeration type, which specifies whether the control has no border or a fixed single border.</returns>
		</member>
		<member name="P:Microsoft.Ink.InkEdit.Enabled">
			<summary>Returns or sets a value that determines whether the InkPicture or InkEdit control can respond to user-generated events.</summary>
			<returns>This property returns the Boolean value that specifies whether the InkPicture or InkEdit control can respond to user-generated events.</returns>
		</member>
		<member name="P:Microsoft.Ink.InkEdit.Container">
			<summary>Returns or sets the container of the control.</summary>
			<returns>This property returns the container of the control.</returns>
		</member>
		<member name="E:Microsoft.Ink.InkEdit.Stroke">
			<summary>Occurs when the user draws a new stroke on any tablet.</summary><param name="sender">[in] Specifies the source InkCollector of this event.</param><param name="e">[in] Specifies the InkCollectorStrokeEventArgs object that contains the event data.</param><param name="Cursor">[in] Automation only. Specifies the IInkCursor object.</param><param name="Stroke">[in] Automation only. Specifies the collected IInkStrokeDisp object.</param><param name="Cancel">[in, out] Automation only. Specifies whether the event should be canceled. If True, the collection of the stroke is canceled.</param></member>
		<member name="E:Microsoft.Ink.InkEdit.Recognition">
			<summary>Occurs when the InkEdit control recognizes using the Recognize method.</summary>
			<param name="sender">[in] Specifies the InkEdit control that sent this event.</param>
			<param name="e">[in] Specifies the InkEditRecognitionEventArgs object containing the data for this event.</param>
		</member>
		<member name="E:Microsoft.Ink.InkEdit.Gesture">
			<summary>Occurs when an application-specific gesture is recognized.</summary><param name="sender">[in] Specifies the source InkCollector of this event.</param><param name="e">[in] Specifies the InkCollectorGestureEventArgs object that contains the event data.</param><param name="Cursor">[in] Automation only. Specifies the IInkCursor object used to create this gesture.</param><param name="Strokes">[in] Automation only. Specifies the IInkStrokes collection consisting of the strokes that make up this gesture.</param><param name="Gestures">[in] Automation only. Specifies an array of gestures, in order of confidence.</param><param name="Cancel">[in, out] Automation only. Specifies whether the collection of this gesture should be canceled; e.g. to not erase the ink and fire the Stroke event.</param></member>
		<member name="F:Microsoft.Ink.InkEdit.Stroke">
			<summary>Occurs when the user draws a new stroke on any tablet.</summary><param name="sender">[in] Specifies the source InkCollector of this event.</param><param name="e">[in] Specifies the InkCollectorStrokeEventArgs object that contains the event data.</param><param name="Cursor">[in] Automation only. Specifies the IInkCursor object.</param><param name="Stroke">[in] Automation only. Specifies the collected IInkStrokeDisp object.</param><param name="Cancel">[in, out] Automation only. Specifies whether the event should be canceled. If True, the collection of the stroke is canceled.</param></member>
		<member name="F:Microsoft.Ink.InkEdit.Recognition">
			<summary>Occurs when the InkEdit control recognizes using the Recognize method.</summary>
			<param name="sender">[in] Specifies the InkEdit control that sent this event.</param>
			<param name="e">[in] Specifies the InkEditRecognitionEventArgs object containing the data for this event.</param>
		</member>
		<member name="F:Microsoft.Ink.InkEdit.Gesture">
			<summary>Occurs when an application-specific gesture is recognized.</summary><param name="sender">[in] Specifies the source InkCollector of this event.</param><param name="e">[in] Specifies the InkCollectorGestureEventArgs object that contains the event data.</param><param name="Cursor">[in] Automation only. Specifies the IInkCursor object used to create this gesture.</param><param name="Strokes">[in] Automation only. Specifies the IInkStrokes collection consisting of the strokes that make up this gesture.</param><param name="Gestures">[in] Automation only. Specifies an array of gestures, in order of confidence.</param><param name="Cancel">[in, out] Automation only. Specifies whether the collection of this gesture should be canceled; e.g. to not erase the ink and fire the Stroke event.</param></member>
		<member name="M:Microsoft.Ink.InkEdit.#ctor">
			<summary>Specifies the creation of a new InkEdit control.</summary>
			<returns>This method constructs a new InkEdit control.</returns>
		</member>
		<member name="M:Microsoft.Ink.InkEdit.SetGestureStatus(Microsoft.Ink.ApplicationGesture,System.Boolean)">
			<summary>Specifies (sets) the interest of the object/control in a given gesture.</summary><param name="gesture">[in] Specifies the gesture that you want the status of.</param><param name="gestureStatus">[in] Specifies the value of the gesture status. Set the value to True if the gesture is being used, False if it is being ignored.</param></member>
		<member name="M:Microsoft.Ink.InkEdit.GetGestureStatus(Microsoft.Ink.ApplicationGesture)">
			<summary>Specifies (gets) the interest of the object/control in a given gesture.</summary><param name="gesture">[in] Specifies the gesture that you want the status of.</param><returns>This method returns the Boolean value that indicates the interest status of a given application gesture.</returns></member>
		<member name="M:Microsoft.Ink.InkEdit.Recognize">
			<summary>Specifies that recognition should occur.</summary>
		</member>
		<member name="T:Microsoft.Ink.IEC_STROKEINFO">
			<summary>Contains information about a stroke event.</summary>
		</member>
		<member name="T:Microsoft.Ink.IEC_GESTUREINFO">
			<summary>Contains information about a specific gesture.</summary>
		</member>
		<member name="T:Microsoft.Ink.IEC_RECOGNITIONRESULTINFO">
			<summary>Contains information about a recognition result.</summary>
		</member>
		<member name="T:Microsoft.Ink.Cursor">
			<summary>Represents general information about the tablet cursor.</summary>
		</member>
		<member name="P:Microsoft.Ink.Cursor.Name">
			<summary>Returns the name of an object.</summary>
			<returns>This property returns a string that represents the name of the object.</returns>
		</member>
		<member name="P:Microsoft.Ink.Cursor.Id">
			<summary>Returns the identifier of an object.</summary>
			<returns>This property returns a signed 32-bit number that identifies the object.</returns>
			<returns>Managed library only (Gesture.ID).</returns>
			<returns>Automation only (InkCursorButton::ID).</returns>
		</member>
		<member name="P:Microsoft.Ink.Cursor.Inverted">
			<summary>Returns the value that specifies whether the cursor is the inverted end of the pen.</summary>
			<returns>This property returns the Boolean value that indicates whether the cursor is the inverted, or eraser, end of the pen.</returns>
		</member>
		<member name="P:Microsoft.Ink.Cursor.DrawingAttributes">
			<summary>Returns or sets the drawing attributes to apply to ink as it is drawn.</summary>
			<returns>This property returns the DrawingAttributes object that determines the attributes to apply to ink as it is drawn.</returns>
		</member>
		<member name="P:Microsoft.Ink.Cursor.Tablet">
			<summary>Returns the tablet device to which a cursor belongs, or that an InkCollector object is currently using to collect cursor input.</summary>
			<returns>This property returns the Tablet object to which the cursor belongs, or that an InkCollector object is currently using to collect cursor input.</returns>
		</member>
		<member name="P:Microsoft.Ink.Cursor.Buttons">
			<summary>Returns the collection of cursor buttons that are available on a given cursor.</summary>
			<returns>This property returns the CursorButtons collection of CursorButton objects that are available on a given cursor.</returns>
		</member>
		<member name="T:Microsoft.Ink.CursorButton">
			<summary>Represents general information about a cursor button, such as the globally unique identifier (GUID) that uniquely identifies the button.</summary>
		</member>
		<member name="P:Microsoft.Ink.CursorButton.Name">
			<summary>Returns the name of an object.</summary><returns>This property returns a string that represents the name of the object.</returns></member>
		<member name="P:Microsoft.Ink.CursorButton.Id">
			<summary>Returns the identifier of an object.</summary><returns>This property returns a signed 32-bit number that identifies the object.</returns><returns>Managed library only (Gesture.ID).</returns><returns>Automation only (InkCursorButton::ID).</returns></member>
		<member name="P:Microsoft.Ink.CursorButton.State">
			<summary>Returns the state of a cursor button, such as whether the button is unavailable, up, or down.</summary>
			<returns>This property returns the CursorButtonState enumeration type, which specifies whether the cursor button is unavailable, up, or down.</returns>
		</member>
		<member name="T:Microsoft.Ink.CursorButtons">
			<summary>Contains a collection of CursorButton objects that represent the buttons on a given cursor.</summary>
		</member>
		<member name="P:Microsoft.Ink.CursorButtons.SyncRoot">
			<summary>Returns the object that can be used to synchronize access to the collection.</summary>
			<returns>This property returns an object that can be used to synchronize access to the collection.</returns>
		</member>
		<member name="P:Microsoft.Ink.CursorButtons.Count">
			<summary>Returns the number of objects or collections contained in a collection.</summary>
			<returns>This property returns a signed 32-bit number that specifies the number of objects or collections in the collection.</returns>
		</member>
		<member name="P:Microsoft.Ink.CursorButtons.IsSynchronized">
			<summary>Returns a value that indicates whether access to the collection is synchronized (thread safe).</summary>
			<returns>This property returns the Boolean value that specifies whether access to the collection is synchronized (thread safe).</returns>
		</member>
		<member name="P:Microsoft.Ink.CursorButtons.Item">
			<summary>Specifies the object or collection to return at the given index in a collection.</summary>
			<param name="index">[in] Specifies the zero-based index, or position, of the object or collection to return from the collection. The index must be a number from 0 to one less than the value of the collection's Count property.</param>
			<param name="identifier">[in] Automation only. Specifies the identifying information, such as a GUID, associated with the object or collection to return from the collection.</param>
			<returns>This method returns the object or collection of the specified type at the given index in the collection.</returns>
		</member>
		<member name="P:Microsoft.Ink.CursorButtons.Item">
			<summary>Specifies the object or collection to return at the given index in a collection.</summary>
			<param name="index">[in] Specifies the zero-based index, or position, of the object or collection to return from the collection. The index must be a number from 0 to one less than the value of the collection's Count property.</param>
			<param name="identifier">[in] Automation only. Specifies the identifying information, such as a GUID, associated with the object or collection to return from the collection.</param>
			<returns>This method returns the object or collection of the specified type at the given index in the collection.</returns>
		</member>
		<member name="M:Microsoft.Ink.CursorButtons.CopyTo(System.Array,System.Int32)">
			<summary>Copies all the elements of the current collection to the specified one-dimensional Array starting at the specified destination Array index.</summary>
			<param name="array">[in] Specifies the one-dimensional array that is the destination of the elements copied from the collection. The array must have zero-based indexing.</param>
			<param name="index">[in] Specifies the zero-based index in the array parameter at which copying begins.</param>
		</member>
		<member name="M:Microsoft.Ink.CursorButtons.GetEnumerator">
			<summary>Returns a System.Collections.IEnumerator that contains all objects within the collection.</summary>
		</member>
		<member name="T:Microsoft.Ink.Cursors">
			<summary>Contains the Cursor objects that represent general information about a tablet cursor.</summary>
		</member>
		<member name="P:Microsoft.Ink.Cursors.SyncRoot">
			<summary>Returns the object that can be used to synchronize access to the collection.</summary><returns>This property returns an object that can be used to synchronize access to the collection.</returns></member>
		<member name="P:Microsoft.Ink.Cursors.Count">
			<summary>Returns the number of objects or collections contained in a collection.</summary><returns>This property returns a signed 32-bit number that specifies the number of objects or collections in the collection.</returns></member>
		<member name="P:Microsoft.Ink.Cursors.IsSynchronized">
			<summary>Returns a value that indicates whether access to the collection is synchronized (thread safe).</summary><returns>This property returns the Boolean value that specifies whether access to the collection is synchronized (thread safe).</returns></member>
		<member name="P:Microsoft.Ink.Cursors.Item">
			<summary>Specifies the object or collection to return at the given index in a collection.</summary><param name="index">[in] Specifies the zero-based index, or position, of the object or collection to return from the collection. The index must be a number from 0 to one less than the value of the collection's Count property.</param><param name="identifier">[in] Automation only. Specifies the identifying information, such as a GUID, associated with the object or collection to return from the collection.</param><returns>This method returns the object or collection of the specified type at the given index in the collection.</returns></member>
		<member name="M:Microsoft.Ink.Cursors.CopyTo(System.Array,System.Int32)">
			<summary>Copies all the elements of the current collection to the specified one-dimensional Array starting at the specified destination Array index.</summary><param name="array">[in] Specifies the one-dimensional array that is the destination of the elements copied from the collection. The array must have zero-based indexing.</param><param name="index">[in] Specifies the zero-based index in the array parameter at which copying begins.</param></member>
		<member name="M:Microsoft.Ink.Cursors.GetEnumerator">
			<summary>Returns a System.Collections.IEnumerator that contains all objects within the collection.</summary></member>
		<member name="T:Microsoft.Ink.CustomStrokes">
			<summary>Contains a collection of user-defined Strokes collections.</summary>
		</member>
		<member name="P:Microsoft.Ink.CustomStrokes.Count">
			<summary>Returns the number of objects or collections contained in a collection.</summary><returns>This property returns a signed 32-bit number that specifies the number of objects or collections in the collection.</returns></member>
		<member name="P:Microsoft.Ink.CustomStrokes.IsFixedSize">
			<summary>Returns the value that specifies whether a collection is of fixed size.</summary>
			<returns>This property returns the Boolean value that specifies whether a collection is of fixed size.</returns>
		</member>
		<member name="P:Microsoft.Ink.CustomStrokes.IsSynchronized">
			<summary>Returns a value that indicates whether access to the collection is synchronized (thread safe).</summary><returns>This property returns the Boolean value that specifies whether access to the collection is synchronized (thread safe).</returns></member>
		<member name="P:Microsoft.Ink.CustomStrokes.SyncRoot">
			<summary>Returns the object that can be used to synchronize access to the collection.</summary><returns>This property returns an object that can be used to synchronize access to the collection.</returns></member>
		<member name="P:Microsoft.Ink.CustomStrokes.Item">
			<summary>Specifies the object or collection to return at the given index in a collection.</summary><param name="index">[in] Specifies the zero-based index, or position, of the object or collection to return from the collection. The index must be a number from 0 to one less than the value of the collection's Count property.</param><param name="identifier">[in] Automation only. Specifies the identifying information, such as a GUID, associated with the object or collection to return from the collection.</param><returns>This method returns the object or collection of the specified type at the given index in the collection.</returns></member>
		<member name="P:Microsoft.Ink.CustomStrokes.Item">
			<summary>Specifies the object or collection to return at the given index in a collection.</summary><param name="index">[in] Specifies the zero-based index, or position, of the object or collection to return from the collection. The index must be a number from 0 to one less than the value of the collection's Count property.</param><param name="identifier">[in] Automation only. Specifies the identifying information, such as a GUID, associated with the object or collection to return from the collection.</param><returns>This method returns the object or collection of the specified type at the given index in the collection.</returns></member>
		<member name="M:Microsoft.Ink.CustomStrokes.CopyTo(System.Array,System.Int32)">
			<summary>Copies all the elements of the current collection to the specified one-dimensional Array starting at the specified destination Array index.</summary><param name="array">[in] Specifies the one-dimensional array that is the destination of the elements copied from the collection. The array must have zero-based indexing.</param><param name="index">[in] Specifies the zero-based index in the array parameter at which copying begins.</param></member>
		<member name="M:Microsoft.Ink.CustomStrokes.Clear">
			<summary>Specifies that all custom strokes be cleared from the collection of custom strokes.</summary>
		</member>
		<member name="M:Microsoft.Ink.CustomStrokes.Add(System.String,Microsoft.Ink.Strokes)">
			<summary>Specifies the collection of strokes to add to the collection of custom strokes.</summary>
			<param name="name">[in] Specifies the name of the Strokes collection to add to the collection of custom strokes.</param>
			<param name="strokes">[in] Specifies the Strokes collection to add to the collection of custom strokes.</param>
		</member>
		<member name="M:Microsoft.Ink.CustomStrokes.Remove(System.String)">
			<summary>Specifies the collection of strokes to remove from the given collection of custom strokes.</summary>
			<param name="name">[in] Specifies the name used to add the collection of strokes to the collection of custom strokes. The same set of strokes will be removed.</param>
			<param name="Identifier">[in] Automation only. Specifies the name or index of the collection of strokes to remove from the collection of custom strokes.</param>
		</member>
		<member name="M:Microsoft.Ink.CustomStrokes.RemoveAt(System.Int32)">
			<summary>Specifies the object to remove from a collection based on its index in the collection.</summary>
			<param name="index">[in] Specifies the index of the object to remove from the collection.</param>
		</member>
		<member name="M:Microsoft.Ink.CustomStrokes.GetEnumerator">
			<summary>Returns a System.Collections.IEnumerator that contains all objects within the collection.</summary></member>
		<member name="T:Microsoft.Ink.PenTip">
			<summary>Defines values that specify whether the pen tip is round or rectangular.</summary>
		</member>
		<member name="F:Microsoft.Ink.PenTip.Ball">
			<summary>Round pen tip.</summary>
		</member>
		<member name="F:Microsoft.Ink.PenTip.Rectangle">
			<summary>Rectangular pen tip.</summary>
		</member>
		<member name="T:Microsoft.Ink.RasterOperation">
			<summary>Defines values for performing raster operations on drawn ink.</summary>
		</member>
		<member name="F:Microsoft.Ink.RasterOperation.Black">
			<summary>Black pen color.</summary>
		</member>
		<member name="F:Microsoft.Ink.RasterOperation.NotMergePen">
			<summary>Inverse of MergePen.</summary>
		</member>
		<member name="F:Microsoft.Ink.RasterOperation.MaskNotPen">
			<summary>Combination of the colors common to the background color and the inverse of the pen.</summary>
		</member>
		<member name="F:Microsoft.Ink.RasterOperation.NotCopyPen">
			<summary>Inverse of CopyPen.</summary>
		</member>
		<member name="F:Microsoft.Ink.RasterOperation.MakePenNot">
			<summary>Combination of the colors common to both the pen and the inverse of the display.</summary>
		</member>
		<member name="F:Microsoft.Ink.RasterOperation.Not">
			<summary>Inverse of the display color.</summary>
		</member>
		<member name="F:Microsoft.Ink.RasterOperation.XOrPen">
			<summary>Combination of the colors in the pen and in the display color, but not in both.</summary>
		</member>
		<member name="F:Microsoft.Ink.RasterOperation.NotMaskPen">
			<summary>Inverse of MaskPen.</summary>
		</member>
		<member name="F:Microsoft.Ink.RasterOperation.MaskPen">
			<summary>Combination of the colors common to both the pen and the display.</summary>
		</member>
		<member name="F:Microsoft.Ink.RasterOperation.NotXOrPen">
			<summary>Inverse of XOrPen.</summary>
		</member>
		<member name="F:Microsoft.Ink.RasterOperation.NoOperation">
			<summary>No operation; the output remains unchanged.</summary>
		</member>
		<member name="F:Microsoft.Ink.RasterOperation.MergeNotPen">
			<summary>Combination of the display color and the inverse of the pen color.</summary>
		</member>
		<member name="F:Microsoft.Ink.RasterOperation.CopyPen">
			<summary>Pen color.</summary>
		</member>
		<member name="F:Microsoft.Ink.RasterOperation.MergePenNot">
			<summary>Combination of the pen color and the inverse of the display color.</summary>
		</member>
		<member name="F:Microsoft.Ink.RasterOperation.MergePen">
			<summary>Combination of the pen color and the display color.</summary>
		</member>
		<member name="F:Microsoft.Ink.RasterOperation.White">
			<summary>White pen color.</summary>
		</member>
		<member name="T:Microsoft.Ink.DrawingAttributes">
			<summary>Specifies the public constructor of a DrawingAttributes object.</summary>
		</member>
		<member name="P:Microsoft.Ink.DrawingAttributes.Color">
			<summary>Returns or sets the color of the ink drawn with this DrawingAttributes object.</summary>
			<returns>This property returns the color of the ink.</returns>
		</member>
		<member name="P:Microsoft.Ink.DrawingAttributes.Width">
			<summary>Returns or sets the width of the pen when drawing ink with this DrawingAttributes object.</summary>
			<returns>(Visual Basic .NET only.) This property returns a single-precision number that indicates the width of the pen.</returns>
			<returns>(C# and C++ only.) This property returns a floating-point number that indicates the width of the pen.</returns>
		</member>
		<member name="P:Microsoft.Ink.DrawingAttributes.Height">
			<summary>Returns or sets the height of the pen when drawing ink with this DrawingAttributes object.</summary>
			<returns>(Visual Basic .NET only.) This property returns a single-precision number that indicates the height of the pen.</returns>
			<returns>(C# and C++ only.) This property returns a floating-point number that indicates the height of the pen.</returns>
		</member>
		<member name="P:Microsoft.Ink.DrawingAttributes.FitToCurve">
			<summary>Returns or sets the value that specifies whether Bezier smoothing is used to render ink; this means that ink will be rendered as a series of curves instead of as lines between pen sample points.</summary>
			<returns>This property returns the Boolean value that specifies how the ink is rendered.</returns>
		</member>
		<member name="P:Microsoft.Ink.DrawingAttributes.IgnorePressure">
			<summary>Returns or sets the value that specifies whether drawn ink will automatically get wider with increased pressure of the pen tip on the tablet surface.</summary>
			<returns>This property returns the Boolean value that specifies whether drawn ink will automatically get wider with increased pressure of the pen tip on the tablet surface.</returns>
		</member>
		<member name="P:Microsoft.Ink.DrawingAttributes.Transparency">
			<summary>Returns or sets the transparency value of drawn ink.</summary>
			<returns>This property sets or returns a System.Byte in the range of 0 to 255 that indicates the transparency of the drawn ink.</returns>
		</member>
		<member name="P:Microsoft.Ink.DrawingAttributes.RasterOperation">
			<summary>Defines values for performing raster operations on drawn ink.</summary>
		</member>
		<member name="P:Microsoft.Ink.DrawingAttributes.PenTip">
			<summary>Defines values that specify whether the pen tip is round or rectangular.</summary>
		</member>
		<member name="P:Microsoft.Ink.DrawingAttributes.ExtendedProperties">
			<summary>Returns the collection of application-defined data stored in an object.</summary>
			<returns>This property returns the ExtendedProperties collection that allows an application to store custom data in an object.</returns>
		</member>
		<member name="M:Microsoft.Ink.DrawingAttributes.#ctor(Microsoft.Ink._InternalDrawingAttributes)">
			<summary>Specifies the public constructor of a DrawingAttributes object.</summary>
		</member>
		<member name="M:Microsoft.Ink.DrawingAttributes.#ctor">
			<summary>Specifies the public constructor of a DrawingAttributes object.</summary>
		</member>
		<member name="M:Microsoft.Ink.DrawingAttributes.#ctor(System.Drawing.Color)">
			<summary>Specifies the public constructor of a DrawingAttributes object.</summary>
		</member>
		<member name="M:Microsoft.Ink.DrawingAttributes.#ctor(System.Single)">
			<summary>Specifies the public constructor of a DrawingAttributes object.</summary>
		</member>
		<member name="M:Microsoft.Ink.DrawingAttributes.#ctor(System.Drawing.Pen)">
			<summary>Specifies the public constructor of a DrawingAttributes object.</summary>
		</member>
		<member name="M:Microsoft.Ink.DrawingAttributes.Clone">
			<summary>Specifies the creation of a duplicate object.</summary>
			<param name="DrawingAttributes">This method returns a duplicate DrawingAttributes object, which is an exact copy of the original object.</param>
			<param name="Ink">This method returns a duplicate Ink object, which is an exact copy of the original object.</param>
			<param name="RecognizerContext">This method returns a duplicate RecognizerContext object, which is an exact copy of the original object.</param>
		</member>
		<member name="T:Microsoft.Ink.ExtendedProperties">
			<summary>Contains the ExtendedProperty objects that represent application-defined data that is stored with a stroke.</summary>
		</member>
		<member name="P:Microsoft.Ink.ExtendedProperties.Count">
			<summary>Returns the number of objects or collections contained in a collection.</summary><returns>This property returns a signed 32-bit number that specifies the number of objects or collections in the collection.</returns></member>
		<member name="P:Microsoft.Ink.ExtendedProperties.IsFixedSize">
			<summary>Returns the value that specifies whether a collection is of fixed size.</summary><returns>This property returns the Boolean value that specifies whether a collection is of fixed size.</returns></member>
		<member name="P:Microsoft.Ink.ExtendedProperties.IsSynchronized">
			<summary>Returns a value that indicates whether access to the collection is synchronized (thread safe).</summary><returns>This property returns the Boolean value that specifies whether access to the collection is synchronized (thread safe).</returns></member>
		<member name="P:Microsoft.Ink.ExtendedProperties.SyncRoot">
			<summary>Returns the object that can be used to synchronize access to the collection.</summary><returns>This property returns an object that can be used to synchronize access to the collection.</returns></member>
		<member name="P:Microsoft.Ink.ExtendedProperties.Item">
			<summary>Specifies the object or collection to return at the given index in a collection.</summary><param name="index">[in] Specifies the zero-based index, or position, of the object or collection to return from the collection. The index must be a number from 0 to one less than the value of the collection's Count property.</param><param name="identifier">[in] Automation only. Specifies the identifying information, such as a GUID, associated with the object or collection to return from the collection.</param><returns>This method returns the object or collection of the specified type at the given index in the collection.</returns></member>
		<member name="P:Microsoft.Ink.ExtendedProperties.Item">
			<summary>Specifies the object or collection to return at the given index in a collection.</summary><param name="index">[in] Specifies the zero-based index, or position, of the object or collection to return from the collection. The index must be a number from 0 to one less than the value of the collection's Count property.</param><param name="identifier">[in] Automation only. Specifies the identifying information, such as a GUID, associated with the object or collection to return from the collection.</param><returns>This method returns the object or collection of the specified type at the given index in the collection.</returns></member>
		<member name="M:Microsoft.Ink.ExtendedProperties.#ctor(Microsoft.Ink._Internal.IInkExtendedProperties,Microsoft.Ink.ExtendedProperty+PropertyType)">
			<summary>Returns the collection of application-defined data stored in an object.</summary><returns>This property returns the ExtendedProperties collection that allows an application to store custom data in an object.</returns></member>
		<member name="M:Microsoft.Ink.ExtendedProperties.#ctor">
			<summary>Returns the collection of application-defined data stored in an object.</summary><returns>This property returns the ExtendedProperties collection that allows an application to store custom data in an object.</returns></member>
		<member name="M:Microsoft.Ink.ExtendedProperties.CopyTo(System.Array,System.Int32)">
			<summary>Copies all the elements of the current collection to the specified one-dimensional Array starting at the specified destination Array index.</summary><param name="array">[in] Specifies the one-dimensional array that is the destination of the elements copied from the collection. The array must have zero-based indexing.</param><param name="index">[in] Specifies the zero-based index in the array parameter at which copying begins.</param></member>
		<member name="M:Microsoft.Ink.ExtendedProperties.Clear">
			<summary>Specifies the extended properties to clear from the collection.</summary>
		</member>
		<member name="M:Microsoft.Ink.ExtendedProperties.IndexOf(Microsoft.Ink.ExtendedProperty)">
			<summary>Specifies the index of a specific extended property within a collection of extended properties.</summary>
			<param name="id">[in] Specifies the GUID of the extended property to check for.</param>
			<param name="ep">[in] Specifies the extended property to check for.</param>
		</member>
		<member name="M:Microsoft.Ink.ExtendedProperties.IndexOf(System.Guid)">
			<summary>Specifies the index of a specific extended property within a collection of extended properties.</summary>
			<param name="id">[in] Specifies the GUID of the extended property to check for.</param>
			<param name="ep">[in] Specifies the extended property to check for.</param>
		</member>
		<member name="M:Microsoft.Ink.ExtendedProperties.Contains(Microsoft.Ink.ExtendedProperty)">
			<summary>Specifies whether the collection of extended properties contains a specific extended property.</summary>
			<param name="id">[in] Specifies the GUID of the extended property to check for.</param>
			<param name="ep">[in] Specifies the extended property to check for.</param>
		</member>
		<member name="M:Microsoft.Ink.ExtendedProperties.Contains(System.Guid)">
			<summary>Specifies whether the collection of extended properties contains a specific extended property.</summary>
			<param name="id">[in] Specifies the GUID of the extended property to check for.</param>
			<param name="ep">[in] Specifies the extended property to check for.</param>
		</member>
		<member name="M:Microsoft.Ink.ExtendedProperties.Add(System.Guid,System.Object)">
			<summary>Specifies the extended property to add to the collection of extended properties.</summary>
			<param name="theGuid">[in] Specifies the name of the new ExtendedProperty object. In Managed code, the name is expressed as a System.Guid. In Automation, the name is expressed as a BSTR that represents the GUID in the following format: 
{dfc71f44-354b-4ca1-93d7-7459410b6343} (including curly braces)</param>
			<param name="theData">[in] Specifies the data for the new ExtendedProperty object.</param>
			<returns>This method returns the newly created ExtendedProperty object.</returns>
		</member>
		<member name="M:Microsoft.Ink.ExtendedProperties.Remove(System.Guid)">
			<summary>Specifies the extended property to remove from the collection.</summary>
			<param name="ep">[in] Specifies the ExtendedProperty object to remove from the collection.</param>
			<param name="id">[in] Specifies the globally unique identifier (GUID) of the ExtendedProperty object to remove from the collection.</param>
			<param name="Identifier">[in] Automation only. Specifies the identifier of the InkExtendedProperty object to remove from the collection. The identifier can be a GUID, an index, or an extended property object.</param>
		</member>
		<member name="M:Microsoft.Ink.ExtendedProperties.Remove(Microsoft.Ink.ExtendedProperty)">
			<summary>Specifies the extended property to remove from the collection.</summary>
			<param name="ep">[in] Specifies the ExtendedProperty object to remove from the collection.</param>
			<param name="id">[in] Specifies the globally unique identifier (GUID) of the ExtendedProperty object to remove from the collection.</param>
			<param name="Identifier">[in] Automation only. Specifies the identifier of the InkExtendedProperty object to remove from the collection. The identifier can be a GUID, an index, or an extended property object.</param>
		</member>
		<member name="M:Microsoft.Ink.ExtendedProperties.RemoveAt(System.Int32)">
			<summary>Specifies the object to remove from a collection based on its index in the collection.</summary><param name="index">[in] Specifies the index of the object to remove from the collection.</param></member>
		<member name="M:Microsoft.Ink.ExtendedProperties.DoesPropertyExist(System.Guid)">
			<summary>Specifies whether an extended property exists within a collection of extended properties.</summary>
			<param name="theGuid">[in] Specifies the globally unique identifier (GUID) of the property to be checked.</param>
			<returns>This method returns the Boolean value that specifies whether the property exists within the collection.</returns>
		</member>
		<member name="M:Microsoft.Ink.ExtendedProperties.GetEnumerator">
			<summary>Returns a System.Collections.IEnumerator that contains all objects within the collection.</summary></member>
		<member name="T:Microsoft.Ink.ExtendedProperty">
			<summary>Represents the ability to add your own data to a variety of objects within the Tablet PC object model.</summary>
		</member>
		<member name="P:Microsoft.Ink.ExtendedProperty.Id">
			<summary>Returns the name of the extended property.</summary>
			<returns>This property returns the globally unique identifier (GUID) that specifies the extended property.</returns>
		</member>
		<member name="P:Microsoft.Ink.ExtendedProperty.Data">
			<summary>Returns or sets the data of the extended property.</summary>
			<returns>This property returns an object that specifies the data of the extended property.</returns>
		</member>
		<member name="T:Microsoft.Ink.RecognitionConfidence">
			<summary>Defines values that indicate the level of confidence the recognizer has in the recognition result.</summary>
		</member>
		<member name="F:Microsoft.Ink.RecognitionConfidence.Strong">
			<summary>Recognizer is confident that the best alternate is correct.</summary>
		</member>
		<member name="F:Microsoft.Ink.RecognitionConfidence.Intermediate">
			<summary>Recognizer is confident that the correct result is in the list of alternates.</summary>
		</member>
		<member name="F:Microsoft.Ink.RecognitionConfidence.Poor">
			<summary>Recognizer is not confident that the result is in the list of alternates.</summary>
		</member>
		<member name="T:Microsoft.Ink.ApplicationGesture">
			<summary>Defines values that set the interest in a set of application-specific gestures.</summary>
		</member>
		<member name="F:Microsoft.Ink.ApplicationGesture.AllGestures">
			<summary>All application-specific gestures are recognized.</summary>
		</member>
		<member name="F:Microsoft.Ink.ApplicationGesture.NoGesture">
			<summary>No application-specific gestures are recognized.</summary>
		</member>
		<member name="F:Microsoft.Ink.ApplicationGesture.Scratchout">
			<summary>Erases content.</summary>
		</member>
		<member name="F:Microsoft.Ink.ApplicationGesture.Triangle">
			<summary>Insert.</summary>
		</member>
		<member name="F:Microsoft.Ink.ApplicationGesture.Square">
			<summary>Action item.</summary>
		</member>
		<member name="F:Microsoft.Ink.ApplicationGesture.Star">
			<summary>Action item.</summary>
		</member>
		<member name="F:Microsoft.Ink.ApplicationGesture.Check">
			<summary>Check-off.</summary>
		</member>
		<member name="F:Microsoft.Ink.ApplicationGesture.Curlicue">
			<summary>Cut.</summary>
		</member>
		<member name="F:Microsoft.Ink.ApplicationGesture.DoubleCurlicue">
			<summary>Copy.</summary>
		</member>
		<member name="F:Microsoft.Ink.ApplicationGesture.Circle">
			<summary>No suggested semantic behavior or action.</summary>
		</member>
		<member name="F:Microsoft.Ink.ApplicationGesture.DoubleCircle">
			<summary>Paste.</summary>
		</member>
		<member name="F:Microsoft.Ink.ApplicationGesture.SemiCircleLeft">
			<summary>Undo.</summary>
		</member>
		<member name="F:Microsoft.Ink.ApplicationGesture.SemiCircleRight">
			<summary>Redo.</summary>
		</member>
		<member name="F:Microsoft.Ink.ApplicationGesture.ChevronUp">
			<summary>No suggested semantic behavior or action.</summary>
		</member>
		<member name="F:Microsoft.Ink.ApplicationGesture.ChevronDown">
			<summary>No suggested semantic behavior or action.</summary>
		</member>
		<member name="F:Microsoft.Ink.ApplicationGesture.ChevronLeft">
			<summary>No suggested semantic behavior or action.</summary>
		</member>
		<member name="F:Microsoft.Ink.ApplicationGesture.ChevronRight">
			<summary>No suggested semantic behavior or action.</summary>
		</member>
		<member name="F:Microsoft.Ink.ApplicationGesture.ArrowUp">
			<summary>No suggested semantic behavior or action.</summary>
		</member>
		<member name="F:Microsoft.Ink.ApplicationGesture.ArrowDown">
			<summary>No suggested semantic behavior or action.</summary>
		</member>
		<member name="F:Microsoft.Ink.ApplicationGesture.ArrowLeft">
			<summary>No suggested semantic behavior or action.</summary>
		</member>
		<member name="F:Microsoft.Ink.ApplicationGesture.ArrowRight">
			<summary>No suggested semantic behavior or action.</summary>
		</member>
		<member name="F:Microsoft.Ink.ApplicationGesture.Up">
			<summary>No suggested semantic behavior or action.</summary>
		</member>
		<member name="F:Microsoft.Ink.ApplicationGesture.Down">
			<summary>No suggested semantic behavior or action.</summary>
		</member>
		<member name="F:Microsoft.Ink.ApplicationGesture.Left">
			<summary>Backspace.</summary>
		</member>
		<member name="F:Microsoft.Ink.ApplicationGesture.Right">
			<summary>Space.</summary>
		</member>
		<member name="F:Microsoft.Ink.ApplicationGesture.UpDown">
			<summary>Undo.</summary>
		</member>
		<member name="F:Microsoft.Ink.ApplicationGesture.DownUp">
			<summary>No suggested semantic behavior or action.</summary>
		</member>
		<member name="F:Microsoft.Ink.ApplicationGesture.LeftRight">
			<summary>Cut.</summary>
		</member>
		<member name="F:Microsoft.Ink.ApplicationGesture.RightLeft">
			<summary>Copy.</summary>
		</member>
		<member name="F:Microsoft.Ink.ApplicationGesture.UpLeftLong">
			<summary>Decrease indent.</summary>
		</member>
		<member name="F:Microsoft.Ink.ApplicationGesture.UpRightLong">
			<summary>Tab.</summary>
		</member>
		<member name="F:Microsoft.Ink.ApplicationGesture.DownLeftLong">
			<summary>Enter.</summary>
		</member>
		<member name="F:Microsoft.Ink.ApplicationGesture.DownRightLong">
			<summary>Space.</summary>
		</member>
		<member name="F:Microsoft.Ink.ApplicationGesture.UpLeft">
			<summary>No suggested semantic behavior or action.</summary>
		</member>
		<member name="F:Microsoft.Ink.ApplicationGesture.UpRight">
			<summary>No suggested semantic behavior or action.</summary>
		</member>
		<member name="F:Microsoft.Ink.ApplicationGesture.DownLeft">
			<summary>No suggested semantic behavior or action.</summary>
		</member>
		<member name="F:Microsoft.Ink.ApplicationGesture.DownRight">
			<summary>No suggested semantic behavior or action.</summary>
		</member>
		<member name="F:Microsoft.Ink.ApplicationGesture.LeftUp">
			<summary>No suggested semantic behavior or action.</summary>
		</member>
		<member name="F:Microsoft.Ink.ApplicationGesture.LeftDown">
			<summary>No suggested semantic behavior or action.</summary>
		</member>
		<member name="F:Microsoft.Ink.ApplicationGesture.RightUp">
			<summary>Input Method Editor (IME) convert.</summary>
		</member>
		<member name="F:Microsoft.Ink.ApplicationGesture.RightDown">
			<summary>No suggested semantic behavior or action.</summary>
		</member>
		<member name="F:Microsoft.Ink.ApplicationGesture.Exclamation">
			<summary>No suggested semantic behavior or action.</summary>
		</member>
		<member name="F:Microsoft.Ink.ApplicationGesture.Tap">
			<summary>Click.</summary>
		</member>
		<member name="F:Microsoft.Ink.ApplicationGesture.DoubleTap">
			<summary>Double-click.</summary>
		</member>
		<member name="T:Microsoft.Ink.Gesture">
			<summary>Occurs when an application-specific gesture is recognized.</summary>
			<param name="sender">[in] Specifies the source InkCollector of this event.</param>
			<param name="e">[in] Specifies the InkCollectorGestureEventArgs object that contains the event data.</param>
			<param name="Cursor">[in] Automation only. Specifies the IInkCursor object used to create this gesture.</param>
			<param name="Strokes">[in] Automation only. Specifies the IInkStrokes collection consisting of the strokes that make up this gesture.</param>
			<param name="Gestures">[in] Automation only. Specifies an array of gestures, in order of confidence.</param>
			<param name="Cancel">[in, out] Automation only. Specifies whether the collection of this gesture should be canceled; e.g. to not erase the ink and fire the Stroke event.</param>
		</member>
		<member name="P:Microsoft.Ink.Gesture.Id">
			<summary>Returns the identifier of an object.</summary><returns>This property returns a signed 32-bit number that identifies the object.</returns><returns>Managed library only (Gesture.ID).</returns><returns>Automation only (InkCursorButton::ID).</returns></member>
		<member name="P:Microsoft.Ink.Gesture.HotPoint">
			<summary>Returns the Hotpoint of the gesture in ink space coordinates.</summary>
			<returns>This property returns the Hotpoint of the gesture in ink space coordinates.</returns>
		</member>
		<member name="P:Microsoft.Ink.Gesture.Confidence">
			<summary>Returns the level of confidence - strong, intermediate, or poor - that a recognizer has in the recognition of a RecognitionAlternate object or of a gesture.</summary>
			<returns>This property returns the RecognitionConfidence enumeration member that represents the recognizer's confidence level in the recognition of an alternate or a gesture.</returns>
		</member>
		<member name="T:Microsoft.Ink.ExtractFlags">
			<summary>Defines values that determine what part of a stroke to remove from an Ink object.</summary>
		</member>
		<member name="F:Microsoft.Ink.ExtractFlags.CopyFromOriginal">
			<summary>The ink is copied from the Ink object.</summary>
		</member>
		<member name="F:Microsoft.Ink.ExtractFlags.RemoveFromOriginal">
			<summary>The ink is cut from the Ink object.</summary>
		</member>
		<member name="F:Microsoft.Ink.ExtractFlags.Default">
			<summary>The ink is cut from the Ink object.</summary>
		</member>
		<member name="T:Microsoft.Ink.PersistenceFormat">
			<summary>Defines values that specify how ink is persisted.</summary>
		</member>
		<member name="F:Microsoft.Ink.PersistenceFormat.InkSerializedFormat">
			<summary>Specifies that ink be persisted using Ink Serialized Format (ISF).</summary>
		</member>
		<member name="F:Microsoft.Ink.PersistenceFormat.Base64InkSerializedFormat">
			<summary>Specifies that ink be persisted by encoding the ISF as a base64 stream.</summary>
		</member>
		<member name="F:Microsoft.Ink.PersistenceFormat.Gif">
			<summary>Specifies that ink be persisted using a GIF file that contains ISF as meta-data embedded within the file.</summary>
		</member>
		<member name="F:Microsoft.Ink.PersistenceFormat.Base64Gif">
			<summary>Specifies that ink be persisted by using a base64 encoded fortified GIF.</summary>
		</member>
		<member name="T:Microsoft.Ink.CompressionMode">
			<summary>Defines values for the compression modes used to save the Ink object to a serialized format.</summary>
		</member>
		<member name="F:Microsoft.Ink.CompressionMode.Default">
			<summary>Provides the best tradeoff between save-time and storage for the typical application.</summary>
		</member>
		<member name="F:Microsoft.Ink.CompressionMode.NoCompression">
			<summary>Use when save-time is more important than the amount of storage space used and when compatibility between versions is important.</summary>
		</member>
		<member name="T:Microsoft.Ink.BoundingBoxMode">
			<summary>Defines values that specify which characteristics of a stroke, such as drawing attributes, are used to calculate the bounding box of the ink.</summary>
		</member>
		<member name="F:Microsoft.Ink.BoundingBoxMode.Default">
			<summary>Use the definition of each stroke (polyline or Bezier) to calculate the bounding box; includes the drawing attributes, such as pen width, in the calculation.</summary>
		</member>
		<member name="F:Microsoft.Ink.BoundingBoxMode.NoCurveFit">
			<summary>Use the polyline of the strokes (ignore Bezier curve fitting requests) to calculate the bounding box; includes the drawing attributes in the calculation.</summary>
		</member>
		<member name="F:Microsoft.Ink.BoundingBoxMode.CurveFit">
			<summary>Use the Bezier curve fitting line of the strokes (apply Bezier curve fitting to all strokes) to calculate the bounding box; includes the drawing attributes in the calculation.</summary>
		</member>
		<member name="F:Microsoft.Ink.BoundingBoxMode.PointsOnly">
			<summary>Use only the points of the strokes to calculate the bounding box.</summary>
		</member>
		<member name="F:Microsoft.Ink.BoundingBoxMode.Union">
			<summary>The union of a NoCurveFit request and a CurveFit request.</summary>
		</member>
		<member name="T:Microsoft.Ink.InkClipboardModes">
			<summary>Defines values that specify the copy options of the clipboard.</summary>
		</member>
		<member name="T:Microsoft.Ink.InkClipboardFormats">
			<summary>Defines values that specify the format of ink that is stored on the clipboard.</summary>
		</member>
		<member name="F:Microsoft.Ink.InkClipboardFormats.None">
			<summary>Flag that can be used to verify whether any formats are present by checking against it.</summary>
		</member>
		<member name="F:Microsoft.Ink.InkClipboardFormats.InkSerializedFormat">
			<summary>Specifies that ink should be encoded using Ink Serialized Format (ISF).</summary>
		</member>
		<member name="F:Microsoft.Ink.InkClipboardFormats.SketchInk">
			<summary>Specifies that ink is not expected to form words, but rather will be interpreted as a picture.</summary>
		</member>
		<member name="F:Microsoft.Ink.InkClipboardFormats.TextInk">
			<summary>Specifies that ink be expected to form words.</summary>
		</member>
		<member name="F:Microsoft.Ink.InkClipboardFormats.EnhancedMetafile">
			<summary>Specifies the enhanced metafile to play to create the background.</summary>
		</member>
		<member name="F:Microsoft.Ink.InkClipboardFormats.Metafile">
			<summary>Specifies that ink be stored as a metafile, or a list of commands that can be played back to draw a graphic.</summary>
		</member>
		<member name="F:Microsoft.Ink.InkClipboardFormats.Bitmap">
			<summary>Specifies the bitmap to use as the background.</summary>
		</member>
		<member name="F:Microsoft.Ink.InkClipboardFormats.PasteMask">
			<summary>Specifies the formats that can be used for pasting, including tInk, sInk, and ISF.</summary>
		</member>
		<member name="F:Microsoft.Ink.InkClipboardFormats.CopyMask">
			<summary>Specifies the formats that can be copied to the clipboard through Ink.</summary>
		</member>
		<member name="F:Microsoft.Ink.InkClipboardFormats.Default">
			<summary>Specifies that ink be stored as a CopyMask.</summary>
		</member>
		<member name="T:Microsoft.Ink.Ink">
			<summary>The control is in ink collection mode.</summary>
		</member>
		<member name="P:Microsoft.Ink.Ink.Strokes">
			<summary>Contains the collection of Stroke objects that represent a single ink stroke.</summary>
		</member>
		<member name="P:Microsoft.Ink.Ink.CustomStrokes">
			<summary>Contains a collection of user-defined Strokes collections.</summary>
		</member>
		<member name="P:Microsoft.Ink.Ink.Dirty">
			<summary>Returns or sets the value that specifies whether the strokes of an Ink object have been modified since the last time the ink was saved.</summary>
			<returns>This property returns the Boolean value that specifies whether an Ink object has been modified.</returns>
		</member>
		<member name="P:Microsoft.Ink.Ink.ExtendedProperties">
			<summary>Contains the ExtendedProperty objects that represent application-defined data that is stored with a stroke.</summary>
		</member>
		<member name="E:Microsoft.Ink.Ink.InkAdded">
			<summary>Occurs when a stroke is added to the Ink object.</summary>
			<param name="sender">[in] Specifies the source Ink object of this event.</param>
			<param name="e">[in] Specifies the StrokesEventArgs object that contains the event data.</param>
			<param name="StrokeIds">[in] Automation only. Specifies the integer array of stroke Id information for all of the strokes that have been added when this event occurs.</param>
		</member>
		<member name="E:Microsoft.Ink.Ink.InkDeleted">
			<summary>Occurs when a stroke is deleted from the Ink object.</summary>
			<param name="sender">[in] Specifies the source Ink object of this event.</param>
			<param name="e">[in] Specifies the StrokesEventArgs object that contains the event data.</param>
			<param name="StrokeIds">[in] Automation only. Specifies the integer array of stroke Id information for all of the strokes that have been deleted when this event occurs.</param>
		</member>
		<member name="F:Microsoft.Ink.Ink.InkAdded">
			<summary>Occurs when a stroke is added to the Ink object.</summary>
			<param name="sender">[in] Specifies the source Ink object of this event.</param>
			<param name="e">[in] Specifies the StrokesEventArgs object that contains the event data.</param>
			<param name="StrokeIds">[in] Automation only. Specifies the integer array of stroke Id information for all of the strokes that have been added when this event occurs.</param>
		</member>
		<member name="F:Microsoft.Ink.Ink.InkDeleted">
			<summary>Occurs when a stroke is deleted from the Ink object.</summary>
			<param name="sender">[in] Specifies the source Ink object of this event.</param>
			<param name="e">[in] Specifies the StrokesEventArgs object that contains the event data.</param>
			<param name="StrokeIds">[in] Automation only. Specifies the integer array of stroke Id information for all of the strokes that have been deleted when this event occurs.</param>
		</member>
		<member name="F:Microsoft.Ink.Ink.InkSerializedFormat">
			<summary>Returns a string that specifies that ink be persisted using Ink Serialized Format (ISF).</summary>
			<returns>This property returns a string that specifies that ink be persisted using Ink Serialized Format (ISF).</returns>
		</member>
		<member name="M:Microsoft.Ink.Ink.#ctor(Microsoft.Ink._Internal.InkDisp)">
			<summary>Specifies the creation of a new Ink object.</summary>
			<returns>This method constructs a new Ink object.</returns>
		</member>
		<member name="M:Microsoft.Ink.Ink.#ctor">
			<summary>Specifies the creation of a new Ink object.</summary>
			<returns>This method constructs a new Ink object.</returns>
		</member>
		<member name="M:Microsoft.Ink.Ink.Clone">
			<summary>Specifies the creation of a duplicate object.</summary><param name="DrawingAttributes">This method returns a duplicate DrawingAttributes object, which is an exact copy of the original object.</param><param name="Ink">This method returns a duplicate Ink object, which is an exact copy of the original object.</param><param name="RecognizerContext">This method returns a duplicate RecognizerContext object, which is an exact copy of the original object.</param></member>
		<member name="M:Microsoft.Ink.Ink.HitTest(System.Drawing.Rectangle,System.Single)">
			<summary>Specifies the collection of strokes that are either completely inside or intersected by a given circle.</summary>
			<param name="point">[in] Specifies the center of the hit test circle, in ink space coordinates.</param>
			<param name="radius">[in] Specifies the radius of the circle to use in the hit test in ink space units.</param>
			<param name="x">[in] Automation only. Specifies the X-position of the hit test.</param>
			<param name="y">[in] Automation only. Specifies the Y-position of the hit test.</param>
			<returns>This method returns the collection of strokes that are either completely inside or intersected by a given circle.</returns>
		</member>
		<member name="M:Microsoft.Ink.Ink.HitTest(System.Drawing.Point[],System.Single,System.Drawing.Point[]@)">
			<summary>Specifies the collection of strokes that are either completely inside or intersected by a given circle.</summary>
			<param name="point">[in] Specifies the center of the hit test circle, in ink space coordinates.</param>
			<param name="radius">[in] Specifies the radius of the circle to use in the hit test in ink space units.</param>
			<param name="x">[in] Automation only. Specifies the X-position of the hit test.</param>
			<param name="y">[in] Automation only. Specifies the Y-position of the hit test.</param>
			<returns>This method returns the collection of strokes that are either completely inside or intersected by a given circle.</returns>
		</member>
		<member name="M:Microsoft.Ink.Ink.HitTest(System.Drawing.Point[],System.Single)">
			<summary>Specifies the collection of strokes that are either completely inside or intersected by a given circle.</summary>
			<param name="point">[in] Specifies the center of the hit test circle, in ink space coordinates.</param>
			<param name="radius">[in] Specifies the radius of the circle to use in the hit test in ink space units.</param>
			<param name="x">[in] Automation only. Specifies the X-position of the hit test.</param>
			<param name="y">[in] Automation only. Specifies the Y-position of the hit test.</param>
			<returns>This method returns the collection of strokes that are either completely inside or intersected by a given circle.</returns>
		</member>
		<member name="M:Microsoft.Ink.Ink.HitTest(System.Drawing.Point,System.Single)">
			<summary>Specifies the collection of strokes that are either completely inside or intersected by a given circle.</summary>
			<param name="point">[in] Specifies the center of the hit test circle, in ink space coordinates.</param>
			<param name="radius">[in] Specifies the radius of the circle to use in the hit test in ink space units.</param>
			<param name="x">[in] Automation only. Specifies the X-position of the hit test.</param>
			<param name="y">[in] Automation only. Specifies the Y-position of the hit test.</param>
			<returns>This method returns the collection of strokes that are either completely inside or intersected by a given circle.</returns>
		</member>
		<member name="M:Microsoft.Ink.Ink.NearestPoint(System.Drawing.Point)">
			<summary>Specifies the stroke within the Ink object that is nearest to a given point in ink space.</summary>
			<param name="point">[in] Managed code only. Specifies the given point within the Ink object, in ink space coordinates.</param>
			<param name="pointOnStroke">[in, out] Specifies the point on the line of stroke that is closest to the given point within the Ink object. For example, a value of 1.5 indicates that the point falls halfway between the first and second packets of the stroke. This parameter can be Null (vbNull in Visual Basic 6, and must be specified if using late binding) in Automation only.</param>
			<param name="distanceFromPacket">[in, out] Specifies the distance between the given point in ink space and the nearest stroke in the Ink object. This parameter can be Null (vbNull in Visual Basic 6, and must be specified if using late binding).</param>
			<param name="X">[in] Automation only. Specifies the X-position of the point.</param>
			<param name="Y">[in] Automation only. Specifies the Y-position of the point.</param>
			<returns>Specifies the stroke that contains a point that is closest to the given point in the Ink object.</returns>
		</member>
		<member name="M:Microsoft.Ink.Ink.NearestPoint(System.Drawing.Point,System.Single@)">
			<summary>Specifies the stroke within the Ink object that is nearest to a given point in ink space.</summary>
			<param name="point">[in] Managed code only. Specifies the given point within the Ink object, in ink space coordinates.</param>
			<param name="pointOnStroke">[in, out] Specifies the point on the line of stroke that is closest to the given point within the Ink object. For example, a value of 1.5 indicates that the point falls halfway between the first and second packets of the stroke. This parameter can be Null (vbNull in Visual Basic 6, and must be specified if using late binding) in Automation only.</param>
			<param name="distanceFromPacket">[in, out] Specifies the distance between the given point in ink space and the nearest stroke in the Ink object. This parameter can be Null (vbNull in Visual Basic 6, and must be specified if using late binding).</param>
			<param name="X">[in] Automation only. Specifies the X-position of the point.</param>
			<param name="Y">[in] Automation only. Specifies the Y-position of the point.</param>
			<returns>Specifies the stroke that contains a point that is closest to the given point in the Ink object.</returns>
		</member>
		<member name="M:Microsoft.Ink.Ink.NearestPoint(System.Drawing.Point,System.Single@,System.Single@)">
			<summary>Specifies the stroke within the Ink object that is nearest to a given point in ink space.</summary>
			<param name="point">[in] Managed code only. Specifies the given point within the Ink object, in ink space coordinates.</param>
			<param name="pointOnStroke">[in, out] Specifies the point on the line of stroke that is closest to the given point within the Ink object. For example, a value of 1.5 indicates that the point falls halfway between the first and second packets of the stroke. This parameter can be Null (vbNull in Visual Basic 6, and must be specified if using late binding) in Automation only.</param>
			<param name="distanceFromPacket">[in, out] Specifies the distance between the given point in ink space and the nearest stroke in the Ink object. This parameter can be Null (vbNull in Visual Basic 6, and must be specified if using late binding).</param>
			<param name="X">[in] Automation only. Specifies the X-position of the point.</param>
			<param name="Y">[in] Automation only. Specifies the Y-position of the point.</param>
			<returns>Specifies the stroke that contains a point that is closest to the given point in the Ink object.</returns>
		</member>
		<member name="M:Microsoft.Ink.Ink.DeleteStroke(Microsoft.Ink.Stroke)">
			<summary>Specifies the stroke to be deleted from the Ink object.</summary>
			<param name="stroke">[in] Specifies the stroke to delete from the Ink object.</param>
		</member>
		<member name="M:Microsoft.Ink.Ink.DeleteStrokes(Microsoft.Ink.Strokes)">
			<summary>Specifies that all strokes in a collection of strokes be deleted from the Ink object.</summary>
			<param name="strokes">[in] Specifies the collection of strokes to delete from the Ink object. The default value is Null (Nothing in Visual Basic 6, which must be specified if using late binding).</param>
		</member>
		<member name="M:Microsoft.Ink.Ink.DeleteStrokes">
			<summary>Specifies that all strokes in a collection of strokes be deleted from the Ink object.</summary>
			<param name="strokes">[in] Specifies the collection of strokes to delete from the Ink object. The default value is Null (Nothing in Visual Basic 6, which must be specified if using late binding).</param>
		</member>
		<member name="M:Microsoft.Ink.Ink.ExtractStrokes(Microsoft.Ink.Strokes,Microsoft.Ink.ExtractFlags)">
			<summary>Specifies the strokes to extract from an Ink object and cut or copy into a new Ink object using the given collection of strokes to determine which strokes to extract.</summary>
			<param name="strokes">[in, optional] Specifies the collection of strokes to extract. The default value specifies that all strokes will be extracted. Note that in Visual Basic 6 this parameter may not be left out if late binding is used; the default value of Nothing must be explicitly specified instead.</param>
			<param name="extractFlags">[in, optional] Specifies the ExtractFlags enumeration type, which specifies whether the ink or the inverse of the ink is extracted, and whether the ink should be cut or copied into the new Ink object. The default value is ExtractFlags.Default, which makes a copy of the strokes.</param>
			<returns>This method returns a new Ink object containing the extracted collection of cut or copied strokes.</returns>
		</member>
		<member name="M:Microsoft.Ink.Ink.ExtractStrokes(Microsoft.Ink.Strokes)">
			<summary>Specifies the strokes to extract from an Ink object and cut or copy into a new Ink object using the given collection of strokes to determine which strokes to extract.</summary>
			<param name="strokes">[in, optional] Specifies the collection of strokes to extract. The default value specifies that all strokes will be extracted. Note that in Visual Basic 6 this parameter may not be left out if late binding is used; the default value of Nothing must be explicitly specified instead.</param>
			<param name="extractFlags">[in, optional] Specifies the ExtractFlags enumeration type, which specifies whether the ink or the inverse of the ink is extracted, and whether the ink should be cut or copied into the new Ink object. The default value is ExtractFlags.Default, which makes a copy of the strokes.</param>
			<returns>This method returns a new Ink object containing the extracted collection of cut or copied strokes.</returns>
		</member>
		<member name="M:Microsoft.Ink.Ink.ExtractStrokes">
			<summary>Specifies the strokes to extract from an Ink object and cut or copy into a new Ink object using the given collection of strokes to determine which strokes to extract.</summary>
			<param name="strokes">[in, optional] Specifies the collection of strokes to extract. The default value specifies that all strokes will be extracted. Note that in Visual Basic 6 this parameter may not be left out if late binding is used; the default value of Nothing must be explicitly specified instead.</param>
			<param name="extractFlags">[in, optional] Specifies the ExtractFlags enumeration type, which specifies whether the ink or the inverse of the ink is extracted, and whether the ink should be cut or copied into the new Ink object. The default value is ExtractFlags.Default, which makes a copy of the strokes.</param>
			<returns>This method returns a new Ink object containing the extracted collection of cut or copied strokes.</returns>
		</member>
		<member name="M:Microsoft.Ink.Ink.ExtractStrokes(System.Drawing.Rectangle,Microsoft.Ink.ExtractFlags)">
			<summary>Specifies the strokes to extract from an Ink object and cut or copy into a new Ink object using the given collection of strokes to determine which strokes to extract.</summary>
			<param name="strokes">[in, optional] Specifies the collection of strokes to extract. The default value specifies that all strokes will be extracted. Note that in Visual Basic 6 this parameter may not be left out if late binding is used; the default value of Nothing must be explicitly specified instead.</param>
			<param name="extractFlags">[in, optional] Specifies the ExtractFlags enumeration type, which specifies whether the ink or the inverse of the ink is extracted, and whether the ink should be cut or copied into the new Ink object. The default value is ExtractFlags.Default, which makes a copy of the strokes.</param>
			<returns>This method returns a new Ink object containing the extracted collection of cut or copied strokes.</returns>
		</member>
		<member name="M:Microsoft.Ink.Ink.ExtractStrokes(System.Drawing.Rectangle)">
			<summary>Specifies the strokes to extract from an Ink object and cut or copy into a new Ink object using the given collection of strokes to determine which strokes to extract.</summary>
			<param name="strokes">[in, optional] Specifies the collection of strokes to extract. The default value specifies that all strokes will be extracted. Note that in Visual Basic 6 this parameter may not be left out if late binding is used; the default value of Nothing must be explicitly specified instead.</param>
			<param name="extractFlags">[in, optional] Specifies the ExtractFlags enumeration type, which specifies whether the ink or the inverse of the ink is extracted, and whether the ink should be cut or copied into the new Ink object. The default value is ExtractFlags.Default, which makes a copy of the strokes.</param>
			<returns>This method returns a new Ink object containing the extracted collection of cut or copied strokes.</returns>
		</member>
		<member name="M:Microsoft.Ink.Ink.Clip(System.Drawing.Rectangle)">
			<summary>Specifies that the strokes within an Ink object be clipped to a given rectangle, or specifies that a Stroke object be clipped to fit within a given rectangle.</summary>
			<param name="rectangle">[in] Specifies the rectangle, of type System.Drawing.Rectangle in Managed code, to which the Ink object or Stroke object is clipped. The rectangle is specified in ink space coordinates.

In Automation, the rectangle is an InkRectangle object.</param>
		</member>
		<member name="M:Microsoft.Ink.Ink.GetBoundingBox(Microsoft.Ink.BoundingBoxMode)">
			<summary>Specifies the rectangle, in ink space coordinates, that corresponds to the bounding box of all of the strokes in an Ink object, the bounding box of a Stroke object, or the portion of the display to invalidate or redraw when displaying a Strokes collection.</summary>
			<param name="boundingBoxMode">[in, optional] Specifies the stroke characteristics to use in order to calculate the bounding box. For example, you can calculate the bounding box using only the points, you can include the drawing attributes of the stroke, or you can apply Bezier curve fitting to all strokes. For more details, see the BoundingBoxMode enumeration type.

In Automation, the BoundingBoxMode parameter of the Ink::GetBoundingBox method has a default value of -1, which means that all characteristics of a stroke are used to specify the bounding box.</param>
			<returns>This method returns the rectangle that defines the bounding box of an Ink object, a Stroke object, or a Strokes collection.</returns>
		</member>
		<member name="M:Microsoft.Ink.Ink.GetBoundingBox">
			<summary>Specifies the rectangle, in ink space coordinates, that corresponds to the bounding box of all of the strokes in an Ink object, the bounding box of a Stroke object, or the portion of the display to invalidate or redraw when displaying a Strokes collection.</summary>
			<param name="boundingBoxMode">[in, optional] Specifies the stroke characteristics to use in order to calculate the bounding box. For example, you can calculate the bounding box using only the points, you can include the drawing attributes of the stroke, or you can apply Bezier curve fitting to all strokes. For more details, see the BoundingBoxMode enumeration type.

In Automation, the BoundingBoxMode parameter of the Ink::GetBoundingBox method has a default value of -1, which means that all characteristics of a stroke are used to specify the bounding box.</param>
			<returns>This method returns the rectangle that defines the bounding box of an Ink object, a Stroke object, or a Strokes collection.</returns>
		</member>
		<member name="M:Microsoft.Ink.Ink.CreateStrokes">
			<summary>Specifies a new, empty collection of strokes to which an array of existing strokes is added.</summary>
			<param name="strokeIDs">[in, optional] Specifies an array of stroke IDs that exist in the Ink object. The strokes with these IDs are added to the newly created Strokes collection. The default value is Null (in Visual Basic 6, Nothing).</param>
			<returns>This method returns a new Strokes collection.</returns>
		</member>
		<member name="M:Microsoft.Ink.Ink.CreateStrokes(System.Int32[])">
			<summary>Specifies a new, empty collection of strokes to which an array of existing strokes is added.</summary>
			<param name="strokeIDs">[in, optional] Specifies an array of stroke IDs that exist in the Ink object. The strokes with these IDs are added to the newly created Strokes collection. The default value is Null (in Visual Basic 6, Nothing).</param>
			<returns>This method returns a new Strokes collection.</returns>
		</member>
		<member name="M:Microsoft.Ink.Ink.AddStrokesAtRectangle(Microsoft.Ink.Strokes,System.Drawing.Rectangle)">
			<summary>Specifies the given collection of strokes to insert into this Ink object at a specified rectangle.</summary>
			<param name="strokes">[in] Specifies the strokes to add to the ink. These source strokes are appended to this Ink object.</param>
			<param name="rectangle">[in] Specifies the System.Drawing.Rectangle in ink space coordinates where the strokes are added. A run-time error is thrown if the coordinates of the rectangle are {0,0,0,0}.

In Automation, the rectangle is an InkRectangle object.</param>
		</member>
		<member name="M:Microsoft.Ink.Ink.Load(System.Byte[])">
			<summary>Specifies the ink to load into a new Ink object from given binary data.</summary>
			<param name="inkdata">[in] Specifies the byte array that contains the ink.</param>
			<param name="Stream">[in] Automation only. Specifies the stream from which ink is loaded.</param>
		</member>
		<member name="M:Microsoft.Ink.Ink.Save(Microsoft.Ink.PersistenceFormat,Microsoft.Ink.CompressionMode)">
			<summary>Specifies the ink to save to binary data.</summary>
			<param name="persistenceFormat">[in] Specifies the format of the persisted ink, such as Ink Serialized Format (ISF), GIF, etc. The format is specified in the PersistenceFormat enumeration type.</param>
			<param name="compressionMode">[in] Specifies the compression mode of the persisted ink, such as maximum compression (minimizes storage space), no compression (reduces save-time but disregards storage space), etc. The compression mode is specified in the CompressionMode enumeration type.</param>
			<returns>This method returns the byte array that contains the persisted ink.</returns>
		</member>
		<member name="M:Microsoft.Ink.Ink.Save(Microsoft.Ink.PersistenceFormat)">
			<summary>Specifies the ink to save to binary data.</summary>
			<param name="persistenceFormat">[in] Specifies the format of the persisted ink, such as Ink Serialized Format (ISF), GIF, etc. The format is specified in the PersistenceFormat enumeration type.</param>
			<param name="compressionMode">[in] Specifies the compression mode of the persisted ink, such as maximum compression (minimizes storage space), no compression (reduces save-time but disregards storage space), etc. The compression mode is specified in the CompressionMode enumeration type.</param>
			<returns>This method returns the byte array that contains the persisted ink.</returns>
		</member>
		<member name="M:Microsoft.Ink.Ink.Save">
			<summary>Specifies the ink to save to binary data.</summary>
			<param name="persistenceFormat">[in] Specifies the format of the persisted ink, such as Ink Serialized Format (ISF), GIF, etc. The format is specified in the PersistenceFormat enumeration type.</param>
			<param name="compressionMode">[in] Specifies the compression mode of the persisted ink, such as maximum compression (minimizes storage space), no compression (reduces save-time but disregards storage space), etc. The compression mode is specified in the CompressionMode enumeration type.</param>
			<returns>This method returns the byte array that contains the persisted ink.</returns>
		</member>
		<member name="M:Microsoft.Ink.Ink.CreateStroke(System.Drawing.Point[])">
			<summary>Specifies the stroke to create from an array of Point input values.</summary>
			<param name="points">[in] Specifies the array of points that make up the stroke.</param>
			<param name="packetData">[in] Automation only. Specifies the array of packet data. The data is (X,Y), (X,Y), ... by default.</param>
			<param name="packetDescription">[in] Automation only. This is a reserved parameter that is currently not implemented.</param>
			<returns>This method returns the newly created stroke.</returns>
		</member>
		<member name="M:Microsoft.Ink.Ink.ClipboardCopy(Microsoft.Ink.InkClipboardFormats,Microsoft.Ink.InkClipboardModes)">
			<summary>Defines values that specify the copy options of the clipboard.</summary>
		</member>
		<member name="M:Microsoft.Ink.Ink.ClipboardCopy(Microsoft.Ink.Strokes,Microsoft.Ink.InkClipboardFormats,Microsoft.Ink.InkClipboardModes)">
			<summary>Defines values that specify the copy options of the clipboard.</summary>
		</member>
		<member name="M:Microsoft.Ink.Ink.ClipboardCopy(System.Drawing.Rectangle,Microsoft.Ink.InkClipboardFormats,Microsoft.Ink.InkClipboardModes)">
			<summary>Defines values that specify the copy options of the clipboard.</summary>
		</member>
		<member name="M:Microsoft.Ink.Ink.CanPaste">
			<summary>Specifies whether this Ink object supports the IDataObject on the clipboard.</summary>
			<param name="dataObject">[in, optional] Specifies the IDataObject to inspect. The default is to use the data object on the clipboard. Note that in Visual Basic 6 this parameter may not be left out if late binding is used; the default value of Nothing must be explicitly specified instead.</param>
			<returns>This method returns the Boolean value that specifies whether the InkSerializedFormat (ISF) is on the clipboard.</returns>
		</member>
		<member name="M:Microsoft.Ink.Ink.CanPaste(System.Object)">
			<summary>Specifies whether this Ink object supports the IDataObject on the clipboard.</summary>
			<param name="dataObject">[in, optional] Specifies the IDataObject to inspect. The default is to use the data object on the clipboard. Note that in Visual Basic 6 this parameter may not be left out if late binding is used; the default value of Nothing must be explicitly specified instead.</param>
			<returns>This method returns the Boolean value that specifies whether the InkSerializedFormat (ISF) is on the clipboard.</returns>
		</member>
		<member name="M:Microsoft.Ink.Ink.ClipboardPaste">
			<summary>Specifies the binary stroke data to copy from the clipboard to an arbitrary rectangle in ink space.</summary>
			<param name="pt, x, y">[in] Specifies the point to paste to in ink space. In Automation, this point is represented by the X and Y coordinates as separate parameters.</param>
			<param name="dataObject">[in] Specifies the IDataObject to be used. Set to Null (in Visual Basic 6, set to Nothing) to paste from the Clipboard.</param>
			<returns>This method returns the binary stroke data to copy from the clipboard.</returns>
		</member>
		<member name="M:Microsoft.Ink.Ink.ClipboardPaste(System.Drawing.Point)">
			<summary>Specifies the binary stroke data to copy from the clipboard to an arbitrary rectangle in ink space.</summary>
			<param name="pt, x, y">[in] Specifies the point to paste to in ink space. In Automation, this point is represented by the X and Y coordinates as separate parameters.</param>
			<param name="dataObject">[in] Specifies the IDataObject to be used. Set to Null (in Visual Basic 6, set to Nothing) to paste from the Clipboard.</param>
			<returns>This method returns the binary stroke data to copy from the clipboard.</returns>
		</member>
		<member name="M:Microsoft.Ink.Ink.ClipboardPaste(System.Drawing.Point,System.Object)">
			<summary>Specifies the binary stroke data to copy from the clipboard to an arbitrary rectangle in ink space.</summary>
			<param name="pt, x, y">[in] Specifies the point to paste to in ink space. In Automation, this point is represented by the X and Y coordinates as separate parameters.</param>
			<param name="dataObject">[in] Specifies the IDataObject to be used. Set to Null (in Visual Basic 6, set to Nothing) to paste from the Clipboard.</param>
			<returns>This method returns the binary stroke data to copy from the clipboard.</returns>
		</member>
		<member name="T:Microsoft.Ink.PacketProperty">
			<summary>The Tablet PC API uses globally unique identifiers (GUIDs) to identify packet properties, recognition properties, drawing attributes, and general ink properties.</summary>
		</member>
		<member name="T:Microsoft.Ink.Renderer">
			<summary>Specifies the creation of a new Renderer object.</summary>
			<returns>This method constructs a new Renderer object.</returns>
		</member>
		<member name="M:Microsoft.Ink.Renderer.#ctor(Microsoft.Ink._Internal.IInkRenderer)">
			<summary>Specifies the creation of a new Renderer object.</summary>
			<returns>This method constructs a new Renderer object.</returns>
		</member>
		<member name="M:Microsoft.Ink.Renderer.#ctor">
			<summary>Specifies the creation of a new Renderer object.</summary>
			<returns>This method constructs a new Renderer object.</returns>
		</member>
		<member name="M:Microsoft.Ink.Renderer.SetViewTransform(System.Drawing.Drawing2D.Matrix)">
			<summary>Sets the System.Drawing.Drawing2d.Matrix object (in Automation, the InkTransform object) representing the view transform used for rendering ink.</summary>
			<param name="viewTransform">[in] Specifies the System.Drawing.Drawing2d.Matrix object (in Automation, the InkTransform object) representing the geometric transformation-rotation, scaling, shear, and reflection-values to use to transform the stroke from ink space coordinates to logical device context coordinates. The transformation applies to both the points and pen width. View transformation occurs after object transformation.

In Automation, SetViewTransform returns S_OK if viewTransform is Null; a Null value for viewTransform correlates to a unit transform.</param>
		</member>
		<member name="M:Microsoft.Ink.Renderer.SetObjectTransform(System.Drawing.Drawing2D.Matrix)">
			<summary>Sets the System.Drawing.Drawing2d.Matrix object (in Automation, the InkTransform object) representing the object transform used for rendering ink.</summary>
			<param name="objectTransform">[in] Specifies the System.Drawing.Drawing2d.Matrix object (in Automation, the InkTransform object) representing the geometric transformation-rotation, scaling, shear, and reflection-values to use to transform the stroke coordinates within the ink space. The transformation applies to the points, not the pen width. Object transformation occurs before view transformation. 

In Automation, SetObjectTransform returns S_OK if ObjectTransform is Null; a Null value for ObjectTransform correlates to a unit transform.</param>
		</member>
		<member name="M:Microsoft.Ink.Renderer.GetViewTransform(System.Drawing.Drawing2D.Matrix@)">
			<summary>Gets the System.Drawing.Drawing2d.Matrix object (in Automation, the InkTransform object) representing the view transform used for rendering ink.</summary>
			<param name="viewTransform">[in] Gets the System.Drawing.Drawing2d.Matrix object (in Automation, the InkTransform object) representing the geometric transformation-rotation, scaling, shear, and reflection-values to use to transform the stroke from ink space coordinates to logical device context coordinates. The transformation applies to both the points and pen width. View transformation occurs after object transformation.</param>
		</member>
		<member name="M:Microsoft.Ink.Renderer.GetObjectTransform(System.Drawing.Drawing2D.Matrix@)">
			<summary>Gets the System.Drawing.Drawing2d.Matrix object (in Automation, the InkTransform object) representing the object transform used for rendering ink.</summary>
			<param name="objectTransform">[out] Specifies the System.Drawing.Drawing2d.Matrix object (in Automation, the InkTransform object) representing the geometric transformation-rotation, scaling, shear, and reflection-values to use to transform the stroke coordinates within the ink space. The transformation applies to the points, not the pen width. Object transformation occurs before view transformation.</param>
		</member>
		<member name="M:Microsoft.Ink.Renderer.PixelToInkSpace(System.Drawing.Graphics,System.Drawing.Point@)">
			<summary>Specifies a location in ink space coordinates given a location in pixel coordinates.</summary>
			<param name="g">[in] Specifies the Graphics object to use.</param>
			<param name="hdcDisplay">[in] This specifies the Handle of the containing control or form. In Automation, this specifies the handle of the device context.</param>
			<param name="point">[in, out] Specifies the point to convert into an ink location.</param>
			<param name="points">[in, out] Specifies the array of points to convert into ink locations.</param>
			<param name="X, Y">[in, out] Specifies the X and Y coordinates of the point to convert into an ink location.</param>
		</member>
		<member name="M:Microsoft.Ink.Renderer.PixelToInkSpace(System.IntPtr,System.Drawing.Point@)">
			<summary>Specifies a location in ink space coordinates given a location in pixel coordinates.</summary>
			<param name="g">[in] Specifies the Graphics object to use.</param>
			<param name="hdcDisplay">[in] This specifies the Handle of the containing control or form. In Automation, this specifies the handle of the device context.</param>
			<param name="point">[in, out] Specifies the point to convert into an ink location.</param>
			<param name="points">[in, out] Specifies the array of points to convert into ink locations.</param>
			<param name="X, Y">[in, out] Specifies the X and Y coordinates of the point to convert into an ink location.</param>
		</member>
		<member name="M:Microsoft.Ink.Renderer.InkSpaceToPixel(System.Drawing.Graphics,System.Drawing.Point@)">
			<summary>Specifies a location in pixel coordinates given a location in ink space coordinates.</summary>
			<param name="g">[in] Specifies the Graphics object to use.</param>
			<param name="hdcDisplay">[in] This specifies the Handle of the containing control or form. In Automation, this specifies the handle of the device context.</param>
			<param name="point">[in, out] Specifies the point to convert into a pixel location.</param>
			<param name="points">[in, out] Specifies the array of points to convert into pixel locations.</param>
			<param name="X, Y">[in, out] Specifies the X and Y coordinates of the point to convert into a pixel location.</param>
		</member>
		<member name="M:Microsoft.Ink.Renderer.InkSpaceToPixel(System.IntPtr,System.Drawing.Point@)">
			<summary>Specifies a location in pixel coordinates given a location in ink space coordinates.</summary>
			<param name="g">[in] Specifies the Graphics object to use.</param>
			<param name="hdcDisplay">[in] This specifies the Handle of the containing control or form. In Automation, this specifies the handle of the device context.</param>
			<param name="point">[in, out] Specifies the point to convert into a pixel location.</param>
			<param name="points">[in, out] Specifies the array of points to convert into pixel locations.</param>
			<param name="X, Y">[in, out] Specifies the X and Y coordinates of the point to convert into a pixel location.</param>
		</member>
		<member name="M:Microsoft.Ink.Renderer.PixelToInkSpace(System.Drawing.Graphics,System.Drawing.Point[]@)">
			<summary>Specifies a location in ink space coordinates given a location in pixel coordinates.</summary>
			<param name="g">[in] Specifies the Graphics object to use.</param>
			<param name="hdcDisplay">[in] This specifies the Handle of the containing control or form. In Automation, this specifies the handle of the device context.</param>
			<param name="point">[in, out] Specifies the point to convert into an ink location.</param>
			<param name="points">[in, out] Specifies the array of points to convert into ink locations.</param>
			<param name="X, Y">[in, out] Specifies the X and Y coordinates of the point to convert into an ink location.</param>
		</member>
		<member name="M:Microsoft.Ink.Renderer.PixelToInkSpace(System.IntPtr,System.Drawing.Point[]@)">
			<summary>Specifies a location in ink space coordinates given a location in pixel coordinates.</summary>
			<param name="g">[in] Specifies the Graphics object to use.</param>
			<param name="hdcDisplay">[in] This specifies the Handle of the containing control or form. In Automation, this specifies the handle of the device context.</param>
			<param name="point">[in, out] Specifies the point to convert into an ink location.</param>
			<param name="points">[in, out] Specifies the array of points to convert into ink locations.</param>
			<param name="X, Y">[in, out] Specifies the X and Y coordinates of the point to convert into an ink location.</param>
		</member>
		<member name="M:Microsoft.Ink.Renderer.InkSpaceToPixel(System.Drawing.Graphics,System.Drawing.Point[]@)">
			<summary>Specifies a location in pixel coordinates given a location in ink space coordinates.</summary>
			<param name="g">[in] Specifies the Graphics object to use.</param>
			<param name="hdcDisplay">[in] This specifies the Handle of the containing control or form. In Automation, this specifies the handle of the device context.</param>
			<param name="point">[in, out] Specifies the point to convert into a pixel location.</param>
			<param name="points">[in, out] Specifies the array of points to convert into pixel locations.</param>
			<param name="X, Y">[in, out] Specifies the X and Y coordinates of the point to convert into a pixel location.</param>
		</member>
		<member name="M:Microsoft.Ink.Renderer.InkSpaceToPixel(System.IntPtr,System.Drawing.Point[]@)">
			<summary>Specifies a location in pixel coordinates given a location in ink space coordinates.</summary>
			<param name="g">[in] Specifies the Graphics object to use.</param>
			<param name="hdcDisplay">[in] This specifies the Handle of the containing control or form. In Automation, this specifies the handle of the device context.</param>
			<param name="point">[in, out] Specifies the point to convert into a pixel location.</param>
			<param name="points">[in, out] Specifies the array of points to convert into pixel locations.</param>
			<param name="X, Y">[in, out] Specifies the X and Y coordinates of the point to convert into a pixel location.</param>
		</member>
		<member name="M:Microsoft.Ink.Renderer.Draw(System.Drawing.Graphics,Microsoft.Ink.Strokes)">
			<summary>Specifies the strokes to draw using the given Graphics object or device context.</summary>
			<param name="g">[in] Specifies the Graphics object to draw with.</param>
			<param name="hdc">[in] This specifies the Handle of the containing control or form to draw on. In Automation, this specifies the handle of the device context to draw on.</param>
			<param name="strokes">[in] Specifies the strokes to draw.</param>
		</member>
		<member name="M:Microsoft.Ink.Renderer.Draw(System.IntPtr,Microsoft.Ink.Strokes)">
			<summary>Specifies the strokes to draw using the given Graphics object or device context.</summary>
			<param name="g">[in] Specifies the Graphics object to draw with.</param>
			<param name="hdc">[in] This specifies the Handle of the containing control or form to draw on. In Automation, this specifies the handle of the device context to draw on.</param>
			<param name="strokes">[in] Specifies the strokes to draw.</param>
		</member>
		<member name="M:Microsoft.Ink.Renderer.Draw(System.Drawing.Graphics,Microsoft.Ink.Stroke)">
			<summary>Specifies the strokes to draw using the given Graphics object or device context.</summary>
			<param name="g">[in] Specifies the Graphics object to draw with.</param>
			<param name="hdc">[in] This specifies the Handle of the containing control or form to draw on. In Automation, this specifies the handle of the device context to draw on.</param>
			<param name="strokes">[in] Specifies the strokes to draw.</param>
		</member>
		<member name="M:Microsoft.Ink.Renderer.Draw(System.Drawing.Graphics,Microsoft.Ink.Stroke,Microsoft.Ink.DrawingAttributes)">
			<summary>Specifies the strokes to draw using the given Graphics object or device context.</summary>
			<param name="g">[in] Specifies the Graphics object to draw with.</param>
			<param name="hdc">[in] This specifies the Handle of the containing control or form to draw on. In Automation, this specifies the handle of the device context to draw on.</param>
			<param name="strokes">[in] Specifies the strokes to draw.</param>
		</member>
		<member name="M:Microsoft.Ink.Renderer.Draw(System.IntPtr,Microsoft.Ink.Stroke)">
			<summary>Specifies the strokes to draw using the given Graphics object or device context.</summary>
			<param name="g">[in] Specifies the Graphics object to draw with.</param>
			<param name="hdc">[in] This specifies the Handle of the containing control or form to draw on. In Automation, this specifies the handle of the device context to draw on.</param>
			<param name="strokes">[in] Specifies the strokes to draw.</param>
		</member>
		<member name="M:Microsoft.Ink.Renderer.Draw(System.IntPtr,Microsoft.Ink.Stroke,Microsoft.Ink.DrawingAttributes)">
			<summary>Specifies the strokes to draw using the given Graphics object or device context.</summary>
			<param name="g">[in] Specifies the Graphics object to draw with.</param>
			<param name="hdc">[in] This specifies the Handle of the containing control or form to draw on. In Automation, this specifies the handle of the device context to draw on.</param>
			<param name="strokes">[in] Specifies the strokes to draw.</param>
		</member>
		<member name="M:Microsoft.Ink.Renderer.Measure(Microsoft.Ink.Strokes)">
			<summary>Specifies the rectangle on the device context that would contain the stroke if the stroke were drawn with the Draw method of the Renderer object.</summary>
			<param name="stroke">[in] Specifies the stroke to measure.</param>
			<param name="strokes">[in] Specifies the collection of strokes to measure.</param>
			<returns>This method returns the rectangle on the device context that would contain the stroke if the stroke were drawn with the Draw method of the Renderer object.</returns>
		</member>
		<member name="M:Microsoft.Ink.Renderer.Measure(Microsoft.Ink.Stroke)">
			<summary>Specifies the rectangle on the device context that would contain the stroke if the stroke were drawn with the Draw method of the Renderer object.</summary>
			<param name="stroke">[in] Specifies the stroke to measure.</param>
			<param name="strokes">[in] Specifies the collection of strokes to measure.</param>
			<returns>This method returns the rectangle on the device context that would contain the stroke if the stroke were drawn with the Draw method of the Renderer object.</returns>
		</member>
		<member name="M:Microsoft.Ink.Renderer.Measure(Microsoft.Ink.Stroke,Microsoft.Ink.DrawingAttributes)">
			<summary>Specifies the rectangle on the device context that would contain the stroke if the stroke were drawn with the Draw method of the Renderer object.</summary>
			<param name="stroke">[in] Specifies the stroke to measure.</param>
			<param name="strokes">[in] Specifies the collection of strokes to measure.</param>
			<returns>This method returns the rectangle on the device context that would contain the stroke if the stroke were drawn with the Draw method of the Renderer object.</returns>
		</member>
		<member name="M:Microsoft.Ink.Renderer.Move(System.Single,System.Single)">
			<summary>Specifies a translation to apply to the view transform.</summary>
			<param name="OffsetX, HorizontalComponent">[in] Specifies the amount to translate the view transform in the X dimension.</param>
			<param name="OffsetY, VerticalComponent">[in] Specifies the amount to translate the view transform in the Y dimension.</param>
		</member>
		<member name="M:Microsoft.Ink.Renderer.Rotate(System.Single,System.Drawing.Point)">
			<summary>Specifies the amount to rotate the ink when rendered, measured in degrees, and optionally specifies the center point of the rotation.</summary>
			<param name="degrees">[in] Specifies the degrees to rotate by.</param>
			<param name="point">[in, optional] Specifies the point to rotate around. Default is the origin.</param>
			<param name="X, Y">[in, optional] Specifies the point to rotate around. Default is the origin.</param>
		</member>
		<member name="M:Microsoft.Ink.Renderer.Rotate(System.Single)">
			<summary>Specifies the amount to rotate the ink when rendered, measured in degrees, and optionally specifies the center point of the rotation.</summary>
			<param name="degrees">[in] Specifies the degrees to rotate by.</param>
			<param name="point">[in, optional] Specifies the point to rotate around. Default is the origin.</param>
			<param name="X, Y">[in, optional] Specifies the point to rotate around. Default is the origin.</param>
		</member>
		<member name="M:Microsoft.Ink.Renderer.Scale(System.Single,System.Single,System.Boolean)">
			<summary>Specifies the X and Y factors to scale the view transform.</summary>
			<param name="scaleX, HorizontalMultiplier">[in] Specifies the factor to scale the X dimension in the view transform.</param>
			<param name="scaleY, VerticalMultiplier">[in] Specifies the factor to scale the Y dimension in the view transform.</param>
			<param name="applyOnPenWidth">[in, optional] Specifies whether to also apply the scale factors to the pen width. Default is True.</param>
		</member>
		<member name="M:Microsoft.Ink.Renderer.Scale(System.Single,System.Single)">
			<summary>Specifies the X and Y factors to scale the view transform.</summary>
			<param name="scaleX, HorizontalMultiplier">[in] Specifies the factor to scale the X dimension in the view transform.</param>
			<param name="scaleY, VerticalMultiplier">[in] Specifies the factor to scale the Y dimension in the view transform.</param>
			<param name="applyOnPenWidth">[in, optional] Specifies whether to also apply the scale factors to the pen width. Default is True.</param>
		</member>
		<member name="T:Microsoft.Ink.Stroke">
			<summary>Occurs when the user draws a new stroke on any tablet.</summary>
			<param name="sender">[in] Specifies the source InkCollector of this event.</param>
			<param name="e">[in] Specifies the InkCollectorStrokeEventArgs object that contains the event data.</param>
			<param name="Cursor">[in] Automation only. Specifies the IInkCursor object.</param>
			<param name="Stroke">[in] Automation only. Specifies the collected IInkStrokeDisp object.</param>
			<param name="Cancel">[in, out] Automation only. Specifies whether the event should be canceled. If True, the collection of the stroke is canceled.</param>
		</member>
		<member name="P:Microsoft.Ink.Stroke.Id">
			<summary>Returns the identifier of an object.</summary><returns>This property returns a signed 32-bit number that identifies the object.</returns><returns>Managed library only (Gesture.ID).</returns><returns>Automation only (InkCursorButton::ID).</returns></member>
		<member name="P:Microsoft.Ink.Stroke.Deleted">
			<summary>Returns the value that specifies whether a given stroke is deleted from the ink.</summary>
			<returns>This property returns the Boolean value that indicates whether the stroke is deleted.</returns>
		</member>
		<member name="P:Microsoft.Ink.Stroke.PolylineCusps">
			<summary>Returns an array containg the indices of the GetPoints() array that specify the cusps of the stroke.</summary>
			<returns>This property returns an integer array that indicates the indexes of the points that make up the cusps of the Stroke object.</returns>
		</member>
		<member name="P:Microsoft.Ink.Stroke.BezierCusps">
			<summary>Returns an array of integers that represent the cusps of the Bezier approximation of the stroke.</summary>
			<returns>This property returns an array of integers that indicates the points that are the cusps of the Bezier of the stroke.</returns>
		</member>
		<member name="P:Microsoft.Ink.Stroke.BezierPoints">
			<summary>Returns the array of control points that represent the Bezier approximation of the stroke.</summary>
			<returns>This property returns a control point array that indicates the Bezier approximation of the stroke.</returns>
		</member>
		<member name="P:Microsoft.Ink.Stroke.SelfIntersections">
			<summary>Returns the self intersections, or the points of a stroke where the stroke crosses over itself, of the stroke.</summary>
			<returns>This returns a float array that indicates the self intersections of a Stroke object.</returns>
		</member>
		<member name="P:Microsoft.Ink.Stroke.PacketCount">
			<summary>Returns the count of points in the stroke.</summary>
			<returns>This property returns a signed 32-bit number that indicates the count of points in the Stroke object.</returns>
		</member>
		<member name="P:Microsoft.Ink.Stroke.PacketSize">
			<summary>Returns the size, in bytes, of a packet.</summary>
			<returns>This property returns a signed 32-bit number that indicates the size of a packet.</returns>
		</member>
		<member name="P:Microsoft.Ink.Stroke.PacketDescription">
			<summary>Returns the array of globally unique identifiers (GUIDs) that describes the types of packet data that are stored in the stroke.</summary>
			<returns>This property returns a GUID array that indicates the types of data contained in each packet within the stroke.</returns>
		</member>
		<member name="P:Microsoft.Ink.Stroke.DrawingAttributes">
			<summary>Returns or sets the drawing attributes to apply to ink as it is drawn.</summary><returns>This property returns the DrawingAttributes object that determines the attributes to apply to ink as it is drawn.</returns></member>
		<member name="P:Microsoft.Ink.Stroke.ExtendedProperties">
			<summary>Returns the collection of application-defined data stored in an object.</summary><returns>This property returns the ExtendedProperties collection that allows an application to store custom data in an object.</returns></member>
		<member name="M:Microsoft.Ink.Stroke.GetBoundingBox(Microsoft.Ink.BoundingBoxMode)">
			<summary>Specifies the rectangle, in ink space coordinates, that corresponds to the bounding box of all of the strokes in an Ink object, the bounding box of a Stroke object, or the portion of the display to invalidate or redraw when displaying a Strokes collection.</summary><param name="boundingBoxMode">[in, optional] Specifies the stroke characteristics to use in order to calculate the bounding box. For example, you can calculate the bounding box using only the points, you can include the drawing attributes of the stroke, or you can apply Bezier curve fitting to all strokes. For more details, see the BoundingBoxMode enumeration type.

In Automation, the BoundingBoxMode parameter of the Ink::GetBoundingBox method has a default value of -1, which means that all characteristics of a stroke are used to specify the bounding box.</param><returns>This method returns the rectangle that defines the bounding box of an Ink object, a Stroke object, or a Strokes collection.</returns></member>
		<member name="M:Microsoft.Ink.Stroke.GetBoundingBox">
			<summary>Specifies the rectangle, in ink space coordinates, that corresponds to the bounding box of all of the strokes in an Ink object, the bounding box of a Stroke object, or the portion of the display to invalidate or redraw when displaying a Strokes collection.</summary><param name="boundingBoxMode">[in, optional] Specifies the stroke characteristics to use in order to calculate the bounding box. For example, you can calculate the bounding box using only the points, you can include the drawing attributes of the stroke, or you can apply Bezier curve fitting to all strokes. For more details, see the BoundingBoxMode enumeration type.

In Automation, the BoundingBoxMode parameter of the Ink::GetBoundingBox method has a default value of -1, which means that all characteristics of a stroke are used to specify the bounding box.</param><returns>This method returns the rectangle that defines the bounding box of an Ink object, a Stroke object, or a Strokes collection.</returns></member>
		<member name="M:Microsoft.Ink.Stroke.GetFlattenedBezierPoints(System.Int32)">
			<summary>Specifies the array of actual points that are used to approximate the Bezier representation of a stroke.</summary>
			<param name="fittingError">[in, optional] Specifies the maximum distance (accuracy), using ink units, between the Bezier control points and the points of the stroke. This is also known as the curve fitting error level. You should ideally set fittingError between 0 and 500. If the value is greater than 500, a stroke may appear distorted and/or coarse when drawn. Strokes will appear smoothest when the fitting error level is set to 0, however, the drawing performance will be slowest at this level. The default value is 0.</param>
			<returns>This method returns a point array that indicates the points used to draw the Bezier curve representation of the Stroke object.</returns>
		</member>
		<member name="M:Microsoft.Ink.Stroke.GetFlattenedBezierPoints">
			<summary>Specifies the array of actual points that are used to approximate the Bezier representation of a stroke.</summary>
			<param name="fittingError">[in, optional] Specifies the maximum distance (accuracy), using ink units, between the Bezier control points and the points of the stroke. This is also known as the curve fitting error level. You should ideally set fittingError between 0 and 500. If the value is greater than 500, a stroke may appear distorted and/or coarse when drawn. Strokes will appear smoothest when the fitting error level is set to 0, however, the drawing performance will be slowest at this level. The default value is 0.</param>
			<returns>This method returns a point array that indicates the points used to draw the Bezier curve representation of the Stroke object.</returns>
		</member>
		<member name="M:Microsoft.Ink.Stroke.GetPoints(System.Int32,System.Int32)">
			<summary>Specifies (gets) the points that make up the Stroke object.</summary>
			<param name="startingIndex">[in, optional] Specifies the starting index within the array of points that make up the stroke. In Managed code the default value is 0, which specifies the first packet.

In Automation, the default value ISC_FirstElement, defined in the ItemSelectionConstants enumeration type, specifies the first packet.</param>
			<param name="pointCount">[in, optional] Specifies the count of points that make up the stroke data. In Managed code the default value is -1, which specifies all of the points that make up the stroke data.

In Automation, the default value ISC_AllElements, defined in the ItemSelectionConstants enumeration type, specifies all of the points that make up the stroke data.</param>
			<returns>This method returns an array of points that make up a stroke.</returns>
		</member>
		<member name="M:Microsoft.Ink.Stroke.GetPoint(System.Int32)">
			<summary>Gets the point at the specified index into a stroke.</summary>
			<param name="index">[in] Specifies the index of the Point to return.</param>
			<returns>This method returns the Point at the given index in the Stroke.</returns>
		</member>
		<member name="M:Microsoft.Ink.Stroke.GetPoints">
			<summary>Specifies (gets) the points that make up the Stroke object.</summary>
			<param name="startingIndex">[in, optional] Specifies the starting index within the array of points that make up the stroke. In Managed code the default value is 0, which specifies the first packet.

In Automation, the default value ISC_FirstElement, defined in the ItemSelectionConstants enumeration type, specifies the first packet.</param>
			<param name="pointCount">[in, optional] Specifies the count of points that make up the stroke data. In Managed code the default value is -1, which specifies all of the points that make up the stroke data.

In Automation, the default value ISC_AllElements, defined in the ItemSelectionConstants enumeration type, specifies all of the points that make up the stroke data.</param>
			<returns>This method returns an array of points that make up a stroke.</returns>
		</member>
		<member name="M:Microsoft.Ink.Stroke.GetPacketDescriptionPropertyMetrics(System.Guid)">
			<summary>Specifies the metrics of a given packet description type.</summary>
			<param name="id, propertyName">[in] Specifies a System.Guid from the PacketProperty object that identifies the property to obtain metrics for.</param>
			<param name="min">[out] Specifies the minimum value, in logical units, that the tablet reports for this property. For example, a tablet reporting x-values from 0 to 9000 would have a logical minimum of 0.</param>
			<param name="max">[out] Specifies the maximum value, in logical units, that the tablet reports for this property. For example, a tablet reporting x-values from 0 to 9000 would have a logical maximum of 9000.</param>
			<param name="units">[out] Specifies the physical units of the property, such as inches or degrees. For a list of property units, see the TabletPropertyMetricUnit enumeration type.</param>
			<param name="resolution">[out] Specifies the resolution or increment value for the units member. For example, a tablet that reports 400 dpi (dots per inch) would have a resolution value of 400.</param>
			<returns>This structure contains the min, max, units, and resolution information for the specified PacketProperty.</returns>
			<returns>HRESULT valueDescription
S_OKSuccess.
E_POINTERInvalid parameter.
E_OUTOFMEMORYUnable to allocate memory necessary to complete this request.
CO_E_CLASSSTRINGInvalid GUID format.
E_INVALIDARGThe property does not exist in the collection.
E_INK_EXCEPTIONAn exception occurred while processing.</returns>
		</member>
		<member name="M:Microsoft.Ink.Stroke.SetPoints(System.Int32,System.Drawing.Point[])">
			<summary>Specifies (sets) the points of the stroke using an array of X,Y values.</summary>
			<param name="index">[in, optional] Specifies the zero-based index of the first point in the stroke to be modified. In Managed code the default value is 0, which specifies that the first point in the stroke be modified.

In Automation, the default value ISC_FirstElement, defined in the ItemSelectionConstants enumeration type, that the first point in the stroke be modified.</param>
			<param name="count">[in, optional] Specifies the count of points in the stroke to be modified. In Managed code the default value is -1, which specifies that all points in the stroke be modified.

In Automation, the default value ISC_AllElements, defined in the ItemSelectionConstants enumeration type, specifies that all points in the stroke be modified.</param>
			<param name="points">[in] Specifies the array of new Point values to replace the points in the stroke beginning at index.</param>
			<returns>Returns the actual number of points set.</returns>
		</member>
		<member name="M:Microsoft.Ink.Stroke.SetPoint(System.Int32,System.Drawing.Point)">
			<summary>Sets the point at the specified index into the stroke.</summary>
			<param name="index">Specifies the index of the point in the stroke to be modified.</param>
			<param name="point">Specifies the new Point value for the point in the stroke at index.</param>
			<returns>This method returns point at the specified index into the stroke.</returns>
		</member>
		<member name="M:Microsoft.Ink.Stroke.SetPoints(System.Drawing.Point[])">
			<summary>Specifies (sets) the points of the stroke using an array of X,Y values.</summary>
			<param name="index">[in, optional] Specifies the zero-based index of the first point in the stroke to be modified. In Managed code the default value is 0, which specifies that the first point in the stroke be modified.

In Automation, the default value ISC_FirstElement, defined in the ItemSelectionConstants enumeration type, that the first point in the stroke be modified.</param>
			<param name="count">[in, optional] Specifies the count of points in the stroke to be modified. In Managed code the default value is -1, which specifies that all points in the stroke be modified.

In Automation, the default value ISC_AllElements, defined in the ItemSelectionConstants enumeration type, specifies that all points in the stroke be modified.</param>
			<param name="points">[in] Specifies the array of new Point values to replace the points in the stroke beginning at index.</param>
			<returns>Returns the actual number of points set.</returns>
		</member>
		<member name="M:Microsoft.Ink.Stroke.GetPacketData(System.Int32,System.Int32)">
			<summary>Specifies the packet data associated with a point in the stroke.</summary>
			<param name="startingIndex">[in, optional] Specifies the starting point of the zero-based index to a packet within the stroke. In Managed code the default value is 0, which specifies the first packet.

In Automation, the default value ISC_FirstElement, defined in the ItemSelectionConstants enumeration type, specifies the first packet.</param>
			<param name="pointCount">[in, optional] Specifies the number of point packet data sets that should be returned, starting with the packet specified in the startingIndex parameter. 
In Managed code the default value is -1, which specifies all of the points that make up the stroke data.
In Automation, the default value ISC_AllElements, defined in the ItemSelectionConstants enumeration type, specifies all of the points that make up the stroke data.</param>
			<returns>This method returns a signed 32-bit number array that indicates the packet data associated with a stroke.</returns>
		</member>
		<member name="M:Microsoft.Ink.Stroke.GetPacketData(System.Int32)">
			<summary>Specifies the packet data associated with a point in the stroke.</summary>
			<param name="startingIndex">[in, optional] Specifies the starting point of the zero-based index to a packet within the stroke. In Managed code the default value is 0, which specifies the first packet.

In Automation, the default value ISC_FirstElement, defined in the ItemSelectionConstants enumeration type, specifies the first packet.</param>
			<param name="pointCount">[in, optional] Specifies the number of point packet data sets that should be returned, starting with the packet specified in the startingIndex parameter. 
In Managed code the default value is -1, which specifies all of the points that make up the stroke data.
In Automation, the default value ISC_AllElements, defined in the ItemSelectionConstants enumeration type, specifies all of the points that make up the stroke data.</param>
			<returns>This method returns a signed 32-bit number array that indicates the packet data associated with a stroke.</returns>
		</member>
		<member name="M:Microsoft.Ink.Stroke.GetPacketData">
			<summary>Specifies the packet data associated with a point in the stroke.</summary>
			<param name="startingIndex">[in, optional] Specifies the starting point of the zero-based index to a packet within the stroke. In Managed code the default value is 0, which specifies the first packet.

In Automation, the default value ISC_FirstElement, defined in the ItemSelectionConstants enumeration type, specifies the first packet.</param>
			<param name="pointCount">[in, optional] Specifies the number of point packet data sets that should be returned, starting with the packet specified in the startingIndex parameter. 
In Managed code the default value is -1, which specifies all of the points that make up the stroke data.
In Automation, the default value ISC_AllElements, defined in the ItemSelectionConstants enumeration type, specifies all of the points that make up the stroke data.</param>
			<returns>This method returns a signed 32-bit number array that indicates the packet data associated with a stroke.</returns>
		</member>
		<member name="M:Microsoft.Ink.Stroke.GetPacketValuesByProperty(System.Guid,System.Int32,System.Int32)">
			<summary>Specifies the data for a given packet property from one or more packets in the stroke.</summary>
			<param name="propertyName">[in] Specifies the System.Guid identifier from the PacketProperty object used to select which packet data is retrieved.</param>
			<param name="startingIndex">[in, optional] Specifies the starting point of the zero-based index to a packet within the stroke. In Managed code the default value is 0, which specifies the first packet.

In Automation, the default value ISC_FirstElement, defined in the ItemSelectionConstants enumeration type, specifies the first packet.</param>
			<param name="pointCount">[in, optional] Specifies the count of points that make up the stroke data. In Managed code the default value is -1, which specifies all of the points that make up the stroke data.

In Automation, the default value ISC_AllElements, defined in the ItemSelectionConstants enumeration type, specifies all of the points that make up the stroke data.</param>
			<returns>This method returns an array of signed 32-bit numbers that specifies the value of the requested PacketProperty for each point requested from the stroke.</returns>
		</member>
		<member name="M:Microsoft.Ink.Stroke.GetPacketValuesByProperty(System.Guid,System.Int32)">
			<summary>Specifies the data for a given packet property from one or more packets in the stroke.</summary>
			<param name="propertyName">[in] Specifies the System.Guid identifier from the PacketProperty object used to select which packet data is retrieved.</param>
			<param name="startingIndex">[in, optional] Specifies the starting point of the zero-based index to a packet within the stroke. In Managed code the default value is 0, which specifies the first packet.

In Automation, the default value ISC_FirstElement, defined in the ItemSelectionConstants enumeration type, specifies the first packet.</param>
			<param name="pointCount">[in, optional] Specifies the count of points that make up the stroke data. In Managed code the default value is -1, which specifies all of the points that make up the stroke data.

In Automation, the default value ISC_AllElements, defined in the ItemSelectionConstants enumeration type, specifies all of the points that make up the stroke data.</param>
			<returns>This method returns an array of signed 32-bit numbers that specifies the value of the requested PacketProperty for each point requested from the stroke.</returns>
		</member>
		<member name="M:Microsoft.Ink.Stroke.GetPacketValuesByProperty(System.Guid)">
			<summary>Specifies the data for a given packet property from one or more packets in the stroke.</summary>
			<param name="propertyName">[in] Specifies the System.Guid identifier from the PacketProperty object used to select which packet data is retrieved.</param>
			<param name="startingIndex">[in, optional] Specifies the starting point of the zero-based index to a packet within the stroke. In Managed code the default value is 0, which specifies the first packet.

In Automation, the default value ISC_FirstElement, defined in the ItemSelectionConstants enumeration type, specifies the first packet.</param>
			<param name="pointCount">[in, optional] Specifies the count of points that make up the stroke data. In Managed code the default value is -1, which specifies all of the points that make up the stroke data.

In Automation, the default value ISC_AllElements, defined in the ItemSelectionConstants enumeration type, specifies all of the points that make up the stroke data.</param>
			<returns>This method returns an array of signed 32-bit numbers that specifies the value of the requested PacketProperty for each point requested from the stroke.</returns>
		</member>
		<member name="M:Microsoft.Ink.Stroke.SetPacketValuesByProperty(System.Guid,System.Int32,System.Int32,System.Int32[])">
			<summary>Specifies the packet values for a particular property.</summary>
			<param name="id, bstrPropertyName">[in] Specifies the System.Guid identifier from the PacketProperty object used to select which packet data is set. Use PacketDescription to determine the properties defined for this stroke.</param>
			<param name="packetValues">[in] Specifies the array of packet data values. The method fails if any of the values in the array exceed the minimum or maximum value of the property. To determine the range of values in the property call the PacketDescriptionPropertyMetrics method.</param>
			<param name="index">[in, optional] Specifies the starting index of the packet to be modified. In Managed code the default value is 0, which specifies the first packet.

In Automation, the default value ISC_FirstElement, defined in the ItemSelectionConstants enumeration type, specifies the first packet.</param>
			<param name="count">[in, optional] Specifies the number of packets in the stroke to modify and the number of values in packetValues. In Managed code the default value is -1, which specifies that all packets be modified.

In Automation, the default value ISC_AllElements, defined in the ItemSelectionConstants enumeration type, specifies that all packets be modified.</param>
			<returns>Returns the actual number of packets set.</returns>
		</member>
		<member name="M:Microsoft.Ink.Stroke.SetPacketValuesByProperty(System.Guid,System.Int32,System.Int32[])">
			<summary>Specifies the packet values for a particular property.</summary>
			<param name="id, bstrPropertyName">[in] Specifies the System.Guid identifier from the PacketProperty object used to select which packet data is set. Use PacketDescription to determine the properties defined for this stroke.</param>
			<param name="packetValues">[in] Specifies the array of packet data values. The method fails if any of the values in the array exceed the minimum or maximum value of the property. To determine the range of values in the property call the PacketDescriptionPropertyMetrics method.</param>
			<param name="index">[in, optional] Specifies the starting index of the packet to be modified. In Managed code the default value is 0, which specifies the first packet.

In Automation, the default value ISC_FirstElement, defined in the ItemSelectionConstants enumeration type, specifies the first packet.</param>
			<param name="count">[in, optional] Specifies the number of packets in the stroke to modify and the number of values in packetValues. In Managed code the default value is -1, which specifies that all packets be modified.

In Automation, the default value ISC_AllElements, defined in the ItemSelectionConstants enumeration type, specifies that all packets be modified.</param>
			<returns>Returns the actual number of packets set.</returns>
		</member>
		<member name="M:Microsoft.Ink.Stroke.SetPacketValuesByProperty(System.Guid,System.Int32[])">
			<summary>Specifies the packet values for a particular property.</summary>
			<param name="id, bstrPropertyName">[in] Specifies the System.Guid identifier from the PacketProperty object used to select which packet data is set. Use PacketDescription to determine the properties defined for this stroke.</param>
			<param name="packetValues">[in] Specifies the array of packet data values. The method fails if any of the values in the array exceed the minimum or maximum value of the property. To determine the range of values in the property call the PacketDescriptionPropertyMetrics method.</param>
			<param name="index">[in, optional] Specifies the starting index of the packet to be modified. In Managed code the default value is 0, which specifies the first packet.

In Automation, the default value ISC_FirstElement, defined in the ItemSelectionConstants enumeration type, specifies the first packet.</param>
			<param name="count">[in, optional] Specifies the number of packets in the stroke to modify and the number of values in packetValues. In Managed code the default value is -1, which specifies that all packets be modified.

In Automation, the default value ISC_AllElements, defined in the ItemSelectionConstants enumeration type, specifies that all packets be modified.</param>
			<returns>Returns the actual number of packets set.</returns>
		</member>
		<member name="M:Microsoft.Ink.Stroke.GetRectangleIntersections(System.Drawing.Rectangle)">
			<summary>Specifies the points where a stroke intersects a given rectangle.</summary>
			<param name="rectangle">[in] Specifies the System.Drawing.Rectangle, in ink space coordinates, that describes the hit-test area.</param>
			<returns>This method returns a StrokeIntersection array that indicates where the stroke intersects the given rectangle.</returns>
		</member>
		<member name="M:Microsoft.Ink.Stroke.FindIntersections(Microsoft.Ink.Strokes)">
			<summary>Specifies the points where this stroke intersects strokes within a given collection of strokes.</summary>
			<param name="strokes">[in] Specifies the given collection of strokes used to calculate the points where this stroke intersects strokes in the collection. If Null, use all strokes in the Ink object.

Note that the given collection of strokes must come from the same Ink object as the stroke being tested for intersection. If they are not from the same Ink object, E_INK_MISMATCHED_INK_OBJECT is returned (see HRESULT value below). FindIntersections is the only Tablet PC API that requires that the given collection of strokes come from the same Ink object.</param>
			<returns>This method returns an array of FINDEX values indicating the locations where this stroke intersects strokes within a given collection of strokes.</returns>
		</member>
		<member name="M:Microsoft.Ink.Stroke.HitTest(System.Drawing.Point,System.Single)">
			<summary>Specifies whether a stroke is either completely inside or intersected by a given circle.</summary>
			<param name="pt">[in] Managed only. Specifies the center of the hit-test circle as a System.Drawing.Point in ink space coordinates.</param>
			<param name="radius">[in] Specifies the radius of the circle to use in the hit test.</param>
			<param name="x">[in] Automation only. Specifies the x-position of the hit test.</param>
			<param name="y">[in] Automation only. Specifies the y-position of the hit test.</param>
			<returns>This method returns the Boolean value that indicates whether the stroke intersects the circle.</returns>
		</member>
		<member name="M:Microsoft.Ink.Stroke.NearestPoint(System.Drawing.Point,System.Single@)">
			<summary>Specifies the location on the stroke nearest to a given point, and the distance that point is from the stroke.</summary>
			<param name="pt, X, Y">[in] Specifies the point to test, in ink space coordinates. In Managed code this is a single Point, and in Automation this point is represented by X and Y.</param>
			<param name="distance">[in] Specifies the distance from the point to the stroke. This parameter can be Null (in Visual Basic 6, vbNull and it must be specified, not omitted, if using late binding).</param>
			<returns>This method returns the FINDEX value representing the closest location on the stroke.</returns>
		</member>
		<member name="M:Microsoft.Ink.Stroke.NearestPoint(System.Drawing.Point)">
			<summary>Specifies the location on the stroke nearest to a given point, and the distance that point is from the stroke.</summary>
			<param name="pt, X, Y">[in] Specifies the point to test, in ink space coordinates. In Managed code this is a single Point, and in Automation this point is represented by X and Y.</param>
			<param name="distance">[in] Specifies the distance from the point to the stroke. This parameter can be Null (in Visual Basic 6, vbNull and it must be specified, not omitted, if using late binding).</param>
			<returns>This method returns the FINDEX value representing the closest location on the stroke.</returns>
		</member>
		<member name="M:Microsoft.Ink.Stroke.Split(System.Single)">
			<summary>Specifies the stroke to split at the given location on the stroke.</summary>
			<param name="index">[in] Specifies the FINDEX value that represents where to split the stroke. An FINDEX is a float value representing a location somewhere between two points in the stroke. For instance, 0.0 is the first point in the stroke. 1.0 is the second point in the stroke. 0.5 is halfway between the first and second points. As another example, an FINDEX value of 37.25 would represent a location 25% along the line between points 37 and 38 of the stroke.</param>
			<returns>This method returns the new Stroke object that is created from the split operation.</returns>
		</member>
		<member name="M:Microsoft.Ink.Stroke.Clip(System.Drawing.Rectangle)">
			<summary>Specifies that the strokes within an Ink object be clipped to a given rectangle, or specifies that a Stroke object be clipped to fit within a given rectangle.</summary><param name="rectangle">[in] Specifies the rectangle, of type System.Drawing.Rectangle in Managed code, to which the Ink object or Stroke object is clipped. The rectangle is specified in ink space coordinates.

In Automation, the rectangle is an InkRectangle object.</param></member>
		<member name="M:Microsoft.Ink.Stroke.Transform(System.Drawing.Drawing2D.Matrix,System.Boolean)">
			<summary>Specifies the application of scaling, rotation, translation and skewing of Stroke collections/Ink objects in a single operation, as opposed to individual operations.</summary><param name="mInkTransform">[in] Specifies the System.Drawing.Drawing2D.Matrix transform to use on the strokes. (In Automation, this is an InkTransform object.)</param><param name="ApplyOnPenWidth">[in, optional] Specifies the System.Boolean value that determines whether to apply the transform to the width of the ink in the DrawingAttributes of the strokes. Defaults to False.</param></member>
		<member name="M:Microsoft.Ink.Stroke.Transform(System.Drawing.Drawing2D.Matrix)">
			<summary>Specifies the application of scaling, rotation, translation and skewing of Stroke collections/Ink objects in a single operation, as opposed to individual operations.</summary><param name="mInkTransform">[in] Specifies the System.Drawing.Drawing2D.Matrix transform to use on the strokes. (In Automation, this is an InkTransform object.)</param><param name="ApplyOnPenWidth">[in, optional] Specifies the System.Boolean value that determines whether to apply the transform to the width of the ink in the DrawingAttributes of the strokes. Defaults to False.</param></member>
		<member name="M:Microsoft.Ink.Stroke.ScaleToRectangle(System.Drawing.Rectangle)">
			<summary>Specifies the stroke or collection of strokes to be scaled to fit in the specified rectangle.</summary>
			<param name="rectangle">[in] Specifies the System.Drawing.Rectangle (in Managed code) in ink space to which the stroke or the collection of strokes are scaled. The stroke or strokes are scaled and translated to match the bounding box of the stroke or strokes to the rectangle.

In Automation the rectangle is an InkRectangle object.</param>
		</member>
		<member name="M:Microsoft.Ink.Stroke.Move(System.Single,System.Single)">
			<summary>Specifies a translation to apply to the ink.</summary>
			<param name="OffsetX, HorizontalComponent">[in] Specifies the amount to translate the ink in the X dimension.</param>
			<param name="OffsetY, VerticalComponent">[in] Specifies the amount to translate the ink in the Y dimension.</param>
		</member>
		<member name="M:Microsoft.Ink.Stroke.Rotate(System.Single,System.Drawing.Point)">
			<summary>Specifies the amount to rotate the ink, measured in degrees, and specifies the center point of the rotation.</summary><param name="degrees">[in] Specifies the degrees to rotate by.</param><param name="point">[in] Specifies the point to rotate around.</param><param name="X, Y">[in, optional] Specifies the point to rotate around. Default is the origin.</param></member>
		<member name="M:Microsoft.Ink.Stroke.Scale(System.Single,System.Single)">
			<summary>Specifies the X and Y factors to scale the ink.</summary><param name="scaleX, HorizontalMultiplier">[in] Specifies the factor to scale the X dimension in the view transform.</param><param name="scaleY, VerticalMultiplier">[in] Specifies the factor to scale the Y dimension in the view transform.</param></member>
		<member name="M:Microsoft.Ink.Stroke.Shear(System.Single,System.Single)">
			<summary>Shears the ink in the stroke or strokes by the specified horizontal and vertical factors.</summary><param name="shearX">[in] Specifies the horizontal factor of the shear.</param><param name="shearY">[in] Specifies the vertical factor of the shear.</param></member>
		<member name="T:Microsoft.Ink.StrokeIntersection">
			<summary>Indicates the FINDEX values where an intersection begins and ends on a stroke.</summary>
		</member>
		<member name="T:Microsoft.Ink.Strokes">
			<summary>Contains the collection of Stroke objects that represent a single ink stroke.</summary>
		</member>
		<member name="P:Microsoft.Ink.Strokes.Count">
			<summary>Returns the number of objects or collections contained in a collection.</summary><returns>This property returns a signed 32-bit number that specifies the number of objects or collections in the collection.</returns></member>
		<member name="P:Microsoft.Ink.Strokes.IsFixedSize">
			<summary>Returns the value that specifies whether a collection is of fixed size.</summary><returns>This property returns the Boolean value that specifies whether a collection is of fixed size.</returns></member>
		<member name="P:Microsoft.Ink.Strokes.IsSynchronized">
			<summary>Returns a value that indicates whether access to the collection is synchronized (thread safe).</summary><returns>This property returns the Boolean value that specifies whether access to the collection is synchronized (thread safe).</returns></member>
		<member name="P:Microsoft.Ink.Strokes.SyncRoot">
			<summary>Returns the object that can be used to synchronize access to the collection.</summary><returns>This property returns an object that can be used to synchronize access to the collection.</returns></member>
		<member name="P:Microsoft.Ink.Strokes.IsReadOnly">
			<summary>Returns the value that specifies whether a collection of strokes is read-only.</summary>
		</member>
		<member name="P:Microsoft.Ink.Strokes.Item">
			<summary>Specifies the object or collection to return at the given index in a collection.</summary><param name="index">[in] Specifies the zero-based index, or position, of the object or collection to return from the collection. The index must be a number from 0 to one less than the value of the collection's Count property.</param><param name="identifier">[in] Automation only. Specifies the identifying information, such as a GUID, associated with the object or collection to return from the collection.</param><returns>This method returns the object or collection of the specified type at the given index in the collection.</returns></member>
		<member name="P:Microsoft.Ink.Strokes.Ink">
			<summary>Returns the Ink object that contains a collection of strokes.</summary>
			<returns>This property returns the Ink object that contains the Strokes collection.</returns>
		</member>
		<member name="P:Microsoft.Ink.Strokes.RecognitionResult">
			<summary>Returns the recognition result of the Strokes collection.</summary>
			<returns>This property returns the recognition result of the Strokes collection.</returns>
		</member>
		<member name="E:Microsoft.Ink.Strokes.StrokesAdded">
			<summary>Occurs when one or more strokes is added to the Strokes collection object.</summary>
			<param name="sender">[in] Specifies the source Strokes collection object of this event.</param>
			<param name="e">[in] Specifies the StrokesEventArgs object that contains the event data.</param>
			<param name="StrokeIds">[in] Automation only. Specifies the integer array of stroke Id information for all of the strokes that have been added when this event occurs.</param>
		</member>
		<member name="E:Microsoft.Ink.Strokes.StrokesRemoved">
			<summary>Occurs when one or more strokes is deleted from the Strokes collection.</summary>
			<param name="sender">[in] Specifies the source Strokes collection of this event.</param>
			<param name="e">[in] Specifies the StrokesEventArgs object that contains the event data.</param>
			<param name="StrokeIds">[in] Automation only. Specifies the integer array of stroke Id information for all of the strokes that have been deleted when this event occurs.</param>
		</member>
		<member name="F:Microsoft.Ink.Strokes.StrokesAdded">
			<summary>Occurs when one or more strokes is added to the Strokes collection object.</summary>
			<param name="sender">[in] Specifies the source Strokes collection object of this event.</param>
			<param name="e">[in] Specifies the StrokesEventArgs object that contains the event data.</param>
			<param name="StrokeIds">[in] Automation only. Specifies the integer array of stroke Id information for all of the strokes that have been added when this event occurs.</param>
		</member>
		<member name="F:Microsoft.Ink.Strokes.StrokesRemoved">
			<summary>Occurs when one or more strokes is deleted from the Strokes collection.</summary>
			<param name="sender">[in] Specifies the source Strokes collection of this event.</param>
			<param name="e">[in] Specifies the StrokesEventArgs object that contains the event data.</param>
			<param name="StrokeIds">[in] Automation only. Specifies the integer array of stroke Id information for all of the strokes that have been deleted when this event occurs.</param>
		</member>
		<member name="M:Microsoft.Ink.Strokes.CopyTo(System.Array,System.Int32)">
			<summary>Copies all the elements of the current collection to the specified one-dimensional Array starting at the specified destination Array index.</summary><param name="array">[in] Specifies the one-dimensional array that is the destination of the elements copied from the collection. The array must have zero-based indexing.</param><param name="index">[in] Specifies the zero-based index in the array parameter at which copying begins.</param></member>
		<member name="M:Microsoft.Ink.Strokes.ToString">
			<summary>For a Strokes collection, returns the recognized text of the strokes.</summary><returns>This method returns the top string of the RecognitionResult if one has been associated with this Strokes collection.</returns></member>
		<member name="M:Microsoft.Ink.Strokes.Clear">
			<summary>Clears all the Stroke objects from the Strokes collection.</summary>
		</member>
		<member name="M:Microsoft.Ink.Strokes.Add(Microsoft.Ink.Stroke)">
			<summary>Specifies the stroke or collection of strokes to add to a given collection of strokes.</summary>
			<param name="stroke">[in] Managed code only. Specifies the stroke to add to the Strokes collection.</param>
			<param name="strokes">[in] Managed code only. Specifies the collection of strokes to add to the Strokes collection.</param>
			<param name="InkStroke">[in] Automation only. Specifies the stroke to add to the collection of strokes.</param>
			<returns>The Add method that takes a Stroke parameter always returns a value of -1.</returns>
		</member>
		<member name="M:Microsoft.Ink.Strokes.Add(Microsoft.Ink.Strokes)">
			<summary>Specifies the stroke or collection of strokes to add to a given collection of strokes.</summary>
			<param name="stroke">[in] Managed code only. Specifies the stroke to add to the Strokes collection.</param>
			<param name="strokes">[in] Managed code only. Specifies the collection of strokes to add to the Strokes collection.</param>
			<param name="InkStroke">[in] Automation only. Specifies the stroke to add to the collection of strokes.</param>
			<returns>The Add method that takes a Stroke parameter always returns a value of -1.</returns>
		</member>
		<member name="M:Microsoft.Ink.Strokes.Remove(Microsoft.Ink.Stroke)">
			<summary>Specifies the stroke or collection of strokes to remove from the given collection of strokes.</summary>
			<param name="stroke">[in] Specifies the stroke to remove from this collection of strokes.</param>
			<param name="strokes">[in] Specifies the collection of strokes to remove from this collection of strokes.</param>
		</member>
		<member name="M:Microsoft.Ink.Strokes.Remove(Microsoft.Ink.Strokes)">
			<summary>Specifies the stroke or collection of strokes to remove from the given collection of strokes.</summary>
			<param name="stroke">[in] Specifies the stroke to remove from this collection of strokes.</param>
			<param name="strokes">[in] Specifies the collection of strokes to remove from this collection of strokes.</param>
		</member>
		<member name="M:Microsoft.Ink.Strokes.RemoveAt(System.Int32)">
			<summary>Specifies the object to remove from a collection based on its index in the collection.</summary><param name="index">[in] Specifies the index of the object to remove from the collection.</param></member>
		<member name="M:Microsoft.Ink.Strokes.ModifyDrawingAttributes(Microsoft.Ink.DrawingAttributes)">
			<summary>Specifies the drawing attributes of all of the strokes in a collection of strokes.</summary>
			<param name="newDrawingAttributes">[in] Specifies the new drawing attributes for all of the strokes in the collection.</param>
		</member>
		<member name="M:Microsoft.Ink.Strokes.GetBoundingBox(Microsoft.Ink.BoundingBoxMode)">
			<summary>Specifies the rectangle, in ink space coordinates, that corresponds to the bounding box of all of the strokes in an Ink object, the bounding box of a Stroke object, or the portion of the display to invalidate or redraw when displaying a Strokes collection.</summary><param name="boundingBoxMode">[in, optional] Specifies the stroke characteristics to use in order to calculate the bounding box. For example, you can calculate the bounding box using only the points, you can include the drawing attributes of the stroke, or you can apply Bezier curve fitting to all strokes. For more details, see the BoundingBoxMode enumeration type.

In Automation, the BoundingBoxMode parameter of the Ink::GetBoundingBox method has a default value of -1, which means that all characteristics of a stroke are used to specify the bounding box.</param><returns>This method returns the rectangle that defines the bounding box of an Ink object, a Stroke object, or a Strokes collection.</returns></member>
		<member name="M:Microsoft.Ink.Strokes.GetBoundingBox">
			<summary>Specifies the rectangle, in ink space coordinates, that corresponds to the bounding box of all of the strokes in an Ink object, the bounding box of a Stroke object, or the portion of the display to invalidate or redraw when displaying a Strokes collection.</summary><param name="boundingBoxMode">[in, optional] Specifies the stroke characteristics to use in order to calculate the bounding box. For example, you can calculate the bounding box using only the points, you can include the drawing attributes of the stroke, or you can apply Bezier curve fitting to all strokes. For more details, see the BoundingBoxMode enumeration type.

In Automation, the BoundingBoxMode parameter of the Ink::GetBoundingBox method has a default value of -1, which means that all characteristics of a stroke are used to specify the bounding box.</param><returns>This method returns the rectangle that defines the bounding box of an Ink object, a Stroke object, or a Strokes collection.</returns></member>
		<member name="M:Microsoft.Ink.Strokes.RemoveRecognitionResult">
			<summary>Removes the RecognitionResult associated with the Strokes collection.</summary>
		</member>
		<member name="M:Microsoft.Ink.Strokes.Transform(System.Drawing.Drawing2D.Matrix,System.Boolean)">
			<summary>Specifies the application of scaling, rotation, translation and skewing of Stroke collections/Ink objects in a single operation, as opposed to individual operations.</summary>
			<param name="mInkTransform">[in] Specifies the System.Drawing.Drawing2D.Matrix transform to use on the strokes. (In Automation, this is an InkTransform object.)</param>
			<param name="ApplyOnPenWidth">[in, optional] Specifies the System.Boolean value that determines whether to apply the transform to the width of the ink in the DrawingAttributes of the strokes. Defaults to False.</param>
		</member>
		<member name="M:Microsoft.Ink.Strokes.Clip(System.Drawing.Rectangle)">
			<summary>Specifies that the strokes within an Ink object be clipped to a given rectangle, or specifies that a Stroke object be clipped to fit within a given rectangle.</summary><param name="rectangle">[in] Specifies the rectangle, of type System.Drawing.Rectangle in Managed code, to which the Ink object or Stroke object is clipped. The rectangle is specified in ink space coordinates.

In Automation, the rectangle is an InkRectangle object.</param></member>
		<member name="M:Microsoft.Ink.Strokes.Transform(System.Drawing.Drawing2D.Matrix)">
			<summary>Specifies the application of scaling, rotation, translation and skewing of Stroke collections/Ink objects in a single operation, as opposed to individual operations.</summary>
			<param name="mInkTransform">[in] Specifies the System.Drawing.Drawing2D.Matrix transform to use on the strokes. (In Automation, this is an InkTransform object.)</param>
			<param name="ApplyOnPenWidth">[in, optional] Specifies the System.Boolean value that determines whether to apply the transform to the width of the ink in the DrawingAttributes of the strokes. Defaults to False.</param>
		</member>
		<member name="M:Microsoft.Ink.Strokes.ScaleToRectangle(System.Drawing.Rectangle)">
			<summary>Specifies the stroke or collection of strokes to be scaled to fit in the specified rectangle.</summary><param name="rectangle">[in] Specifies the System.Drawing.Rectangle (in Managed code) in ink space to which the stroke or the collection of strokes are scaled. The stroke or strokes are scaled and translated to match the bounding box of the stroke or strokes to the rectangle.

In Automation the rectangle is an InkRectangle object.</param></member>
		<member name="M:Microsoft.Ink.Strokes.Rotate(System.Single,System.Drawing.Point)">
			<summary>Specifies the amount to rotate the ink, measured in degrees, and specifies the center point of the rotation.</summary>
			<param name="degrees">[in] Specifies the degrees to rotate by.</param>
			<param name="point">[in] Specifies the point to rotate around.</param>
			<param name="X, Y">[in, optional] Specifies the point to rotate around. Default is the origin.</param>
		</member>
		<member name="M:Microsoft.Ink.Strokes.Scale(System.Single,System.Single)">
			<summary>Specifies the X and Y factors to scale the ink.</summary>
			<param name="scaleX, HorizontalMultiplier">[in] Specifies the factor to scale the X dimension in the view transform.</param>
			<param name="scaleY, VerticalMultiplier">[in] Specifies the factor to scale the Y dimension in the view transform.</param>
		</member>
		<member name="M:Microsoft.Ink.Strokes.Shear(System.Single,System.Single)">
			<summary>Shears the ink in the stroke or strokes by the specified horizontal and vertical factors.</summary>
			<param name="shearX">[in] Specifies the horizontal factor of the shear.</param>
			<param name="shearY">[in] Specifies the vertical factor of the shear.</param>
		</member>
		<member name="M:Microsoft.Ink.Strokes.GetEnumerator">
			<summary>Returns a System.Collections.IEnumerator that contains all objects within the collection.</summary></member>
		<member name="T:Microsoft.Ink.TabletHardwareCapabilities">
			<summary>Defines values that specify the hardware capabilities of the tablet.</summary>
		</member>
		<member name="F:Microsoft.Ink.TabletHardwareCapabilities.Integrated">
			<summary>Indicates that the digitizer is integrated with the display.</summary>
		</member>
		<member name="F:Microsoft.Ink.TabletHardwareCapabilities.CursorMustTouch">
			<summary>Indicates that the cursor must be in physical contact with the device to report position.</summary>
		</member>
		<member name="F:Microsoft.Ink.TabletHardwareCapabilities.HardProximity">
			<summary>Indicates that the device can generate in-air packets when the cursor is in the physical detection range (proximity) of the device.</summary>
		</member>
		<member name="F:Microsoft.Ink.TabletHardwareCapabilities.CursorsHavePhysicalIds">
			<summary>Indicates that the device can uniquely identify the active cursor.</summary>
		</member>
		<member name="T:Microsoft.Ink.TabletPropertyMetricUnit">
			<summary>Defines values that indicate the unit of measurement of a property.</summary>
		</member>
		<member name="F:Microsoft.Ink.TabletPropertyMetricUnit.Default">
			<summary>Units are unknown.</summary>
		</member>
		<member name="F:Microsoft.Ink.TabletPropertyMetricUnit.Inches">
			<summary>(Distance units) Specifies that the property value be in inches.</summary>
		</member>
		<member name="F:Microsoft.Ink.TabletPropertyMetricUnit.Centimeters">
			<summary>(Distance units) Specifies that the property value be in centimeters.</summary>
		</member>
		<member name="F:Microsoft.Ink.TabletPropertyMetricUnit.Degrees">
			<summary>(Angle units) Specifies that the property value be in degrees.</summary>
		</member>
		<member name="F:Microsoft.Ink.TabletPropertyMetricUnit.Radians">
			<summary>(Angle units) Specifies that the property value be in radians.</summary>
		</member>
		<member name="F:Microsoft.Ink.TabletPropertyMetricUnit.Seconds">
			<summary>(Angle units) Specifies that the property value be in seconds.</summary>
		</member>
		<member name="F:Microsoft.Ink.TabletPropertyMetricUnit.Pounds">
			<summary>(Force, or mass, units) Specifies that the property value be in pounds.</summary>
		</member>
		<member name="F:Microsoft.Ink.TabletPropertyMetricUnit.Grams">
			<summary>(Force, or mass, units) Specifies that the property value be in grams.</summary>
		</member>
		<member name="T:Microsoft.Ink.TabletPropertyMetrics">
			<summary>Defines the range and resolution of a packet property.</summary>
		</member>
		<member name="F:Microsoft.Ink.TabletPropertyMetrics.Minimum">
			<summary>Specifies the minimum value, in logical units, that the tablet reports for this property.</summary>
		</member>
		<member name="F:Microsoft.Ink.TabletPropertyMetrics.Maximum">
			<summary>Specifies the maximum value, in logical units, that the tablet reports for this property.</summary>
		</member>
		<member name="F:Microsoft.Ink.TabletPropertyMetrics.Units">
			<summary>Specifies the physical units of the property, such as inches or degrees.</summary>
		</member>
		<member name="F:Microsoft.Ink.TabletPropertyMetrics.Resolution">
			<summary>Specifies the resolution or increment value for the units member.</summary>
		</member>
		<member name="T:Microsoft.Ink.Tablet">
			<summary>Represents the digitizer device of the Tablet PC that receives tablet device messages or events.</summary>
		</member>
		<member name="P:Microsoft.Ink.Tablet.Name">
			<summary>Returns the name of an object.</summary><returns>This property returns a string that represents the name of the object.</returns></member>
		<member name="P:Microsoft.Ink.Tablet.PlugAndPlayId">
			<summary>Returns the plug-and-play identifier of the tablet.</summary>
			<returns>This property returns a string that specifies the plug-and-play identifier of the tablet.</returns>
		</member>
		<member name="P:Microsoft.Ink.Tablet.MaximumInputRectangle">
			<summary>Returns the maximum input rectangle, in tablet device coordinates, that the tablet supports.</summary>
			<returns>This property returns the maximum input rectangle that the tablet supports.

In Automation, this maximum input rectangle is an InkRectangle object.</returns>
		</member>
		<member name="P:Microsoft.Ink.Tablet.HardwareCapabilities">
			<summary>Returns a bit mask that defines the hardware capabilities of the tablet, such as whether a cursor must be in physical contact with the tablet to report its position.</summary>
			<returns>This property returns the TabletHardwareCapabilities enumeration type, which defines the hardware capabilities of the tablet.</returns>
		</member>
		<member name="M:Microsoft.Ink.Tablet.IsPacketPropertySupported(System.Guid)">
			<summary>Specifies whether a property of a tablet device or a collection of tablet devices, identified with a globally unique identifier (GUID), is supported.</summary>
			<param name="packetProperty">[in] Specifies the property of the tablet that is requested. In Managed code, this property will be defined in PacketProperty. In Automation, use a defined BSTR constant from the InkPacketProperty module.</param>
			<returns>This method returns the Boolean value that indicates whether a given property is supported by the tablet or tablets.</returns>
			<returns>HRESULT valueDescription
S_OKSuccess.
E_POINTERInvalid parameter.
CO_E_CLASSSTRINGInvalid GUID format.
E_INK_EXCEPTIONAn exception occurred while processing.</returns>
		</member>
		<member name="M:Microsoft.Ink.Tablet.GetPropertyMetrics(System.Guid)">
			<summary>Specifies the metrics data for a given property.</summary>
			<param name="property">[in] Specifies the property for which you want to determine metrics. In Managed code, this property will be found in PacketPropertyGuids. In Automation, use an item in the Packet Property GUIDs list.</param>
			<param name="min">[out] Automation only. Specifies the minimum value, in logical units, that the tablet reports for this property. For example, a tablet reporting x-values from 0 to 9000 would have a logical minimum of 0.</param>
			<param name="max">[out] Automation only. Specifies the maximum value, in logical units, that the tablet reports for this property. For example, a tablet reporting x-values from 0 to 9000 would have a logical maximum of 9000.</param>
			<param name="units">[out] Automation only. Specifies the physical units of the property, such as inches or degrees. For a list of property units, see the TabletPropertyMetricUnit enumeration type.</param>
			<param name="resolution">[out] Automation only. Specifies the resolution or increment value for the units member. For example, a tablet that reports 400 dots per inch (dpi) would have a resolution value of 400.</param>
			<returns>This method returns a TabletPropertyMetrics structure for the requested property supported by the tablet in Managed code.</returns>
		</member>
		<member name="T:Microsoft.Ink.Tablets">
			<summary>Contains the Tablet objects that represent the hardware-specific properties of all tablets attached to the system.</summary>
		</member>
		<member name="P:Microsoft.Ink.Tablets.SyncRoot">
			<summary>Returns the object that can be used to synchronize access to the collection.</summary><returns>This property returns an object that can be used to synchronize access to the collection.</returns></member>
		<member name="P:Microsoft.Ink.Tablets.Count">
			<summary>Returns the number of objects or collections contained in a collection.</summary><returns>This property returns a signed 32-bit number that specifies the number of objects or collections in the collection.</returns></member>
		<member name="P:Microsoft.Ink.Tablets.IsSynchronized">
			<summary>Returns a value that indicates whether access to the collection is synchronized (thread safe).</summary><returns>This property returns the Boolean value that specifies whether access to the collection is synchronized (thread safe).</returns></member>
		<member name="P:Microsoft.Ink.Tablets.Item">
			<summary>Specifies the object or collection to return at the given index in a collection.</summary><param name="index">[in] Specifies the zero-based index, or position, of the object or collection to return from the collection. The index must be a number from 0 to one less than the value of the collection's Count property.</param><param name="identifier">[in] Automation only. Specifies the identifying information, such as a GUID, associated with the object or collection to return from the collection.</param><returns>This method returns the object or collection of the specified type at the given index in the collection.</returns></member>
		<member name="P:Microsoft.Ink.Tablets.DefaultTablet">
			<summary>Returns the default tablet within the set of available tablets.</summary>
			<returns>This property returns the default Tablet object within the set of available tablets.</returns>
		</member>
		<member name="M:Microsoft.Ink.Tablets.#ctor(Microsoft.Ink._Internal.IInkTablets)">
			<summary>Specifies the creation of a new Tablets collection.</summary>
			<returns>This method constructs a new Tablets collection.</returns>
		</member>
		<member name="M:Microsoft.Ink.Tablets.#ctor">
			<summary>Specifies the creation of a new Tablets collection.</summary>
			<returns>This method constructs a new Tablets collection.</returns>
		</member>
		<member name="M:Microsoft.Ink.Tablets.CopyTo(System.Array,System.Int32)">
			<summary>Copies all the elements of the current collection to the specified one-dimensional Array starting at the specified destination Array index.</summary><param name="array">[in] Specifies the one-dimensional array that is the destination of the elements copied from the collection. The array must have zero-based indexing.</param><param name="index">[in] Specifies the zero-based index in the array parameter at which copying begins.</param></member>
		<member name="M:Microsoft.Ink.Tablets.IsPacketPropertySupported(System.Guid)">
			<summary>Specifies whether a property of a tablet device or a collection of tablet devices, identified with a globally unique identifier (GUID), is supported.</summary><param name="packetProperty">[in] Specifies the property of the tablet that is requested. In Managed code, this property will be defined in PacketProperty. In Automation, use a defined BSTR constant from the InkPacketProperty module.</param><returns>This method returns the Boolean value that indicates whether a given property is supported by the tablet or tablets.</returns><returns>HRESULT valueDescription
S_OKSuccess.
E_POINTERInvalid parameter.
CO_E_CLASSSTRINGInvalid GUID format.
E_INK_EXCEPTIONAn exception occurred while processing.</returns></member>
		<member name="M:Microsoft.Ink.Tablets.GetEnumerator">
			<summary>Returns a System.Collections.IEnumerator that contains all objects within the collection.</summary></member>
		<member name="T:Microsoft.Ink.Factoid">
			<summary>Defines constant string values that are used to increase recognition accuracy by providing contextual information to the recognizer.</summary>
		</member>
		<member name="T:Microsoft.Ink.Line">
			<summary>Defines the beginning and end points of a line.</summary>
		</member>
		<member name="T:Microsoft.Ink.RecognitionAlternate">
			<summary>Represents the possible word matches for segments of ink that are compared to a recognizer's dictionary.</summary>
		</member>
		<member name="P:Microsoft.Ink.RecognitionAlternate.Midline">
			<summary>Returns the midline for a RecognitionAlternate object that exists on a single line.</summary>
			<returns>This property returns the Line structure that contains the midline of the RecognitionAlternate object.</returns>
		</member>
		<member name="P:Microsoft.Ink.RecognitionAlternate.Ascender">
			<summary>Returns the ascender line of a RecognitionAlternate object that exists on a single line.</summary>
			<returns>This property returns the Line structure that represents the ascender line of the RecognitionAlternate object.</returns>
		</member>
		<member name="P:Microsoft.Ink.RecognitionAlternate.Descender">
			<summary>Returns the descender line of a RecognitionAlternate object that exists on a single line.</summary>
			<returns>This property returns the Line structure that contains the descender line of the RecognitionAlternate object.</returns>
		</member>
		<member name="P:Microsoft.Ink.RecognitionAlternate.Baseline">
			<summary>Returns the baseline of a RecognitionAlternate object that exists on a single line.</summary>
			<returns>This property returns the Line structure that contains the baseline of the RecognitionAlternate object.</returns>
		</member>
		<member name="P:Microsoft.Ink.RecognitionAlternate.LineNumber">
			<summary>Returns the line number of the ink that makes up the alternate.</summary>
			<returns>This property returns a signed 32-bit number that indicates the line number of the ink that represented the alternate.</returns>
		</member>
		<member name="P:Microsoft.Ink.RecognitionAlternate.LineAlternates">
			<summary>Returns the collection of alternates where each alternate in the collection is on a separate line.</summary>
			<returns>This property returns the RecognitionAlternates collection of alternates, with each alternate corresponding to a single line.</returns>
		</member>
		<member name="P:Microsoft.Ink.RecognitionAlternate.ConfidenceAlternates">
			<summary>Returns the collection of alternates where each alternate in the collection consists of the segments with the same property values.</summary>
			<returns>This property returns the RecognitionAlternates collection of alternates, with each alternate in the collection having the same confidence value as this alternate.</returns>
		</member>
		<member name="P:Microsoft.Ink.RecognitionAlternate.Confidence">
			<summary>Returns the level of confidence - strong, intermediate, or poor - that a recognizer has in the recognition of a RecognitionAlternate object or of a gesture.</summary><returns>This property returns the RecognitionConfidence enumeration member that represents the recognizer's confidence level in the recognition of an alternate or a gesture.</returns></member>
		<member name="M:Microsoft.Ink.RecognitionAlternate.ToString">
			<summary>For a Strokes collection, returns the recognized text of the strokes.</summary><returns>This method returns the top string of the RecognitionResult if one has been associated with this Strokes collection.</returns></member>
		<member name="M:Microsoft.Ink.RecognitionAlternate.GetPropertyValue(System.Guid)">
			<summary>Specifies the value of a given property of the alternate, such as the recognizer's confidence in the alternate.</summary>
			<param name="propertyType">[in] Specifies which property of the alternate to return, as one of the GUIDs from the RecognitionPropertyGuids enumeration object. These values include ConfidenceLevel, HotPoint, LineMetrics, LineNumber, MaximumStrokeCount, PointsPerInch, and Segmentation.</param>
			<returns>This method returns a byte array that contains the value of the property type.</returns>
			<returns>HRESULT valueDescription
S_OKSuccess.
E_INK_EXCEPTIONAn exception occurred while processing.
E_POINTERThe maxAlternates parameter is an invalid pointer.
CO_E_CLASSSTRINGInvalid GUID format.</returns>
		</member>
		<member name="M:Microsoft.Ink.RecognitionAlternate.GetTextRangeFromStrokes(Microsoft.Ink.Strokes,System.Int32@,System.Int32@)">
			<summary>Specifies the smallest range of recognized text for which the recognizer can return an alternate that contains a given collection of strokes.</summary>
			<param name="strokes">[in] Specifies the collection of strokes for which to find the containing alternate.</param>
			<param name="selectionStart">[in, out] Specifies the start position of the range of recognized text within the alternate object on which this method was called which matches the smallest alternate that contains the passed in strokes.</param>
			<param name="selectionLength">[in, out] Specifies the length of the text within the range of recognized text of the smallest alternate containing the passed in strokes.</param>
		</member>
		<member name="M:Microsoft.Ink.RecognitionAlternate.GetStrokesFromTextRange(System.Int32@,System.Int32@)">
			<summary>Returns the strokes that correspond to the smallest RecognitionAlternates collection that contains a specified range of recognized text within the alternate.</summary>
			<param name="selectionStart">[in, out] Specifies the start of the zero-based text range within this alternate. The character at the selectionStart position is included in the range of recognized text. This parameter will be adjusted to the beginning of the smallest recognized set of one or more segments that includes the input selection.</param>
			<param name="selectionLength">[in, out] Specifies the length of the text range within the best alternate. An input value of -1 means select to the end. This parameter will be adjusted to the length of the smallest recognized set of one or more segments that includes the input selection.</param>
			<returns>This method returns the collection of strokes that corresponds to the given range of recognized text.</returns>
		</member>
		<member name="M:Microsoft.Ink.RecognitionAlternate.GetStrokesFromStrokeRanges(Microsoft.Ink.Strokes)">
			<summary>Specifies the smallest collection of strokes that contains a given input collection of strokes, and for which the recognizer can provide alternates.</summary>
			<param name="strokes">[in] Specifies the collection of stroke objects to use to find the smallest recognition result alternate's stroke collection that contains this collection.</param>
			<returns>This method returns the smallest collection of strokes that contains a given input collection of strokes, and for which the recognizer can provide alternates.</returns>
		</member>
		<member name="M:Microsoft.Ink.RecognitionAlternate.AlternatesWithConstantPropertyValues(System.Guid)">
			<summary>Specifies the collection of alternates that have the same value as this alternate for the given property type.</summary>
			<param name="propertyType">[in] Specifies the System.Guid identifier for the property type for which each returned alternate in the collection will have the same constant value.</param>
			<returns>This method returns a RecognitionAlternates collection of alternates, where each alternate in the collection has the same value as this alternate for the specified property type.</returns>
		</member>
		<member name="T:Microsoft.Ink.RecognitionAlternates">
			<summary>Contains the RecognitionAlternate objects that represent possible word matches for segments of ink.</summary>
		</member>
		<member name="P:Microsoft.Ink.RecognitionAlternates.SyncRoot">
			<summary>Returns the object that can be used to synchronize access to the collection.</summary><returns>This property returns an object that can be used to synchronize access to the collection.</returns></member>
		<member name="P:Microsoft.Ink.RecognitionAlternates.Count">
			<summary>Returns the number of objects or collections contained in a collection.</summary><returns>This property returns a signed 32-bit number that specifies the number of objects or collections in the collection.</returns></member>
		<member name="P:Microsoft.Ink.RecognitionAlternates.IsSynchronized">
			<summary>Returns a value that indicates whether access to the collection is synchronized (thread safe).</summary><returns>This property returns the Boolean value that specifies whether access to the collection is synchronized (thread safe).</returns></member>
		<member name="P:Microsoft.Ink.RecognitionAlternates.Item">
			<summary>Specifies the object or collection to return at the given index in a collection.</summary><param name="index">[in] Specifies the zero-based index, or position, of the object or collection to return from the collection. The index must be a number from 0 to one less than the value of the collection's Count property.</param><param name="identifier">[in] Automation only. Specifies the identifying information, such as a GUID, associated with the object or collection to return from the collection.</param><returns>This method returns the object or collection of the specified type at the given index in the collection.</returns></member>
		<member name="M:Microsoft.Ink.RecognitionAlternates.CopyTo(System.Array,System.Int32)">
			<summary>Copies all the elements of the current collection to the specified one-dimensional Array starting at the specified destination Array index.</summary><param name="array">[in] Specifies the one-dimensional array that is the destination of the elements copied from the collection. The array must have zero-based indexing.</param><param name="index">[in] Specifies the zero-based index in the array parameter at which copying begins.</param></member>
		<member name="M:Microsoft.Ink.RecognitionAlternates.GetEnumerator">
			<summary>Returns a System.Collections.IEnumerator that contains all objects within the collection.</summary></member>
		<member name="T:Microsoft.Ink.RecognizerCharacterAutoCompletionMode">
			<summary>Defines values that specify types of character input modes.</summary>
		</member>
		<member name="F:Microsoft.Ink.RecognizerCharacterAutoCompletionMode.Full">
			<summary>Recognition occurs as if all strokes have been input.</summary>
		</member>
		<member name="F:Microsoft.Ink.RecognizerCharacterAutoCompletionMode.Random">
			<summary>Recognition occurs on partial input.</summary>
		</member>
		<member name="F:Microsoft.Ink.RecognizerCharacterAutoCompletionMode.Prefix">
			<summary>Recognition occurs on partial input.</summary>
		</member>
		<member name="T:Microsoft.Ink.RecognitionStatus">
			<summary>Defines values that specify whether an error occurred during recognition, and if so, which error(s) occurred.</summary>
		</member>
		<member name="F:Microsoft.Ink.RecognitionStatus.NoError">
			<summary>No error.</summary>
		</member>
		<member name="F:Microsoft.Ink.RecognitionStatus.Interrupted">
			<summary>The recognition was interrupted by a call to StopBackgroundRecognition.</summary>
		</member>
		<member name="F:Microsoft.Ink.RecognitionStatus.ProcessFailed">
			<summary>The ink recognition process failed.</summary>
		</member>
		<member name="F:Microsoft.Ink.RecognitionStatus.InkAddedFailed">
			<summary>The ink could not be added.</summary>
		</member>
		<member name="F:Microsoft.Ink.RecognitionStatus.SetAutoCompletionModeFailed">
			<summary>Could not set the character Autocomplete mode.</summary>
		</member>
		<member name="F:Microsoft.Ink.RecognitionStatus.SetStrokesFailed">
			<summary>Could not set the strokes.</summary>
		</member>
		<member name="F:Microsoft.Ink.RecognitionStatus.SetGuideFailed">
			<summary>Could not set the guide.</summary>
		</member>
		<member name="F:Microsoft.Ink.RecognitionStatus.SetFlagsFailed">
			<summary>Could not set the flags.</summary>
		</member>
		<member name="F:Microsoft.Ink.RecognitionStatus.SetFactoidFailed">
			<summary>Could not set the factoid.</summary>
		</member>
		<member name="F:Microsoft.Ink.RecognitionStatus.SetPrefixSuffixFailed">
			<summary>Could not set the suffix or the prefix.</summary>
		</member>
		<member name="F:Microsoft.Ink.RecognitionStatus.SetWordListFailed">
			<summary>Could not set the word list.</summary>
		</member>
		<member name="T:Microsoft.Ink.RecognitionModes">
			<summary>Defines values that specify how the recognizer interprets the ink and determines the result string.</summary>
		</member>
		<member name="F:Microsoft.Ink.RecognitionModes.None">
			<summary>Recognizer applies no recognition modes.</summary>
		</member>
		<member name="F:Microsoft.Ink.RecognitionModes.WordMode">
			<summary>Recognizer treats the ink as a single word.</summary>
		</member>
		<member name="F:Microsoft.Ink.RecognitionModes.TopInkBreaksOnly">
			<summary>Disables multiple segmentation.</summary>
		</member>
		<member name="F:Microsoft.Ink.RecognitionModes.Coerce">
			<summary>Recognizer coerces the result based on the factoid you specified for the context.</summary>
		</member>
		<member name="T:Microsoft.Ink.RecognizerContext">
			<summary>Specifies the creation of a new RecognizerContext object.</summary>
			<returns>This method constructs a new RecognizerContext object.</returns>
		</member>
		<member name="P:Microsoft.Ink.RecognizerContext.WordList">
			<summary>Returns or sets the user-defined word list used in the recognition process to improve the recognition results.</summary>
			<returns>This property returns the WordList to use to improve the recognition results.</returns>
		</member>
		<member name="P:Microsoft.Ink.RecognizerContext.PrefixText">
			<summary>Returns or sets the text string that helps improve recognition results by providing a context for newly entered text.</summary>
			<returns>This property returns or sets the string that comes before the text contained in the recognizer context.</returns>
		</member>
		<member name="P:Microsoft.Ink.RecognizerContext.SuffixText">
			<summary>Returns or sets the text string that helps improve recognition results by providing a context for newly entered text.</summary>
			<returns>This property returns or sets the string that comes after the text contained in the recognizer context.</returns>
		</member>
		<member name="P:Microsoft.Ink.RecognizerContext.Strokes">
			<summary>Returns or sets the strokes that are associated with the recognizer context.</summary>
			<returns>This property returns or sets the Strokes collection that is associated with the recognizer context.</returns>
		</member>
		<member name="P:Microsoft.Ink.RecognizerContext.Recognizer">
			<summary>Returns the recognizer used within the recognizer context.</summary>
			<returns>This property returns the Recognizer used within the recognizer context.</returns>
		</member>
		<member name="P:Microsoft.Ink.RecognizerContext.RecognitionFlags">
			<summary>Returns or sets the flags that specify how the recognizer interprets the ink and determines the result string.</summary>
			<returns>This property returns the RecognitionModes enumeration type, which sets the case flags that specify how the recognizer treats ink results.</returns>
		</member>
		<member name="P:Microsoft.Ink.RecognizerContext.Guide">
			<summary>Returns or sets the RecognizerGuide to use for ink input.</summary>
			<returns>This property returns the RecognizerGuide used for ink recognition.</returns>
		</member>
		<member name="P:Microsoft.Ink.RecognizerContext.Factoid">
			<summary>Returns or sets the factoid that a recognizer uses to constrain its search for the recognition result.</summary><returns>This property sets or returns the factoid type of the recognizer context.</returns></member>
		<member name="P:Microsoft.Ink.RecognizerContext.CharacterAutoCompletion">
			<summary>Returns or sets the character Autocomplete mode that determines when characters or words are recognized.</summary>
			<returns>This property returns or sets the RecognizerCharacterAutoCompletionMode enumeration type, which defines when characters or words are recognized.</returns>
		</member>
		<member name="E:Microsoft.Ink.RecognizerContext.Recognition">
			<summary>Occurs when the RecognizerContext has generated results from the BackgroundRecognize method.</summary>
			<param name="sender">[in] Specifies the RecognitionContext object that sent this event.</param>
			<param name="e">[in] Specifies the RecognizerContextRecognitionEventArgs object containing the data for this event.</param>
			<param name="RecognizedString">[in] Automation only. Specifies the string containing the recognition result text with the highest confidence returned by the recognizer.</param>
			<param name="CustomData">[in] Automation only. Specifies the object containing custom data.</param>
			<param name="RecognitionStatus">[in] Automation only. Specifies the InkRecognitionStatus enumeration value indicating the recognition status as of the most recent recognition result.</param>
		</member>
		<member name="E:Microsoft.Ink.RecognizerContext.RecognitionWithAlternates">
			<summary>Occurs when the RecognizerContext has generated results after calling the BackgroundRecognizeWithAlternates method.</summary>
			<param name="sender">[in] Specifies the RecognitionContext object that sent this event.</param>
			<param name="e">[in] Specifies the RecognizerContextRecognitionWithAlternatesEventArgs object containing the data for this event.</param>
			<param name="RecognitionResult">[in] Automation only. Specifies the IInkRecognitionResult object returned by the recognizer.</param>
			<param name="CustomData">[in] Automation only. Specifies the object containing custom data.</param>
			<param name="RecognitionStatus">[in] Automation only. Specifies the InkRecognitionStatus enumeration value indicating the recognition status as of the most recent recognition result.</param>
		</member>
		<member name="F:Microsoft.Ink.RecognizerContext.Recognition">
			<summary>Occurs when the RecognizerContext has generated results from the BackgroundRecognize method.</summary>
			<param name="sender">[in] Specifies the RecognitionContext object that sent this event.</param>
			<param name="e">[in] Specifies the RecognizerContextRecognitionEventArgs object containing the data for this event.</param>
			<param name="RecognizedString">[in] Automation only. Specifies the string containing the recognition result text with the highest confidence returned by the recognizer.</param>
			<param name="CustomData">[in] Automation only. Specifies the object containing custom data.</param>
			<param name="RecognitionStatus">[in] Automation only. Specifies the InkRecognitionStatus enumeration value indicating the recognition status as of the most recent recognition result.</param>
		</member>
		<member name="F:Microsoft.Ink.RecognizerContext.RecognitionWithAlternates">
			<summary>Occurs when the RecognizerContext has generated results after calling the BackgroundRecognizeWithAlternates method.</summary>
			<param name="sender">[in] Specifies the RecognitionContext object that sent this event.</param>
			<param name="e">[in] Specifies the RecognizerContextRecognitionWithAlternatesEventArgs object containing the data for this event.</param>
			<param name="RecognitionResult">[in] Automation only. Specifies the IInkRecognitionResult object returned by the recognizer.</param>
			<param name="CustomData">[in] Automation only. Specifies the object containing custom data.</param>
			<param name="RecognitionStatus">[in] Automation only. Specifies the InkRecognitionStatus enumeration value indicating the recognition status as of the most recent recognition result.</param>
		</member>
		<member name="M:Microsoft.Ink.RecognizerContext.#ctor(Microsoft.Ink._Internal.InkRecognizerContext)">
			<summary>Specifies the creation of a new RecognizerContext object.</summary>
			<returns>This method constructs a new RecognizerContext object.</returns>
		</member>
		<member name="M:Microsoft.Ink.RecognizerContext.#ctor">
			<summary>Specifies the creation of a new RecognizerContext object.</summary>
			<returns>This method constructs a new RecognizerContext object.</returns>
		</member>
		<member name="M:Microsoft.Ink.RecognizerContext.Clone">
			<summary>Specifies the creation of a duplicate object.</summary><param name="DrawingAttributes">This method returns a duplicate DrawingAttributes object, which is an exact copy of the original object.</param><param name="Ink">This method returns a duplicate Ink object, which is an exact copy of the original object.</param><param name="RecognizerContext">This method returns a duplicate RecognizerContext object, which is an exact copy of the original object.</param></member>
		<member name="M:Microsoft.Ink.RecognizerContext.IsStringSupported(System.String)">
			<summary>Specifies whether the system dictionary, user dictionary, or word list contain a string.</summary>
			<param name="string">[in] Specifies the string to look up in the dictionaries and word list.</param>
			<returns>This method returns the Boolean value that specifies whether a string is contained in one of the dictionaries or a word list.</returns>
		</member>
		<member name="M:Microsoft.Ink.RecognizerContext.StopBackgroundRecognition">
			<summary>Specifies that background recognition be stopped when it was started with a call to BackgroundRecognize or BackgroundRecognizeWithAlternates.</summary>
		</member>
		<member name="M:Microsoft.Ink.RecognizerContext.BackgroundRecognize(System.Object)">
			<summary>Specifies that the recognizer should recognize the associated strokes and fire a recognition event when recognition is complete.</summary>
			<param name="customData">[in] Specifies any application-defined data available to the application in the Recognition event. Get or set the data of a stroke with the Data property. In Automation, this parameter may be a VARIANT of type VT_EMPTY or VT_NULL if no data needs to be passed.</param>
		</member>
		<member name="M:Microsoft.Ink.RecognizerContext.BackgroundRecognize">
			<summary>Specifies that the recognizer should recognize the associated strokes and fire a recognition event when recognition is complete.</summary>
			<param name="customData">[in] Specifies any application-defined data available to the application in the Recognition event. Get or set the data of a stroke with the Data property. In Automation, this parameter may be a VARIANT of type VT_EMPTY or VT_NULL if no data needs to be passed.</param>
		</member>
		<member name="M:Microsoft.Ink.RecognizerContext.Recognize(Microsoft.Ink.RecognitionStatus@)">
			<summary>Specifies that a collection of strokes should be recognized, and that recognition results are returned from the recognition.</summary>
			<param name="recognitionStatus">[in, out] Specifies the most recent RecognitionStatus value.</param>
			<returns>This method returns the RecognitionResult results of a recognized collection of strokes.</returns>
		</member>
		<member name="M:Microsoft.Ink.RecognizerContext.EndInkInput">
			<summary>Specifies that no more ink will be added to the context.</summary>
		</member>
		<member name="M:Microsoft.Ink.RecognizerContext.BackgroundRecognizeWithAlternates(System.Object)">
			<summary>Specifies that the recognizer should recognize the associated strokes and fire recognition with alternates event when recognition is complete.</summary>
			<param name="customData">[in] Specifies any application-defined data available to the application in the Recognition event. Get or set the data of a stroke with the Data property. In Automation, this parameter may be a VARIANT of type VT_EMPTY or VT_NULL if no data needs to be passed.</param>
		</member>
		<member name="M:Microsoft.Ink.RecognizerContext.BackgroundRecognizeWithAlternates">
			<summary>Specifies that the recognizer should recognize the associated strokes and fire recognition with alternates event when recognition is complete.</summary>
			<param name="customData">[in] Specifies any application-defined data available to the application in the Recognition event. Get or set the data of a stroke with the Data property. In Automation, this parameter may be a VARIANT of type VT_EMPTY or VT_NULL if no data needs to be passed.</param>
		</member>
		<member name="T:Microsoft.Ink.RecognizerGuide">
			<summary>Specifies the creation of a new RecognizerGuide object.</summary>
			<returns>This method constructs a new RecognizerGuide object.</returns>
		</member>
		<member name="P:Microsoft.Ink.RecognizerGuide.Rows">
			<summary>Returns or sets the number of rows in the guide box.</summary>
			<returns>This property returns a signed 32-bit number that specifies the number of columns in the guide box.</returns>
		</member>
		<member name="P:Microsoft.Ink.RecognizerGuide.Columns">
			<summary>Returns or sets the number of columns in the guide box.</summary>
			<returns>This property returns a signed 32-bit number that specifies the number of columns in the guide box.</returns>
		</member>
		<member name="P:Microsoft.Ink.RecognizerGuide.Midline">
			<summary>Returns or sets the midline height, or distance from the baseline to the midline, of the guide box.</summary>
			<returns>This property returns a signed 32-bit number that indicates the midline height of the guide.</returns>
		</member>
		<member name="P:Microsoft.Ink.RecognizerGuide.WritingBox">
			<summary>Returns or sets the invisible writing area of the guide box in which writing can actually take place.</summary>
			<returns>This property returns the rectangular writing area of the guide box.</returns>
		</member>
		<member name="P:Microsoft.Ink.RecognizerGuide.DrawnBox">
			<summary>Returns or sets the box that is physically drawn on the tablet's screen, in which writing takes place.</summary>
			<returns>This property returns a rectangle that is relative to the top left of the writing box.

In Automation, the rectangle is an InkRectangle object.</returns>
		</member>
		<member name="M:Microsoft.Ink.RecognizerGuide.#ctor(System.Int32,System.Int32,System.Int32,System.Drawing.Rectangle,System.Drawing.Rectangle)">
			<summary>Specifies the creation of a new RecognizerGuide object.</summary>
			<returns>This method constructs a new RecognizerGuide object.</returns>
		</member>
		<member name="M:Microsoft.Ink.RecognizerGuide.#ctor(Microsoft.Ink._Internal.InkRecognizerGuide)">
			<summary>Specifies the creation of a new RecognizerGuide object.</summary>
			<returns>This method constructs a new RecognizerGuide object.</returns>
		</member>
		<member name="T:Microsoft.Ink.RecognitionResult">
			<summary>Represents the result of the recognition.</summary>
		</member>
		<member name="P:Microsoft.Ink.RecognitionResult.TopString">
			<summary>Returns the best result string of the recognition result.</summary>
			<returns>This property returns the string that indicates the best result string of the recognition result.</returns>
		</member>
		<member name="P:Microsoft.Ink.RecognitionResult.TopConfidence">
			<summary>Returns the level of confidence - strong, intermediate, or poor - of the recognition result.</summary>
			<returns>This property returns the RecognitionConfidence enumeration type, which defines the level of confidence of the recognition result.</returns>
		</member>
		<member name="P:Microsoft.Ink.RecognitionResult.TopAlternate">
			<summary>Returns the best alternate of the recognition result.</summary>
			<returns>This property returns the best RecognitionAlternate alternate of the recognition result.</returns>
		</member>
		<member name="M:Microsoft.Ink.RecognitionResult.ModifyTopAlternate(Microsoft.Ink.RecognitionAlternate)">
			<summary>Specifies the recognition result to be modified with a given alternate.</summary>
			<param name="alternate">[in] Specifies the RecognitionAlternate alternate to use to modify the recognition result.</param>
		</member>
		<member name="M:Microsoft.Ink.RecognitionResult.GetAlternatesFromSelection(System.Int32,System.Int32,System.Int32)">
			<summary>Specifies the collection of alternates from a selection within the best result string of the recognition result where each alternate corresponds to only one segment of ink.</summary>
			<param name="selectionStart">[in] Specifies the start of the text selection from which the collection of alternates is returned. The default value is 0 in the overloaded methods without this parameter.</param>
			<param name="selectionLength">[in] Specifies the length of the text selection from which the collection of alternates is returned. The default value is -1, which specifies the entire text, in the overloaded methods without this parameter.</param>
			<param name="maximumAlternates">[in, optional] Specifies the maximum number of alternates to return. The default value is 10. Note that the number of alternates increases exponentially for large ranges and for some languages, so applications should specify the number of alternates rather than query for the maximum number of alternates that the recognizer can return. Recognizers that are unable to compute the number of alternates (due to degree of difficulty or length of time) return an arbitrary number of alternates.</param>
			<returns>This method returns the RecognitionAlternates collection of alternates from a selection within the best result string of the recognition result.</returns>
		</member>
		<member name="M:Microsoft.Ink.RecognitionResult.GetAlternatesFromSelection(System.Int32,System.Int32)">
			<summary>Specifies the collection of alternates from a selection within the best result string of the recognition result where each alternate corresponds to only one segment of ink.</summary>
			<param name="selectionStart">[in] Specifies the start of the text selection from which the collection of alternates is returned. The default value is 0 in the overloaded methods without this parameter.</param>
			<param name="selectionLength">[in] Specifies the length of the text selection from which the collection of alternates is returned. The default value is -1, which specifies the entire text, in the overloaded methods without this parameter.</param>
			<param name="maximumAlternates">[in, optional] Specifies the maximum number of alternates to return. The default value is 10. Note that the number of alternates increases exponentially for large ranges and for some languages, so applications should specify the number of alternates rather than query for the maximum number of alternates that the recognizer can return. Recognizers that are unable to compute the number of alternates (due to degree of difficulty or length of time) return an arbitrary number of alternates.</param>
			<returns>This method returns the RecognitionAlternates collection of alternates from a selection within the best result string of the recognition result.</returns>
		</member>
		<member name="M:Microsoft.Ink.RecognitionResult.GetAlternatesFromSelection">
			<summary>Specifies the collection of alternates from a selection within the best result string of the recognition result where each alternate corresponds to only one segment of ink.</summary>
			<param name="selectionStart">[in] Specifies the start of the text selection from which the collection of alternates is returned. The default value is 0 in the overloaded methods without this parameter.</param>
			<param name="selectionLength">[in] Specifies the length of the text selection from which the collection of alternates is returned. The default value is -1, which specifies the entire text, in the overloaded methods without this parameter.</param>
			<param name="maximumAlternates">[in, optional] Specifies the maximum number of alternates to return. The default value is 10. Note that the number of alternates increases exponentially for large ranges and for some languages, so applications should specify the number of alternates rather than query for the maximum number of alternates that the recognizer can return. Recognizers that are unable to compute the number of alternates (due to degree of difficulty or length of time) return an arbitrary number of alternates.</param>
			<returns>This method returns the RecognitionAlternates collection of alternates from a selection within the best result string of the recognition result.</returns>
		</member>
		<member name="M:Microsoft.Ink.RecognitionResult.SetResultOnStrokes">
			<summary>Specifies the recognition results to assign to the strokes that were used to create the results.</summary>
		</member>
		<member name="T:Microsoft.Ink.RecognitionProperty">
			<summary>Defines values that specify the properties of the alternate.</summary>
		</member>
		<member name="T:Microsoft.Ink.RecognizerCapabilities">
			<summary>Defines values that specify the attributes of a recognizer.</summary>
		</member>
		<member name="F:Microsoft.Ink.RecognizerCapabilities.Object">
			<summary>If set, the recognizer performs object recognition; otherwise, the recognizer performs text recognition.</summary>
		</member>
		<member name="F:Microsoft.Ink.RecognizerCapabilities.FreeInput">
			<summary>The recognizer supports free input.</summary>
		</member>
		<member name="F:Microsoft.Ink.RecognizerCapabilities.LinedInput">
			<summary>The recognizer supports lined input, which is similar to writing on lined paper.</summary>
		</member>
		<member name="F:Microsoft.Ink.RecognizerCapabilities.BoxedInput">
			<summary>The recognizer supports boxed input; each character or word is entered in a box.</summary>
		</member>
		<member name="F:Microsoft.Ink.RecognizerCapabilities.CharacterAutoCompletionInput">
			<summary>The recognizer supports character Autocomplete.</summary>
		</member>
		<member name="F:Microsoft.Ink.RecognizerCapabilities.RightAndDown">
			<summary>The recognizer supports Western and Asian languages.</summary>
		</member>
		<member name="F:Microsoft.Ink.RecognizerCapabilities.LeftAndDown">
			<summary>The recognizer supports Hebrew and Arabic languages.</summary>
		</member>
		<member name="F:Microsoft.Ink.RecognizerCapabilities.DownAndLeft">
			<summary>The recognizer supports Asian languages.</summary>
		</member>
		<member name="F:Microsoft.Ink.RecognizerCapabilities.DownAndRight">
			<summary>The recognizer supports the Chinese language.</summary>
		</member>
		<member name="F:Microsoft.Ink.RecognizerCapabilities.ArbitraryAngle">
			<summary>The recognizer supports text written at arbitrary angles.</summary>
		</member>
		<member name="F:Microsoft.Ink.RecognizerCapabilities.Lattice">
			<summary>The recognizer can return a lattice object.</summary>
		</member>
		<member name="T:Microsoft.Ink.Recognizer">
			<summary>Represents the ability to process ink, or handwriting, and translate the strokes into text or gestures.</summary>
		</member>
		<member name="P:Microsoft.Ink.Recognizer.Name">
			<summary>Returns the name of an object.</summary><returns>This property returns a string that represents the name of the object.</returns></member>
		<member name="P:Microsoft.Ink.Recognizer.Vendor">
			<summary>Returns the vendor name of the recognizer.</summary>
			<returns>This property returns the string that specifies the vendor name of the recognizer.</returns>
		</member>
		<member name="P:Microsoft.Ink.Recognizer.Capabilities">
			<summary>Returns the capabilities of the recognizer, such as whether the recognizer supports character Autocomplete, whether it supports free, lined, or boxed input, etc.</summary>
			<returns>This property returns the RecognizerCapabilities enumeration type, which defines the capabilities of the recognizer.</returns>
		</member>
		<member name="P:Microsoft.Ink.Recognizer.PreferredPacketDescription">
			<summary>Returns a packet description that describes the packet properties of the recognizer.</summary>
			<returns>This property returns an array that contains the PacketProperty GUIDs of the preferred packet descriptions of the recognizer.</returns>
		</member>
		<member name="P:Microsoft.Ink.Recognizer.SupportedProperties">
			<summary>Returns an array of identifiers that describe the properties that the recognizer supports.</summary>
			<returns>This property returns the array of globally unique identifiers (GUIDs) that describe the supported properties of the recognizer.</returns>
		</member>
		<member name="P:Microsoft.Ink.Recognizer.Languages">
			<summary>Returns the list of language and sub-language combinations that the recognizer supports.</summary>
			<returns>This property returns an array of shorts that identifies all the languages that the recognizer supports.</returns>
		</member>
		<member name="M:Microsoft.Ink.Recognizer.ToString">
			<summary>For a Strokes collection, returns the recognized text of the strokes.</summary>
			<returns>This method returns the top string of the RecognitionResult if one has been associated with this Strokes collection.</returns>
		</member>
		<member name="M:Microsoft.Ink.Recognizer.CreateRecognizerContext">
			<summary>Specifies the creation of a new RecognizerContext.</summary>
			<returns>This function returns a RecognizerContext for the invoking Recognizer.</returns>
		</member>
		<member name="T:Microsoft.Ink.Recognizers">
			<summary>Contains the Recognizer objects that represent the ability to create a recognition context, retrieve its attributes and properties, and determine which packet properties the recognizer needs to perform recognition.</summary>
		</member>
		<member name="P:Microsoft.Ink.Recognizers.SyncRoot">
			<summary>Returns the object that can be used to synchronize access to the collection.</summary><returns>This property returns an object that can be used to synchronize access to the collection.</returns></member>
		<member name="P:Microsoft.Ink.Recognizers.Count">
			<summary>Returns the number of objects or collections contained in a collection.</summary><returns>This property returns a signed 32-bit number that specifies the number of objects or collections in the collection.</returns></member>
		<member name="P:Microsoft.Ink.Recognizers.IsSynchronized">
			<summary>Returns a value that indicates whether access to the collection is synchronized (thread safe).</summary><returns>This property returns the Boolean value that specifies whether access to the collection is synchronized (thread safe).</returns></member>
		<member name="P:Microsoft.Ink.Recognizers.Item">
			<summary>Specifies the object or collection to return at the given index in a collection.</summary><param name="index">[in] Specifies the zero-based index, or position, of the object or collection to return from the collection. The index must be a number from 0 to one less than the value of the collection's Count property.</param><param name="identifier">[in] Automation only. Specifies the identifying information, such as a GUID, associated with the object or collection to return from the collection.</param><returns>This method returns the object or collection of the specified type at the given index in the collection.</returns></member>
		<member name="M:Microsoft.Ink.Recognizers.#ctor(Microsoft.Ink._Internal.IInkRecognizers)">
			<summary>Specifies the creation of a new Recognizers collection.</summary>
			<returns>This method constructs a new Recognizers collection.</returns>
		</member>
		<member name="M:Microsoft.Ink.Recognizers.#ctor">
			<summary>Specifies the creation of a new Recognizers collection.</summary>
			<returns>This method constructs a new Recognizers collection.</returns>
		</member>
		<member name="M:Microsoft.Ink.Recognizers.CopyTo(System.Array,System.Int32)">
			<summary>Copies all the elements of the current collection to the specified one-dimensional Array starting at the specified destination Array index.</summary><param name="array">[in] Specifies the one-dimensional array that is the destination of the elements copied from the collection. The array must have zero-based indexing.</param><param name="index">[in] Specifies the zero-based index in the array parameter at which copying begins.</param></member>
		<member name="M:Microsoft.Ink.Recognizers.GetDefaultRecognizer">
			<summary>Returns the default recognizer for a given language, specified by an NLS locale identifier LCID.</summary>
			<param name="languageID">[in, optional] Specifies the LCID locale identifier of the language for which you are retrieving the default recognizer. If languageID is 0 (or no parameter is passed), the method uses the user's locale setting to determine which default recognizer to retrieve. If the user has not specified a locale in Regional Options, the method uses the locale specified for the computer.</param>
			<returns>This method returns the default Recognizer for a given language.</returns>
		</member>
		<member name="M:Microsoft.Ink.Recognizers.GetDefaultRecognizer(System.Int32)">
			<summary>Returns the default recognizer for a given language, specified by an NLS locale identifier LCID.</summary>
			<param name="languageID">[in, optional] Specifies the LCID locale identifier of the language for which you are retrieving the default recognizer. If languageID is 0 (or no parameter is passed), the method uses the user's locale setting to determine which default recognizer to retrieve. If the user has not specified a locale in Regional Options, the method uses the locale specified for the computer.</param>
			<returns>This method returns the default Recognizer for a given language.</returns>
		</member>
		<member name="M:Microsoft.Ink.Recognizers.GetEnumerator">
			<summary>Returns a System.Collections.IEnumerator that contains all objects within the collection.</summary></member>
		<member name="T:Microsoft.Ink.WordList">
			<summary>Specifies the creation of a new WordList object.</summary>
			<returns>This method constructs a new WordList object.</returns>
		</member>
		<member name="M:Microsoft.Ink.WordList.#ctor(Microsoft.Ink._Internal.InkWordList)">
			<summary>Specifies the creation of a new WordList object.</summary>
			<returns>This method constructs a new WordList object.</returns>
		</member>
		<member name="M:Microsoft.Ink.WordList.#ctor">
			<summary>Specifies the creation of a new WordList object.</summary>
			<returns>This method constructs a new WordList object.</returns>
		</member>
		<member name="M:Microsoft.Ink.WordList.Add(System.String)">
			<summary>Specifies the single word to add to the word list.</summary>
			<param name="word">[in] Specifies the word to add to a word list. The word is not added if it already exists in the list.</param>
		</member>
		<member name="M:Microsoft.Ink.WordList.Remove(System.String)">
			<summary>Specifies the single word to remove from a word list.</summary>
			<param name="word">[in] Specifies the word to remove from a word list.</param>
		</member>
		<member name="M:Microsoft.Ink.WordList.Merge(Microsoft.Ink.WordList)">
			<summary>Specifies another word list to merge into a given word list.</summary>
			<param name="wordList">[in] Specifies another word list to merge into the given word list. Words that already exist in the list are not added.</param>
		</member>
<member name="P:Microsoft.Ink.InkCollector.Cursor">
		<summary>Gets or sets the cursor that is displayed when the mouse pointer is over the control.</summary>
	</member>
	<member name="E:Microsoft.Ink.InkEdit.Change">
		<summary>Indicates the contents of a control or a property value have changed. How and when this event occurs varies with the control.</summary>
	</member>
	<member name="E:Microsoft.Ink.InkEdit.Click">
		<summary>Occurs when the user presses and then releases a mouse button over an object. It can also occur when the value of a control is changed.</summary>
	</member>
	<member name="E:Microsoft.Ink.InkEdit.DblClick">
		<summary>Occurs when the control is double-clicked.</summary>
	</member>
	<member name="E:Microsoft.Ink.InkEdit.KeyDown">
		<summary>Occur when the user presses (KeyDown) or releases (KeyUp) a key while an object has the focus.</summary>
	</member>
	<member name="E:Microsoft.Ink.InkEdit.KeyUp">
		<summary>Occur when the user presses (KeyDown) or releases (KeyUp) a key while an object has the focus.</summary>
	</member>
	<member name="E:Microsoft.Ink.InkEdit.KeyPress">
		<summary>Occurs when the user presses and releases an ANSI key.</summary>
	</member>
	<member name="E:Microsoft.Ink.InkEdit.MouseDown">
		<summary>Occur when the user presses (MouseDown) or releases (MouseUp) a mouse button.</summary>
	</member>
	<member name="E:Microsoft.Ink.InkEdit.MouseUp">
		<summary>Occur when the user presses (MouseDown) or releases (MouseUp) a mouse button.</summary>
	</member>
	<member name="E:Microsoft.Ink.InkEdit.MouseMove">
		<summary>Occurs when the user moves the mouse.</summary>
	</member>
	<member name="E:Microsoft.Ink.InkEdit.SelChange">
		<summary></summary>
	</member>
	<member name="M:Microsoft.Ink.InkEdit.OnHandleCreated(System.EventArgs)">
		<summary>Raises the HandleCreated event.</summary>
	</member>
	<member name="M:Microsoft.Ink.InkEdit.WndProc(System.Windows.Forms.Message@)">
		<summary>Processes Windows messages.</summary>
	</member>
	<member name="P:Microsoft.Ink.InkEdit.BackColor">
		<summary>Returns or sets the background color of an object.</summary>
	</member>
	<member name="P:Microsoft.Ink.InkEdit.CreateParams">
		<summary>Gets the required creation parameters when the control handle is created.</summary>
	</member>
	<member name="P:Microsoft.Ink.InkEdit.Cursor">
		<summary>Gets or sets the cursor that is displayed when the mouse pointer is over the control.</summary>
	</member>
	<member name="P:Microsoft.Ink.InkEdit.DisableNoScroll">
		<summary>Returns or sets a value that determines whether scroll bars in the control are disabled.</summary>
	</member>
	<member name="P:Microsoft.Ink.InkEdit.Font">
		<summary>Returns a Font object.</summary>
	</member>
	<member name="P:Microsoft.Ink.InkEdit.hWnd">
		<summary>Returns ahandle to a form or control.</summary>
	</member>
	<member name="P:Microsoft.Ink.InkEdit.MultiLine">
		<summary>Returns or sets a value indicating whether a control can accept and display multiple lines of text.</summary>
	</member>
	<member name="P:Microsoft.Ink.InkEdit.SelBold">
		<summary>Return or set font styles of the currently selected text in a control.</summary>
	</member>
	<member name="P:Microsoft.Ink.InkEdit.SelItalic">
		<summary>Return or set font styles of the currently selected text in a control.</summary>
	</member>
	<member name="P:Microsoft.Ink.InkEdit.SelUnderline">
		<summary>Return or set font styles of the currently selected text in a control.</summary>
	</member>
	<member name="P:Microsoft.Ink.InkEdit.SelCharOffset">
		<summary>Returns or sets a value that determines whether text in the control appears on the baseline (normal), as a superscript above the baseline, or as a subscript below the baseline.</summary>
	</member>
	<member name="P:Microsoft.Ink.InkEdit.SelColor">
		<summary>Returns or sets a value that determines the color of text in the control. </summary>
	</member>
	<member name="P:Microsoft.Ink.InkEdit.SelFontName">
		<summary>Returns or sets the font used to display the currently selected text or the character(s) immediately following the insertion point in the control. </summary>
	</member>
	<member name="P:Microsoft.Ink.InkEdit.SelFontSize">
		<summary></summary>
	</member>
	<member name="P:Microsoft.Ink.InkEdit.SelLength">
		<summary>Returns or sets the number of characters selected.</summary>
	</member>
	<member name="P:Microsoft.Ink.InkEdit.SelStart">
		<summary>Returns or sets the starting point of text selected; indicates the position of the insertion point if no text is selected.</summary>
	</member>
	<member name="P:Microsoft.Ink.InkEdit.SelText">
		<summary>Returns or sets the string containing the currently selected text. </summary>
	</member>
	<member name="P:Microsoft.Ink.InkEdit.SelRTF">
		<summary>Returns or sets the text (in .rtf format) in the current selection of a control.</summary>
	</member>
	<member name="P:Microsoft.Ink.InkEdit.Text">
		<summary></summary>
	</member>
	<member name="M:Microsoft.Ink.InkPicture.OnHandleCreated(System.EventArgs)">
		<summary>Raises the HandleCreated event.</summary>
	</member>
	<member name="M:Microsoft.Ink.InkPicture.OnHandleDestroyed(System.EventArgs)">
		<summary>Raises the HandleDestroyed event.</summary>
	</member>
	<member name="M:Microsoft.Ink.InkPicture.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
		<summary>Raises the KeyDown event.</summary>
	</member>
	<member name="P:Microsoft.Ink.InkPicture.AccessibleDescription">
		<summary>Gets or sets the description of the control used by accessibility client applications.</summary>
	</member>
	<member name="P:Microsoft.Ink.InkPicture.AccessibleName">
		<summary>Gets or sets the name of the control used by accessibility client applications.</summary>
	</member>
	<member name="P:Microsoft.Ink.InkPicture.AccessibleRole">
		<summary>Gets or sets the accessible role of the control</summary>
	</member>
	<member name="P:Microsoft.Ink.InkPicture.Anchor">
		<summary>Gets or sets which edges of the control are anchored to the edges of its container.</summary>
	</member>
	<member name="P:Microsoft.Ink.InkPicture.BackColor">
		<summary></summary>
	</member>
	<member name="P:Microsoft.Ink.InkPicture.BackGroundImage">
		<summary>Gets or sets the background image displayed in the control.</summary>
	</member>
	<member name="P:Microsoft.Ink.InkPicture.BorderStyle">
		<summary>Indicates the border style for the control.</summary>
	</member>
	<member name="P:Microsoft.Ink.InkPicture.ContextMenu">
		<summary>Gets or sets the shortcut menu associated with the control.</summary>
	</member>
	<member name="P:Microsoft.Ink.InkPicture.Dock">
		<summary>Gets or sets which edge of the parent container a control is docked to.</summary>
	</member>
	<member name="P:Microsoft.Ink.InkPicture.DragIcon">
		<summary>Returns or sets the icon to be displayed as the pointer in a drag-and-drop operation.</summary>
	</member>
	<member name="P:Microsoft.Ink.InkPicture.Enabled">
		<summary>Gets or sets a value indicating whether the control can respond to user interaction.</summary>
	 </member>
	<member name="T:Microsoft.Ink.CursorButtonState">
			<summary>
            The state of the cursor hardware button.
            </summary>
		</member>
		<member name="F:Microsoft.Ink.CursorButtonState.Unavailable">
			<summary>
            The cursor button is out-of-range of the Tablet hardware and the
                 state cannot be determined.
            </summary>
		</member>
		<member name="F:Microsoft.Ink.CursorButtonState.Up">
			<summary>
             The cursor button is not pressed, and is in the up position.
            </summary>
		</member>
		<member name="F:Microsoft.Ink.CursorButtonState.Down">
			<summary>
             The cursor button is pressed, and is in the down position.
            </summary>
		</member>
		<member name="F:Microsoft.Ink.InkClipboardModes.Copy">
			<summary>
            Copy the ink from the ink object.
            </summary>
		</member>
		<member name="F:Microsoft.Ink.InkClipboardModes.Cut">
			<summary>
            Cut the ink from the ink object.
            </summary>
		</member>
		<member name="F:Microsoft.Ink.InkClipboardModes.NotEqual">
			<summary>
            Use everything except the specified ink.
            </summary>
		</member>
		<member name="F:Microsoft.Ink.InkClipboardModes.ExtractOnly">
			<summary>
            Extract the ink, but do not paste the ink on the clipboard.
            </summary>
		</member>
		<member name="F:Microsoft.Ink.InkClipboardModes.DelayedCopy">
			<summary>
            Perform a delayed copy of the ink object.
            </summary>
		</member>
		<member name="F:Microsoft.Ink.InkClipboardModes.Default">
			<summary>
            Copy the ink from the ink object.
            </summary>
		</member>
		<member name="M:Microsoft.Ink.InkCollector.OnMouseDown(Microsoft.Ink.CancelMouseEventArgs)">
			<summary>
            OnMouseDown Event
            </summary>
		</member>
		<member name="M:Microsoft.Ink.InkCollector.OnMouseMove(Microsoft.Ink.CancelMouseEventArgs)">
			<summary>
            OnMouseMove Event
            </summary>
		</member>
		<member name="M:Microsoft.Ink.InkCollector.OnMouseUp(Microsoft.Ink.CancelMouseEventArgs)">
			<summary>
            OnMouseUp Event
            </summary>
		</member>
		<member name="M:Microsoft.Ink.InkCollector.OnMouseWheel(Microsoft.Ink.CancelMouseEventArgs)">
			<summary>
            OnMouseWheel Event
            </summary>
		</member>
		<member name="M:Microsoft.Ink.InkCollector.OnDoubleClick(System.ComponentModel.CancelEventArgs)">
			<summary>
            OnDoubleClick Event
            </summary>
		</member>
		<member name="M:Microsoft.Ink.InkCollector.OnStroke(Microsoft.Ink.InkCollectorStrokeEventArgs)">
			<summary>
            Stroke event forwarder.
            </summary>
		</member>
		<member name="M:Microsoft.Ink.InkCollector.OnCursorDown(Microsoft.Ink.InkCollectorCursorDownEventArgs)">
			<summary>
            CursorDown event forwarder.
            </summary>
		</member>
		<member name="M:Microsoft.Ink.InkCollector.OnNewPackets(Microsoft.Ink.InkCollectorNewPacketsEventArgs)">
			<summary>
            NewPackets event forwarder.
            </summary>
		</member>
		<member name="M:Microsoft.Ink.InkCollector.OnNewInAirPackets(Microsoft.Ink.InkCollectorNewInAirPacketsEventArgs)">
			<summary>
            NewInAirPackets event forwarder.
            </summary>
		</member>
		<member name="M:Microsoft.Ink.InkCollector.OnCursorButtonDown(Microsoft.Ink.InkCollectorCursorButtonDownEventArgs)">
			<summary>
            CursorButtonDown event forwarder.
            </summary>
		</member>
		<member name="M:Microsoft.Ink.InkCollector.OnCursorButtonUp(Microsoft.Ink.InkCollectorCursorButtonUpEventArgs)">
			<summary>
            CursorButtonUp event forwarder.
            </summary>
		</member>
		<member name="M:Microsoft.Ink.InkCollector.OnCursorInRange(Microsoft.Ink.InkCollectorCursorInRangeEventArgs)">
			<summary>
            CursorInRange event forwarder.
            </summary>
		</member>
		<member name="M:Microsoft.Ink.InkCollector.OnCursorOutOfRange(Microsoft.Ink.InkCollectorCursorOutOfRangeEventArgs)">
			<summary>
            CursorOutOfRange event forwarder.
            </summary>
		</member>
		<member name="M:Microsoft.Ink.InkCollector.OnSystemGesture(Microsoft.Ink.InkCollectorSystemGestureEventArgs)">
			<summary>
            SystemGesture event forwarder.
            </summary>
		</member>
		<member name="M:Microsoft.Ink.InkCollector.OnGesture(Microsoft.Ink.InkCollectorGestureEventArgs)">
			<summary>
            Gesture event forwarder.
            </summary>
		</member>
		<member name="M:Microsoft.Ink.InkCollector.OnTabletAdded(Microsoft.Ink.InkCollectorTabletAddedEventArgs)">
			<summary>
            TabletAdded event forwarder.
            </summary>
		</member>
		<member name="M:Microsoft.Ink.InkCollector.OnTabletRemoved(Microsoft.Ink.InkCollectorTabletRemovedEventArgs)">
			<summary>
            TabletRemoved event forwarder.
            </summary>
		</member>
		<member name="E:Microsoft.Ink.InkCollector.CursorButtonDown">
			<summary>Occurs when the InkCollector detects a cursor button that is down.</summary>
			<param name="sender">[in] Specifies the source InkCollector of this event.</param>
			<param name="e">[in] Specifies the InkCollectorCursorButtonDownEventArgs object that contains the event data.</param>
		</member>
		<member name="M:Microsoft.Ink.InkEdit.Recognize">
			<summary>Specifies that recognition should occur.</summary>
		</member>
		<member name="M:Microsoft.Ink.InkEdit.OnStroke(Microsoft.Ink.InkEditStrokeEventArgs)">
			<summary>
            Stroke event forwarder.
            </summary>
		</member>
		<member name="M:Microsoft.Ink.InkEdit.OnRecognition(Microsoft.Ink.InkEditRecognitionEventArgs)">
			<summary>
            Recognized event forwarder.
            </summary>
		</member>
		<member name="M:Microsoft.Ink.InkEdit.OnGesture(Microsoft.Ink.InkEditGestureEventArgs)">
			<summary>
            Gesture recognized event forwarder.
            </summary>
		</member>
		<member name="P:Microsoft.Ink.InkOverlay.CollectionMode"><summary>Defines values that determine whether ink, gestures, or both are recognized as the user writes.</summary></member>
		<member name="E:Microsoft.Ink.InkOverlay.CursorButtonDown"><summary>Occurs when the InkCollector detects a cursor button that is down.</summary><param name="sender">[in] Specifies the source InkCollector of this event.</param><param name="e">[in] Specifies the InkCollectorCursorButtonDownEventArgs object that contains the event data.</param></member>
		<member name="P:Microsoft.Ink.InkPicture.CollectionMode"><summary>Defines values that determine whether ink, gestures, or both are recognized as the user writes.</summary></member>
		<member name="E:Microsoft.Ink.InkPicture.CursorButtonDown"><summary>Occurs when the InkCollector detects a cursor button that is down.</summary><param name="sender">[in] Specifies the source InkCollector of this event.</param><param name="e">[in] Specifies the InkCollectorCursorButtonDownEventArgs object that contains the event data.</param></member>
		<member name="P:Microsoft.Ink.RecognitionAlternate.Strokes">
			<summary>
            Retrieves the strokes associated with the recognition alternate.
            </summary>
		</member>
		<member name="P:Microsoft.Ink.RecognitionAlternates.Strokes">
			<summary>
            Retrieves the strokes associated with the recognition alternates.
            </summary>
		</member>
		<member name="P:Microsoft.Ink.RecognitionResult.Strokes">
			<summary>
            Retrieves the strokes which were recognized in the recognition result.
            </summary>
		</member>
		<member name="F:Microsoft.Ink.RecognitionResult.DefaultMaximumRecognitionAlternates">
			<summary>
            Default maximum number of recognition alternates to retrieve.
            </summary>
		</member>
		<member name="M:Microsoft.Ink.Strokes.Contains(Microsoft.Ink.Stroke)">
			<summary>
            Determine if a specific stroke exists in the collection.
			</summary>
		</member>
		<member name="M:Microsoft.Ink.Strokes.IndexOf(Microsoft.Ink.Stroke)">
			<summary>
            Retrieve the index of a specific stroke in the collection
			</summary>
		</member>
		<member name="M:Microsoft.Ink.Strokes.Move(System.Single,System.Single)">
			<summary>
            Moves strokes in the collection by specified vertical and horizontal components.
            </summary>
		</member>
	<member name="T:Microsoft.Ink.Factoid">
		<summary>Defines constant string values that are used to increase recognition accuracy by providing contextual information to the recognizer.</summary>
	</member>	
	<member name="M:Microsoft.Ink.Factoid.#ctor">
		<summary>Factoid Constructor</summary>
	</member>
	<member name="F:Microsoft.Ink.Factoid.None">
		<summary>Disables all other Factoids and dictionaries</summary>
	</member>	
	<member name="F:Microsoft.Ink.Factoid.Default">
		<summary>The default Factoid.</summary>
	</member>	
	<member name="F:Microsoft.Ink.Factoid.SystemDictionary">
		<summary>Enables the system dictionary only.</summary>
	</member>	
	<member name="F:Microsoft.Ink.Factoid.WordList">
		<summary>Enables the word list only</summary>
	</member>	
	<member name="F:Microsoft.Ink.Factoid.Email">
		<summary>someone@example.com </summary>
	</member>	
	<member name="F:Microsoft.Ink.Factoid.Web">
		<summary>http://www.example.com</summary>
	</member>	
	<member name="F:Microsoft.Ink.Factoid.OneChar">
		<summary>All isolated ANSI characters</summary>
	</member>	
	<member name="F:Microsoft.Ink.Factoid.Number">
		<summary>Numeric values including separators, decimals, etc.</summary>
	</member>	
	<member name="F:Microsoft.Ink.Factoid.Digit">
		<summary>0-9</summary>
	</member>	
	<member name="F:Microsoft.Ink.Factoid.NumberSimple">
		<summary>Numeric values</summary>
	</member>	
	<member name="F:Microsoft.Ink.Factoid.Currency">
		<summary>$45.95, &#8364;60, &#163;50.25, &#165;3000</summary>
	</member>	
	<member name="F:Microsoft.Ink.Factoid.PostalCode">
		<summary>Postal codes, 98112</summary>
	</member>	
	<member name="F:Microsoft.Ink.Factoid.Percent">
		<summary>87%</summary>
	</member>	
	<member name="F:Microsoft.Ink.Factoid.Date">
		<summary>10/30/2001, '01, 31/12, 12/99, 1999-2000</summary>
	</member>	
	<member name="F:Microsoft.Ink.Factoid.Time">
		<summary>12:23:00 PM, 12:30, 24:30, 12:23:01, 1:12 A.M.</summary>
	</member>	
	<member name="F:Microsoft.Ink.Factoid.Telephone">
		<summary>123 555 0190, 0-123-206 555 0190, (206)555-0190</summary>
	</member>	
	<member name="F:Microsoft.Ink.Factoid.Filename">
		<summary>mydocument.doc, c:\myfolder\file.c</summary>
	</member>	
	<member name="F:Microsoft.Ink.Factoid.UpperChar">
		<summary>Single upper case alphabetical characters: A-Z</summary>
	</member>	
	<member name="F:Microsoft.Ink.Factoid.LowerChar">
		<summary>Single lower case alphabetical characters: a-z</summary>
	</member>	
	<member name="F:Microsoft.Ink.Factoid.PuncChar">
		<summary>Punctuation characters</summary>
	</member>	
	<member name="F:Microsoft.Ink.Factoid.JapaneseCommon">
		<summary>Commonly used Kanji, Katakana, and Hiragana characters</summary>
	</member>	
	<member name="F:Microsoft.Ink.Factoid.ChineseSimpleCommon">
		<summary>Commonly used Simplified Chinese characters</summary>
	</member>	
	<member name="F:Microsoft.Ink.Factoid.ChineseTraditionalCommon">
		<summary>Commonly used Traditional Chinese characters</summary>
	</member>	
	<member name="F:Microsoft.Ink.Factoid.KoreanCommon">
		<summary>Commonly used Korean characters</summary>
	</member>
 	<member name="F:Microsoft.Ink.Factoid.Hiragana">
		<summary>Hiragana characters only</summary>
	</member>
 	<member name="F:Microsoft.Ink.Factoid.Katakana">
		<summary>Katakana characters only</summary>
	</member>
 	<member name="F:Microsoft.Ink.Factoid.KanjiCommon">
		<summary>Commonly used Kanji characters</summary>
	</member>
	<member name="F:Microsoft.Ink.Factoid.KanjiRare">
		<summary>Rarely used Kanji characters </summary>
	</member>
 	<member name="F:Microsoft.Ink.Factoid.Bopomofo">
		<summary>Bopomofo characters</summary>
	</member>
	<member name="F:Microsoft.Ink.Factoid.Jamo">
		<summary>Hangul compatibility Jamo characters</summary>
	</member>
 	<member name="F:Microsoft.Ink.Factoid.HangulCommon">
		<summary>Commonly used Hangul characters</summary>
	</member>
	 	<member name="F:Microsoft.Ink.Factoid.HangulRare">
		<summary>Rarely used Hangul characters</summary>
	</member>
    	<member name="P:Microsoft.Ink.InkOverlay.Cursor">
		<summary>Gets or sets the cursor that is displayed when the mouse pointer is over the control.</summary>
	</member>
	<member name="P:Microsoft.Ink.InkOverlay.Cursors">
		<summary>Returns the number of cursors available for use in the inking region.</summary>
	</member>
  	<member name="P:Microsoft.Ink.InkPicture.Cursor">
		<summary>Gets or sets the cursor that is displayed when the mouse pointer is over the control.</summary>
	</member>
	<member name="P:Microsoft.Ink.InkPicture.Cursors">
		<summary>Returns the number of cursors available for use in the inking region.</summary>
	</member>	
	<member name="F:Microsoft.Ink.RecognizerCapabilities.DontCare">
		<summary>(Hidden) Ignores all other flags that are set.</summary>
	</member>	
	<member name="T:Microsoft.Ink.PacketProperty">
		<summary>Defines constant string values that are used to increase recognition accuracy by providing contextual information to the recognizer.</summary>
	</member>
	<member name="M:Microsoft.Ink.PacketProperty.#ctor">
		<summary>PacketProperty contstructor</summary>
	</member>	
	<member name="F:Microsoft.Ink.PacketProperty.X">
		<summary>The x-coordinate in the tablet coordinate space.</summary>
	</member>	
	<member name="F:Microsoft.Ink.PacketProperty.Y">
		<summary>The y-coordinate in the tablet coordinate space.</summary>
	</member>	
	<member name="F:Microsoft.Ink.PacketProperty.Z">
		<summary>The z-coordinate or distance of the pen tip from the tablet surface.</summary>
	</member>			
	<member name="F:Microsoft.Ink.PacketProperty.TimerTick">
		<summary>Time the packet was generated.</summary>
	</member>
	<member name="F:Microsoft.Ink.PacketProperty.SerialNumber">
		<summary>Identifies the packet.</summary>
	</member>
	<member name="F:Microsoft.Ink.PacketProperty.NormalPressure">
		<summary>Downward pressure of the pen tip on the tablet surface.</summary>
	</member>
	<member name="F:Microsoft.Ink.PacketProperty.TangentPressure">
		<summary>Diagonal pressure of the pen tip on the tablet surface. </summary>
	</member>
	<member name="F:Microsoft.Ink.PacketProperty.ButtonPressure">
		<summary>Pressure on a pressure sensitive button. </summary>
	</member>
	<member name="F:Microsoft.Ink.PacketProperty.XTiltOrientation">
		<summary>For a pen cursor, the x-tilt orientation is the angle between the y,z-plane and the pen and y-axis plane. </summary>
	</member>
	<member name="F:Microsoft.Ink.PacketProperty.YTiltOrientation">
		<summary>For a pen cursor, the y-tilt orientation is the angle between the x,z-plane and the pen and x-axis plane.</summary>
	</member>
	<member name="F:Microsoft.Ink.PacketProperty.AzimuthOrientation">
		<summary>Clockwise rotation of the cursor about the z axis through a full circular range.</summary>
	</member>
	<member name="F:Microsoft.Ink.PacketProperty.AltitudeOrientation">
		<summary>Angle between the axis of the pen and the surface of the tablet.</summary>
	</member>
		<member name="F:Microsoft.Ink.PacketProperty.TwistOrientation">
		<summary>Clockwise rotation of the cursor about its own axis. </summary>
	</member>
		<member name="F:Microsoft.Ink.PacketProperty.PitchRotation">
		<summary>Pitch identifies whether the tip is above or below a horizontal line that is perpendicular to the writing surface.</summary>
	</member>
		<member name="F:Microsoft.Ink.PacketProperty.RollRotation">
		<summary>Clockwise rotation of the pen about its own axis.</summary>
	</member>
		<member name="F:Microsoft.Ink.PacketProperty.YawRotation">
		<summary>Yaw identifies whether the tip is moving left or right around the center of its horizontal axis (pen is horizontal).</summary>
	</member>
	<member name="F:Microsoft.Ink.PacketProperty.PacketStatus">
		<summary>Contains one or more of the following flag values: IP_IN_AIR_PACKETS, IP_INVERTED, IP_CURSOR_DOWN.</summary>
	</member>	
	</members>
</doc>
