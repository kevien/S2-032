//-----------------------------------------------------------------------------
// File:			tabdef.idl
//
// Copyright:		Copyright (c) Microsoft Corporation          
//
// Contents: 		OLE DB interface definition
//
// Comments: 		
//
//-----------------------------------------------------------------------------

#include "idlmulti.h"
//

    REMOTED_INTERFACE(0c733a86-2a1c-11ce-ade5-00aa0044773d)


interface ITableDefinition : IUnknown {

	[local]
	HRESULT CreateTable(
		[in] IUnknown * pUnkOuter,
		[in] DBID * pTableID,
		[in] DBORDINAL cColumnDescs,
		[in, size_is((ULONG)cColumnDescs)] const DBCOLUMNDESC rgColumnDescs[],
		[in] REFIID riid,
		[in] ULONG cPropertySets,
		[in, out, size_is(cPropertySets)] DBPROPSET rgPropertySets[],
		[out] DBID ** ppTableID,
		[out, iid_is(riid)] IUnknown ** ppRowset
	);

#ifndef NO_REMOTE

	[call_as(CreateTable)]
	HRESULT RemoteCreateTable(
		[in] IUnknown * pUnkOuter,
		[in, unique] DBID * pTableID,
		[in] DBORDINAL cColumnDescs,
		[in, size_is((ULONG)cColumnDescs)] const DBCOLUMNDESC * rgColumnDescs,
		[in] REFIID riid,
		[in] ULONG cPropertySets,
		[in, unique, size_is(cPropertySets)] DBPROPSET * rgPropertySets,
		[in, out, unique] DBID ** ppTableID,
		[in, out, unique, iid_is(riid)] IUnknown ** ppRowset,
		[in] ULONG cTotalProps,
		[out, size_is(cTotalProps)] DBPROPSTATUS * rgPropStatus,
		[out] BOOL * pfTableCreated,
		[out] IErrorInfo ** ppErrorInfoRem
	);

#endif

	[local]
	HRESULT DropTable(
		[in, unique] DBID * pTableID
	);

	[call_as(DropTable)]
	HRESULT RemoteDropTable(
		[in, unique] DBID * pTableID,
		[out] IErrorInfo ** ppErrorInfoRem
	);

	[local]
	HRESULT AddColumn(
		[in] DBID * pTableID,
		[in, out] DBCOLUMNDESC * pColumnDesc,
		[out] DBID ** ppColumnID
	);

	[call_as(AddColumn)]
	HRESULT RemoteAddColumn(
		[in] DBID * pTableID,
		[in] DBCOLUMNDESC * pColumnDesc,
		[in, out, unique] DBID ** ppColumnID,
		[in] ULONG cTotalProps,
		[out, size_is(cTotalProps)] DBPROPSTATUS * rgPropStatus,
		[out] IErrorInfo ** ppErrorInfoRem
	);

	[local]
	HRESULT DropColumn(
		[in, unique] DBID * pTableID,
		[in, unique] DBID * pColumnID
	);

	[call_as(DropColumn)]
	HRESULT RemoteDropColumn(
		[in, unique] DBID * pTableID,
		[in, unique] DBID * pColumnID,
		[out] IErrorInfo ** ppErrorInfoRem
	);

}
